[
  {
    "class": "World",
    "name": "世界接口",
    "functions": [
      {
        "name": "isDaytime",
        "desc": "是否为白天",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--判断现在是不是白天\nlocal result=World:isDaytime()\nif result==0 then--如果是白天\n    Chat:sendSystemMsg(\"现在是白天！\")\nelse--如果不是白天\n    Chat:sendSystemMsg(\"现在是晚上！\")\nend"
      },
      {
        "name": "isCustomGame",
        "desc": "是否为自定义游戏",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--判断是不是自定义游戏\nlocal result=World:isCustomGame()\nif result==0 then--如果是自定义\n    Chat:sendSystemMsg(\"当前是自定义游戏！\")\nelse--如果不是自定义\n    Chat:sendSystemMsg(\"当前不是自定义游戏！\")\nend"
      },
      {
        "name": "isCreativeMode",
        "desc": "是否为创造模式",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断是不是创造模式\nlocal result=World:isCreativeMode()\nif result==0 then--如果是创造模式\n    Chat:sendSystemMsg(\"当前是创造模式！\")\nelse--如果不是创造模式\n    Chat:sendSystemMsg(\"当前不是创造模式！\")\nend"
      },
      {
        "name": "isGodMode",
        "desc": "多人创造模式 或者 自制玩法的编辑模式",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断是不是多人创造模式或者玩法编辑模式\nlocal result=World:isGodMode()\nif result==0 then--如果是多人创造或者玩法编辑\n    Chat:sendSystemMsg(\"当前是多人创造或玩法编辑模式！\")\nelse--如果不是\n    Chat:sendSystemMsg(\"当前不是多人创造或玩法编辑模式！\")\nend"
      },
      {
        "name": "isExtremityMode",
        "desc": "极限模式",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断是不是极限模式\nlocal result=World:isExtremityMode()\nif result==0 then--如果是极限模式\n    Chat:sendSystemMsg(\"当前是极限模式！\")\nelse--如果不是极限模式\n    Chat:sendSystemMsg(\"当前不是极限模式！\")\nend"
      },
      {
        "name": "isFreeMode",
        "desc": "冒险模式之自由模式",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断是不是冒险自由模式\nlocal result=World:isFreeMode()\nif result==0 then--如果是冒险自由模式\n    Chat:sendSystemMsg(\"当前是冒险自由模式！\")\nelse--如果不是\n    Chat:sendSystemMsg(\"当前不是冒险自由模式！\")\nend"
      },
      {
        "name": "isSurviveMode",
        "desc": "单人模式 或者 冒险模式之自由模式",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断是不是单人生存模式\nlocal result=World:isSurviveMode()\nif result==0 then--如果是单人生存模式\n    Chat:sendSystemMsg(\"当前是单人生存模式！\")\nelse--如果不是单人生存模式\n    Chat:sendSystemMsg(\"当前不是单人生存模式！\")\nend"
      },
      {
        "name": "isCreateRunMode",
        "desc": "由创造模式转的生存",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断是不是创造转生存模式\nlocal result=World:isCreateRunMode()\nif result==0 then--如果是创造转生存模式\n    Chat:sendSystemMsg(\"当前是创造转生存模式！\")\nelse--如果不是创造转生存模式\n    Chat:sendSystemMsg(\"当前不是创造转生存模式！\")\nend"
      },
      {
        "name": "isGameMakerMode",
        "desc": "自制玩法的编辑模式",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断是不是玩法编辑模式\nlocal result=World:isGameMakerMode()\nif result==0 then--如果是玩法编辑模式\n    Chat:sendSystemMsg(\"当前是玩法编辑模式！\")\nelse--如果不是玩法编辑模式\n    Chat:sendSystemMsg(\"当前不是玩法编辑模式！\")\nend"
      },
      {
        "name": "isGameMakerRunMode",
        "desc": "自制玩法的运行模式",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断是不是玩法运行模式\nlocal result=World:isGameMakerRunMode()\nif result==0 then--如果是玩法运行模式\n    Chat:sendSystemMsg(\"当前是玩法运行模式！\")\nelse--如果不是玩法运行模式\n    Chat:sendSystemMsg(\"当前不是玩法运行模式！\")\nend"
      },
      {
        "name": "getHours",
        "desc": "获取游戏当前时间(h)",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取当前时间\nlocal result,time=World:getHours()\n--在聊天框显示\nChat:sendSystemMsg(\"现在是\"..time..\"点！\")"
      },
      {
        "name": "setHours",
        "desc": "设置游戏当前时间(h)",
        "parm": [
          {
            "key": "hour",
            "type": "Number",
            "name": "小时时间"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置时间为8点\nWorld:setHours(8)\n--在聊天框显示\nChat:sendSystemMsg(\"时间设置为8点！\")"
      },
      {
        "name": "getCameraEditState",
        "desc": "获取视角编辑状态",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "state",
            "type": "Number",
            "name": "0默认，1编辑状态，2测试状态"
          }
        ],
        "example": "--获取当前视角编辑状态\nlocal result,state=World:getCameraEditState()\nif state==0 then--0:默认\n    Chat:sendSystemMsg(\"当前视角编辑状态为:默认\")\nelseif state==1 then--1:编辑中\n    Chat:sendSystemMsg(\"当前视角编辑状态为:编辑中\")\nelseif state==2 then--2:测试中\n    Chat:sendSystemMsg(\"当前视角编辑状态为:测试中\")\nend"
      },
      {
        "name": "setCameraEditState",
        "desc": "设置视角编辑状态",
        "parm": [
          {
            "key": "state",
            "type": "",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = World:setCameraEditState(state)"
      },
      {
        "name": "getCustomCameraConfig",
        "desc": "获取自定义相机配置",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "config",
            "type": "",
            "name": ""
          }
        ],
        "example": "local result = World:getCustomCameraConfig()"
      },
      {
        "name": "getRangeXZ",
        "desc": "获取区块(chunk)范围，返回区块始末位置",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "startX",
            "type": "Number",
            "name": ""
          },
          {
            "key": "startZ",
            "type": "Number",
            "name": ""
          },
          {
            "key": "endX",
            "type": "Number",
            "name": ""
          },
          {
            "key": "endZ",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取区块范围\nlocal result,startX,startZ,endX,endZ=World:getRangeXZ()\nChat:sendSystemMsg(\"区块起点横坐标：\"..startX)\nChat:sendSystemMsg(\"区块起点纵坐标：\"..startZ)\nChat:sendSystemMsg(\"区块终点横坐标：\"..endX)\nChat:sendSystemMsg(\"区块终点纵坐标：\"..endZ)"
      },
      {
        "name": "getRayLength",
        "desc": "计算指定方向射线长度(遇到方块结束)",
        "parm": [
          {
            "key": "srcx",
            "type": "Number",
            "name": "起始点坐标"
          },
          {
            "key": "srcy",
            "type": "Number",
            "name": "起始点坐标"
          },
          {
            "key": "srcz",
            "type": "Number",
            "name": "起始点坐标"
          },
          {
            "key": "dstx",
            "type": "Number",
            "name": "终点坐标"
          },
          {
            "key": "dsty",
            "type": "Number",
            "name": "终点坐标"
          },
          {
            "key": "dstz",
            "type": "Number",
            "name": "终点坐标"
          },
          {
            "key": "distance",
            "type": "Number",
            "name": "预测的最大距离"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "length",
            "type": "Number",
            "name": "两点间的长度"
          }
        ],
        "example": "local function ClickBlock(event)\n    local srcx,srcy,srcz=0,7,0--计算起点\n    local dstx,dsty,dstz=0,7,10--计算终点(方向)\n    local distance=1--计算距离(意义不明)\n\t--获取从起点开始，向终点方向到第一个方块的距离\n    local result,length=World:getRayLength(srcx, srcy, srcz, dstx, dsty, dstz, distance)\n    Chat:sendSystemMsg(math.floor(length))\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getRayBlock",
        "desc": "射线打到的方块类型(遇到方块结束)",
        "parm": [
          {
            "key": "srcx",
            "type": "Number",
            "name": "起始点"
          },
          {
            "key": "srcy",
            "type": "Number",
            "name": "起始点"
          },
          {
            "key": "srcz",
            "type": "Number",
            "name": "起始点"
          },
          {
            "key": "face",
            "type": "Number",
            "name": ""
          },
          {
            "key": "distance",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取从(0,0)高度10开始，向北50格内碰到的第一个方块id\n--方向参数：0西 1东 2南 3北 4下 5上\nlocal result,blockid=World:getRayBlock(0,10,0,3,50)\nif id==-1 then--如果50格内没有方块\n    Chat:sendSystemMsg(\"从(0,0)高度10开始，向北50格没有方块\")\nelse--如果50格内有方块\n    Chat:sendSystemMsg(\"从(0,0)高度10开始，向北50格第一个方块id是\"..blockid)\nend"
      },
      {
        "name": "getActorsByBox",
        "desc": "获取范围内actor,type参考OBJ_TYPE，0表示范围内全部的actor, 返回数量和objid数组",
        "parm": [
          {
            "key": "objtype",
            "type": "Number",
            "name": "指定类型"
          },
          {
            "key": "x1",
            "type": "Number",
            "name": "起始位置"
          },
          {
            "key": "y1",
            "type": "Number",
            "name": "起始位置"
          },
          {
            "key": "z1",
            "type": "Number",
            "name": "起始位置"
          },
          {
            "key": "x2",
            "type": "Number",
            "name": "最终位置"
          },
          {
            "key": "y2",
            "type": "Number",
            "name": "最终位置"
          },
          {
            "key": "z2",
            "type": "Number",
            "name": "最终位置"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          },
          {
            "key": "objids",
            "type": "tableobjid",
            "name": "数组"
          }
        ],
        "example": "--参数：\nlocal objtype=1--类型参数：0全部 1玩家 2生物 3掉落物 4投掷物\nlocal x1,y1,z1=0,7,0--区域起点坐标\nlocal x2,y2,z2=50,57,50--区域终点坐标\n--获取(x0,z0)高度y0到(x1,z1)高度y1范围内，类型为type的物品数量与列表\nlocal result,num,objids=World:getActorsByBox(objtype,x1,y1,z1,x2,y2,z2)\n--在聊天框显示数量\nChat:sendSystemMsg(\"在范围内一共有\"..num..\"个玩家\")\n--在聊天框显示列表\nfor i,a in ipairs(objids) do\n    Chat:sendSystemMsg(\"第\"..i..\"个:\"..a)\nend"
      },
      {
        "name": "getPlayerTotal",
        "desc": "获取全部玩家数量，默认全部玩家",
        "parm": [
          {
            "key": "alive",
            "type": "Number",
            "name": "0表示阵亡，1表示存活，默认-1表示全体玩家"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "数量"
          }
        ],
        "example": "--获取当前存档玩家总数\nlocal result,num=World:getPlayerTotal(-1)\nChat:sendSystemMsg(\"当前存档玩家总数为：\"..num)\n--获取当前存档阵亡玩家数\nresult,num=World:getPlayerTotal(0)\nChat:sendSystemMsg(\"当前存档阵亡玩家数为：\"..num)\n--获取当前存档存活玩家数\nresult,num=World:getPlayerTotal(1)\nChat:sendSystemMsg(\"当前存档存活玩家数为：\"..num)"
      },
      {
        "name": "getAllPlayers",
        "desc": "获取全部玩家,可限制存活情况(0表示存活，1表示阵亡)，默认全部玩家",
        "parm": [
          {
            "key": "alive",
            "type": "Number",
            "name": "0表示阵亡，1表示存活，默认-1表示全体玩家"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "数量"
          },
          {
            "key": "array",
            "type": "table",
            "name": "玩家ID数组"
          }
        ],
        "example": "--获取当前存档全部玩家列表\n--参数：-1全部玩家 0阵亡玩家 1存活玩家\nlocal result,num,array=World:getAllPlayers(-1)\n--在聊天框显示数量\nChat:sendSystemMsg(\"当前存档一共有\"..num..\"个玩家\")\n--在聊天框显示列表\nfor i,a in ipairs(array) do\n    Chat:sendSystemMsg(\"第\"..i..\"个:\"..a)\nend"
      },
      {
        "name": "randomOnePlayer",
        "desc": "随机获取一名玩家",
        "parm": [
          {
            "key": "alive",
            "type": "Number",
            "name": "0表示阵亡，1表示存活，默认-1表示全体玩家"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--从全部玩家中随机选取一名玩家\n--参数：-1全部玩家 0阵亡玩家 1存活玩家\nlocal result,playerid=World:randomOnePlayer(-1)\n--在聊天框显示\nChat:sendSystemMsg(\"随机选取了一名玩家：\"..playerid)"
      },
      {
        "name": "despawnActor",
        "desc": "移除actor",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--参数：\nlocal type=2--类型参数：1玩家 2生物 3掉落物 4投掷物\nlocal x0,y0,z0=0,7,0--区域起点坐标\nlocal x1,y1,z1=50,57,50--区域终点坐标\n--获取(x0,z0)高度y0到(x1,z1)高度y1范围内，类型为type的物品数量与列表\nlocal result,n,actors=World:getActorsByBox(type,x0,y0,z0,x1,y1,z1)\nif n>0 then--如果范围内生物数量大于0\n    --移除其中一个生物\n    World:despawnActor(actors[1])\n    --在聊天框显示\n    Chat:sendSystemMsg(\"移除了\"..actors[1])\nelse--如果范围内没有生物\n    --在聊天框显示\n    Chat:sendSystemMsg(\"(0,7,0)至(50,57,50)范围内没有生物\")\nend"
      },
      {
        "name": "spawnCreature",
        "desc": "生成生物(包括怪物、NPC、动物等)",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actorid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "objids",
            "type": "tableobjid",
            "name": "数组"
          }
        ],
        "example": "--在(0,0)高度7的位置生成3只鸡\n--前三个参数0,7,0是生成坐标\n--第四个参数3400是生成的生物id\n--最后一个参数3是生成的数量\nlocal result,objids=World:spawnCreature(0,7,0,3400,3)\n--在聊天框显示提示\nChat:sendSystemMsg(\"在(0,0)高度7的位置生成了3只鸡，它们在存档中的id分别是：\")\n--在聊天框显示id列表\nfor i=1,#objids do\n    Chat:sendSystemMsg(objids[i])\nend"
      },
      {
        "name": "despawnCreature",
        "desc": "移除生物",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--参数：\nlocal type=2--类型参数：1玩家 2生物 3掉落物 4投掷物\nlocal x0,y0,z0=0,7,0--区域起点坐标\nlocal x1,y1,z1=50,57,50--区域终点坐标\n--获取(x0,z0)高度y0到(x1,z1)高度y1范围内，类型为type的物品数量与列表\nlocal result,n,actors=World:getActorsByBox(type,x0,y0,z0,x1,y1,z1)\nif n>0 then--如果范围内生物数量大于0\n    --移除其中一个生物\n    World:despawnCreature(actors[1])\n    --在聊天框显示\n    Chat:sendSystemMsg(\"移除了\"..actors[1])\nelse--如果范围内没有生物\n    --在聊天框显示\n    Chat:sendSystemMsg(\"(0,7,0)至(50,57,50)范围内没有生物\")\nend"
      },
      {
        "name": "spawnItem",
        "desc": "在指定位置生成道具",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--在(0,0)高度7的位置生成3个土块\n--前三个参数0,7,0是生成坐标\n--第四个参数101是生成的物品id\n--最后一个参数3是生成的数量\nlocal result,objid=World:spawnItem(0,7,0,101,3)\n--在聊天框显示提示\nChat:sendSystemMsg(\"在(0,0)高度7的位置生成了3个土块，它们在存档中的id是\"..objid)"
      },
      {
        "name": "despawnItemByBox",
        "desc": "移除道具(通过区域)",
        "parm": [
          {
            "key": "x1",
            "type": "Number",
            "name": "起始位置"
          },
          {
            "key": "y1",
            "type": "Number",
            "name": "起始位置"
          },
          {
            "key": "z1",
            "type": "Number",
            "name": "起始位置"
          },
          {
            "key": "x2",
            "type": "Number",
            "name": "最终位置"
          },
          {
            "key": "y2",
            "type": "Number",
            "name": "最终位置"
          },
          {
            "key": "z2",
            "type": "Number",
            "name": "最终位置"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除指定区域内所有掉落物\n--前三个参数为区域起点坐标\n--后三个参数为区域终点坐标\nWorld:despawnItemByBox(-20,0,-20,20,50,20)\n--在聊天框显示\nChat:sendSystemMsg(\"移除了(-20,0,-20)至(20,50,20)区域内的所有掉落物\")"
      },
      {
        "name": "despawnItemByObjid",
        "desc": "移除道具(通过ID)",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当有玩家做动画表情，移除房主周围10格内的某一掉落物\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n    --获取房主的坐标\n    local result,x,y,z=Player:getPosition(0)\n    --获取房主周围10格内的掉落物数量和列表\n    local result2,num,list=World:getActorsByBox(3,x-10,y-10,z-10,x+10,y+10,z+10)\n    if num>0 then--如果存在掉落物\n        --移除第一组物品\n        World:despawnItemByObjid(list[1])\n        --在聊天框显示\n        Chat:sendSystemMsg(\"附近10格发现掉落物品，已移除了其中一组\")\n    else--如果不存在掉落物\n        --在聊天框显示\n        Chat:sendSystemMsg(\"附近10格没有发现掉落物品！\")\n    end\nend\n--注册动画表情监听器，当玩家做动画表情时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "spawnProjectile",
        "desc": "生成投掷物",
        "parm": [
          {
            "key": "shooter",
            "type": "Number",
            "name": "设置投掷物归属的objid"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "投掷物id"
          },
          {
            "key": "x",
            "type": "Number",
            "name": "投掷物起点"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "投掷物起点"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "投掷物起点"
          },
          {
            "key": "dstx",
            "type": "Number",
            "name": "投掷物终点"
          },
          {
            "key": "dsty",
            "type": "Number",
            "name": "投掷物终点"
          },
          {
            "key": "dstz",
            "type": "Number",
            "name": "投掷物终点"
          },
          {
            "key": "speed",
            "type": "Number",
            "name": "投掷物速度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "objid",
            "type": "Number",
            "name": "投掷物的实例ID"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal shooter=event.eventobjid--投掷物发射者的实体id，这里是点击方块的玩家\n\tlocal itemid=12054--投掷物id，这里是小雪球\n\tlocal x,y,z=event.x,event.y+1,event.z--投掷起点坐标\n\tlocal dstx,dsty,dstz=event.x,event.y+10,event.z--向此坐标投掷\n\tlocal speed=50--抛出速度\n\t--创建并发射投掷物\n    World:spawnProjectile(shooter, itemid, x, y, z, dstx, dsty, dstz, speed)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "spawnProjectileByDir",
        "desc": "生成投掷物(通过方向)",
        "parm": [
          {
            "key": "shooter",
            "type": "Number",
            "name": "设置投掷物归属的objid"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "投掷物id"
          },
          {
            "key": "x",
            "type": "Number",
            "name": "投掷物起点"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "投掷物起点"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "投掷物起点"
          },
          {
            "key": "dstx",
            "type": "Number",
            "name": "投掷物终点"
          },
          {
            "key": "dsty",
            "type": "Number",
            "name": "投掷物终点"
          },
          {
            "key": "dstz",
            "type": "Number",
            "name": "投掷物终点"
          },
          {
            "key": "speed",
            "type": "Number",
            "name": "投掷物速度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "objid",
            "type": "Number",
            "name": "投掷物的实例ID"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal shooter=event.eventobjid--投掷物发射者的实体id，这里是点击方块的玩家\n\tlocal itemid=12054--投掷物id，这里是小雪球\n\tlocal x,y,z=event.x,event.y+1,event.z--投掷起点坐标\n\tlocal dirx,diry,dirz=0,1,0--向此方向投掷\n\tlocal speed=50--抛出速度\n\t--创建并发射投掷物\n    World:spawnProjectileByDir(shooter, itemid, x, y, z, dirx, diry, dirz, speed)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "calcDistance",
        "desc": "计算位置之间的距离",
        "parm": [
          {
            "key": "pos1",
            "type": "table",
            "name": "起始位置{x,y,z}"
          },
          {
            "key": "pos2",
            "type": "table",
            "name": "最终位置{x,y,z}"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "distance",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--计算两点间的直线距离\n--第一个参数是由起点坐标组成的表\n--第二个参数是由终点坐标组成的表\nlocal result,distance=World:calcDistance({x=0,y=0,z=0},{x=10,y=10,z=10})\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度0到(10,10)高度10的直线距离是\"..distance)"
      },
      {
        "name": "playParticalEffect",
        "desc": "在指定位置播放特效",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "particleId",
            "type": "Number",
            "name": "特效id"
          },
          {
            "key": "scale",
            "type": "Number",
            "name": "特效大小"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--在(0,0)高度7的位置播放烟雾特效\n--前三个参数是播放特效的位置坐标\n--第四个参数是播放特效的特效id，具体可以在“迷你世界ID查询”的“特效表数据”里查看\n--最后一个参数是特效的缩放比例\nWorld:playParticalEffect(0,7,0,1001,1)\n--在聊天框显示\nChat:sendSystemMsg(\"在(0,0)高度7的位置生成了一个烟雾特效\")"
      },
      {
        "name": "stopEffectOnPosition",
        "desc": "停止指定位置的特效",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "particleId",
            "type": "Number",
            "name": "特效id"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--停止指定位置的指定特效\n--前三个参数是停止播放特效的位置坐标\n--最后一个参数是需要停止的特效id\nWorld:stopEffectOnPosition(0,7,0,1001)\n--在聊天框显示\nChat:sendSystemMsg(\"停止了(0,0)高度7位置的1001烟雾特效\")"
      },
      {
        "name": "setEffectScaleOnPosition",
        "desc": "设置指定位置的特效大小",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "particleId",
            "type": "Number",
            "name": "特效id"
          },
          {
            "key": "scale",
            "type": "Number",
            "name": "特效大小"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--缩放指定位置的指定特效\n--前三个参数是需要缩放特效的坐标\n--第四个参数是需要缩放的特效id\n--最后一个参数是设置的缩放比例\nWorld:setEffectScaleOnPosition(0,7,0,1001,2)\n--在聊天框显示\nChat:sendSystemMsg(\"把(0,0)高度7位置的烟雾特效放大了两倍\")"
      },
      {
        "name": "randomParticleEffectID",
        "desc": "随机特效类型，随机返回一种特效ID",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "result",
            "type": "Number",
            "name": "特效id"
          }
        ],
        "example": "--获取一个随机特效id\nlocal result,id=World:randomParticleEffectID()\n--在聊天框显示\nChat:sendSystemMsg(\"获取到了一个随机特效id：\"..id)"
      },
      {
        "name": "playSoundEffectOnPos",
        "desc": "在指定位置上播放指定音效",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "{x,y,z}"
          },
          {
            "key": "soundId",
            "type": "Number",
            "name": "音效ID"
          },
          {
            "key": "volume",
            "type": "Number",
            "name": "音量调节"
          },
          {
            "key": "pitch",
            "type": "Number",
            "name": "音调调节"
          },
          {
            "key": "isLoop",
            "type": "bool",
            "name": "是否循环播放"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--在(0,0)高度7的位置播放音乐10713\n--第一个参数为播放音乐的坐标组成的表\n--第二个参数10713为播放的音效id，具体可以在“迷你世界ID查询”的“音效表数据”里查看\n--后三个参数分别是：音量、音高、是否循环播放\nWorld:playSoundEffectOnPos({x=0,y=7,z=0},10713,100,1,false)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度7的位置正在播放音乐\")"
      },
      {
        "name": "stopSoundEffectOnPos",
        "desc": "停止指定位置上的指定音效",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "{x,y,z}"
          },
          {
            "key": "soundId",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--在(0,0)高度7的位置播放音乐10713\nWorld:playSoundEffectOnPos({x=0,y=7,z=0},10713,100,1,false)\n--在聊天框显示提示\nChat:sendSystemMsg(\"(0,0)高度7的位置正在播放音乐，做动画表情即可停止播放\")\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n    --停止(0,0)高度7位置音乐10713的播放\n    --第一个参数为要停止播放音乐的坐标组成的表\n    --第二个参数为要停止播放的音乐id，具体可以在“迷你世界ID查询”的“音效表数据”里查看\n    World:stopSoundEffectOnPos({x=0,y=7,z=0},10713)\n    --在聊天框显示\n    Chat:sendSystemMsg(\"停止了(0,0)高度7音乐10713的播放\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "getLightByPos",
        "desc": "获取光照强度",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "lightlv",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal x,y,z=event.x,event.y+1,event.z--要获取亮度的坐标，这里是被点击的方块表面(上面1格)\n\tlocal result,lightlv=World:getLightByPos(x,y,z)--获取坐标的亮度\n\tChat:sendSystemMsg(lightlv)--在聊天框显示\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "setBlockLightEx",
        "desc": "设置光照强度",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "lv",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal x,y,z=event.x,event.y+1,event.z--要设置亮度的坐标，这里是被点击的方块表面(上面1格)\n\tlocal lv=15--要设置的亮度级别(0-15)\n\tWorld:setBlockLightEx(x, y, z, lv)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "randomSoundID",
        "desc": "随机出来的音乐ID",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "soundid",
            "type": "Number",
            "name": "声音ID"
          }
        ],
        "example": "local result,soundid = World:randomSoundID()"
      },
      {
        "name": "randomWeatherID",
        "desc": "随机出来的天气ID",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "wtype",
            "type": "Number",
            "name": "天气类型ID"
          }
        ],
        "example": "local result,wtype = World:randomWeatherID()"
      },
      {
        "name": "getLocalDate",
        "desc": "获取主机时间",
        "parm": [
          {
            "key": "enum",
            "type": "",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "year",
            "type": "Number",
            "name": "年日期"
          }
        ],
        "example": "local result, year = World:getLocalDate(EVENTDATE.YEAR) -- 获取年"
      },
      {
        "name": "getLocalDateString",
        "desc": "获取完整设备时间",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "date",
            "type": "String",
            "name": "完整日期"
          }
        ],
        "example": "local result,date = World:getLocalDateString() -- 获取日期"
      },
      {
        "name": "getServerDate",
        "desc": "获取服务器时间",
        "parm": [
          {
            "key": "enum",
            "type": "",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "year",
            "type": "Number",
            "name": "年日期"
          }
        ],
        "example": "function Game_StartGame(obj)\n    local result, year = World:getServerDate(EVENTDATE.YEAR) -- 获取服务器时间的年\n      Chat:sendSystemMsg(year, 0)end\nScriptSupportEvent:registerEvent([=[Game.Start]=], Game_StartGame)"
      },
      {
        "name": "getServerDateString",
        "desc": "获取完整服务器时间",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "date",
            "type": "String",
            "name": "完整服务器日期"
          }
        ],
        "example": "function Game_StartGame(obj)\n  local result,date = World:getServerDateString() -- 获取服务器日期\n  Chat:sendSystemMsg(date, 0)end\nScriptSupportEvent:registerEvent([=[Game.Start]=], Game_StartGame)"
      },
      {
        "name": "getDateFromTime",
        "desc": "转换时间戳为时间单位",
        "parm": [
          {
            "key": "time",
            "type": "Number",
            "name": "传入时间戳"
          },
          {
            "key": "enum",
            "type": "",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "year",
            "type": "Number",
            "name": "年日期"
          }
        ],
        "example": "local result, year = World:getDateFromTime(os.time(),EVENTDATE.YEAR) -- 获取年"
      },
      {
        "name": "getDateStringFromTime",
        "desc": "转换时间戳为完整时间",
        "parm": [
          {
            "key": "time",
            "type": "Number",
            "name": "传入时间戳"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "date",
            "type": "String",
            "name": "完整日期"
          }
        ],
        "example": "local result, date = World:getDateStringFromTime(os.time()) --  完整日期"
      },
      {
        "name": "SetTimeVanishingSpeed",
        "desc": "设置天空盒时间流逝速度",
        "parm": [
          {
            "key": "speed",
            "type": "Number",
            "name": "天空盒时间"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = World:SetTimeVanishingSpeed(speed)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetSkyBoxTemplate",
        "desc": "设置天空盒模板",
        "parm": [
          {
            "key": "value",
            "type": "Number",
            "name": "参数值(0-9)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = World:SetSkyBoxTemplate(value)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetSkyBoxMaps",
        "desc": "设置天空盒贴图",
        "parm": [
          {
            "key": "time",
            "type": "time",
            "name": "游戏时间"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "贴图类型(SKYBOXMAP)SKYBOXMAP"
          },
          {
            "key": "url",
            "type": "String",
            "name": "图片链接"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = World:SetSkyBoxMaps(itype, url)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetSkyBoxColor",
        "desc": "设置天空盒颜色参数",
        "parm": [
          {
            "key": "time",
            "type": "time",
            "name": "游戏时间"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "颜色属性枚举(SKYBOXCOLOR)SKYBOXCOLOR"
          },
          {
            "key": "color",
            "type": "String",
            "name": "16进制颜色值(0xffffff)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = World:SetSkyBoxColor(time, itype, color)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetSkyBoxAttr",
        "desc": "设置天空盒属性参数",
        "parm": [
          {
            "key": "time",
            "type": "time",
            "name": "游戏时间"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "参数类型(SKYBOXATTR)SKYBOXATTR"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "参数值(0~100)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = World:SetSkyBoxAttr(time, itype, value)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetSkyBoxFilter",
        "desc": "设置天空盒滤镜参数",
        "parm": [
          {
            "key": "time",
            "type": "time",
            "name": "游戏时间"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "参数类型(SKYBOXFILTER)SKYBOXFILTER"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "参数值(0~100)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = World:SetSkyBoxFilter(playerid, itype, value)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetSkyBoxSwitch",
        "desc": "天空盒属性开关",
        "parm": [
          {
            "key": "time",
            "type": "time",
            "name": "游戏时间"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "参数类型(SKYBOXSWITCH)SKYBOXSWITCH"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "参数值(0~1)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = World:SetSkyBoxSwitch(time, itype, value)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetSkyBoxFilterSwitch",
        "desc": "天空盒滤镜属性开关",
        "parm": [
          {
            "key": "time",
            "type": "time",
            "name": "游戏时间"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "参数类型(SKYBOXFILTERSWITCH)SKYBOXFILTERSWITCH"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "参数值(0~1)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = World:SetSkyBoxFilterSwitch(playerid, itype, value)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetGroupWeather",
        "desc": "设置天气组天气",
        "parm": [
          {
            "key": "groupid",
            "type": "Number",
            "name": "地形组ID(WEATHERGROUP)WEATHERGROUP"
          },
          {
            "key": "weatherid",
            "type": "Number",
            "name": "天气类型(WEATHERSTATUS)WEATHERSTATUS"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local ret  = World:SetGroupWeather(groupid, weatherid)\nif ret == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "GetGroupWeather",
        "desc": "获取天气组天气",
        "parm": [
          {
            "key": "groupid",
            "type": "Number",
            "name": "地形组ID(WEATHERGROUP)"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local ret  = World:GetGroupWeather(groupid)\nif ret == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      }
    ]
  },
  {
    "class": "Game",
    "name": "游戏接口",
    "functions": [
      {
        "name": "doGameEnd",
        "desc": "游戏结束",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--每当玩家做动画表情，就会游戏结束\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n    --结束游戏\n    Game:doGameEnd(nil)\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "dispatchEvent",
        "desc": "派发自定义事件",
        "parm": [
          {
            "key": "msgid",
            "type": "String",
            "name": "事件ID"
          },
          {
            "key": "params",
            "type": "table",
            "name": "事件参数"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--派发自定义事件\nlocal function func_event(param)\n    local data = {id = 123,ops = \"aaa\"}\n    local ok, json = pcall(JSON.encode, JSON, data)\n      Game:dispatchEvent(\"customevent\",{customdata = json})\nend\nScriptSupportEvent:registerEvent('Player.PlayAction', func_event)\n--自定义事件监听\nlocal function func_event(param)\n    print(param)\nend\nScriptSupportEvent:registerEvent('customevent', func_event)"
      },
      {
        "name": "getDefString",
        "desc": "获取默认字符串",
        "parm": [
          {
            "key": "id",
            "type": "String",
            "name": "字符串ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "str",
            "type": "String",
            "name": "获取到的字符串"
          }
        ],
        "example": "--获取id为1的默认字符串，参数1为默认字符串id(不建议使用此接口)\nlocal result,str=Game:getDefString(1)\n--在聊天框显示\nChat:sendSystemMsg(\"id为1的默认字符串内容为：\"..str)"
      },
      {
        "name": "setScriptVar",
        "desc": "设置脚本参数，供自定义使用",
        "parm": [
          {
            "key": "index",
            "type": "Number",
            "name": "序列索引(0~100)"
          },
          {
            "key": "val",
            "type": "Number",
            "name": "索引对应的值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code = Game:setScriptVar(index, val)\nif code == ErrorCode.OK then\n    print('执行成功', code )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "getScriptVar",
        "desc": "获取脚本参数，自定义使用",
        "parm": [
          {
            "key": "index",
            "type": "Number",
            "name": "序列索引(0~100)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "val",
            "type": "Number",
            "name": "索引对应的值"
          }
        ],
        "example": "local code, val = Game:getScriptVar(index)\nif code == ErrorCode.OK then\n    print('执行成功', code, val )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "sendScriptVars2Client",
        "desc": "上传设置好的脚本参数",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code = Game:sendScriptVars2Client()\nif code == ErrorCode.OK then\n    print('执行成功', code )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "addRenderGlobalEffect",
        "desc": "新增全局效果",
        "parm": [
          {
            "key": "path",
            "type": "String",
            "name": "效果名称"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--在游戏添加一个迷雾特效，目前参数只支持一个\"particles/Fog.ent\"\nlocal result,effectid = Game:addRenderGlobalEffect(\"particles/Fog.ent\")\n--在聊天框显示\nChat:sendSystemMsg(\"添加了一个迷雾效果！id为\"..effectid)"
      },
      {
        "name": "removeRenderGlobalEffect",
        "desc": "移除全局效果",
        "parm": [
          {
            "key": "path",
            "type": "String",
            "name": "效果ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--移除id为1的地图特效，参数1为要移除的特效id\nGame:removeRenderGlobalEffect(1)\n--在聊天框显示\nChat:sendSystemMsg(\"移除了id为1的地图特效\")"
      },
      {
        "name": "setRenderGlobalEffectPos",
        "desc": "设置全局效果位置",
        "parm": [
          {
            "key": "effectid",
            "type": "String",
            "name": "效果ID"
          },
          {
            "key": "x",
            "type": "Number",
            "name": "方块坐标"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "方块坐标"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "方块坐标"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--把id为1的地图特效移动至(10,10)高度7\n--第一个参数为特效id\n--后三个参数为移动至坐标\nGame:setRenderGlobalEffectPos(1,10,7,10)\n--在聊天框显示\nChat:sendSystemMsg(\"把id为1的特效移动到了坐标(0,0)高度7的位置\")"
      },
      {
        "name": "setRenderGlobalEffectScale",
        "desc": "设置全局效果缩放",
        "parm": [
          {
            "key": "effectid",
            "type": "String",
            "name": "效果ID"
          },
          {
            "key": "scalex",
            "type": "numberx",
            "name": "缩放值"
          },
          {
            "key": "scaley",
            "type": "numbery",
            "name": "缩放值"
          },
          {
            "key": "scalez",
            "type": "numberz",
            "name": "缩放值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--把id为1的地图特效放大两倍\n--第一个参数为需要缩放的特效id\n--后三个参数分别为特效在x、y、z方向上的缩放倍数\nGame:setRenderGlobalEffectScale(1,2,2,2)\n--在聊天框显示\nChat:sendSystemMsg(\"把id为1的特效放大了2倍\")"
      },
      {
        "name": "msgBox",
        "desc": "消息弹框",
        "parm": [
          {
            "key": "msg",
            "type": "String",
            "name": "设置的消息"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--每当玩家做动画表情，显示一个弹窗\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n    --显示一个游戏弹窗，参数为弹窗显示内容\n    Game:msgBox(\"这是一个弹窗！\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "splitStr",
        "desc": "分割字符串",
        "parm": [
          {
            "key": "str",
            "type": "String",
            "name": "分割的字符串"
          },
          {
            "key": "mark",
            "type": "",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "strs",
            "type": "table",
            "name": "字符串组"
          }
        ],
        "example": "local code, strs = Game:splitStr(str, mark)\nif code == ErrorCode.OK then\n    print('执行成功', code, strs )\nelse\n    print('执行失败')\nend"
      }
    ]
  },
  {
    "class": "Block",
    "name": "方块接口",
    "functions": [
      {
        "name": "isSolidBlock",
        "desc": "是否是固体方块",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--判断(0,0)高度6的位置是不是固体方块\nlocal result=Block:isSolidBlock(0,6,0)\nif result==0 then--是固体方块\n\tChat:sendSystemMsg(\"坐标(0,0)高度6的位置是固体方块\")\nelse--不是固体方块\n\tChat:sendSystemMsg(\"坐标(0,0)高度6的位置不是固体方块\")\nend"
      },
      {
        "name": "isLiquidBlock",
        "desc": "是否是液体方块",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--判断(0,0)高度6的位置是不是液体方块\nlocal result=Block:isLiquidBlock(0,6,0)\nif result==0 then--是液体方块\n\tChat:sendSystemMsg(\"坐标(0,0)高度6的位置是液体方块\")\nelse--不是液体方块\n\tChat:sendSystemMsg(\"坐标(0,0)高度6的位置不是液体方块\")\nend"
      },
      {
        "name": "isAirBlock",
        "desc": "是否是气体方块",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--判断(0,0)高度6的位置是不是气体方块\nlocal result=Block:isAirBlock(0,6,0)\nif result==0 then--是气体方块\n\tChat:sendSystemMsg(\"坐标(0,0)高度6的位置是气体方块\")\nelse--不是气体方块\n\tChat:sendSystemMsg(\"坐标(0,0)高度6的位置不是气体方块\")\nend"
      },
      {
        "name": "getBlockID",
        "desc": "获取block对应id",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "id",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取(0,0)高度6的位置的方块id\nlocal result,id=Block:getBlockID(0,6,0)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度6的位置的方块id是\"..id)"
      },
      {
        "name": "setBlockAll",
        "desc": "设置blockalldata 更新+通知",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "data",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把(0,0)高度6的位置设置为基岩\n--倒数第二个参数1为方块id，最后一个参数0为方块data\n--data是方块数据，比如硬砂块的颜色、音乐方块的音调等等，具体可以用getBlockData获取\nBlock:setBlockAll(0,6,0,1,0)\n--在聊天框显示\nChat:sendSystemMsg(\"把(0,0)高度6的位置设置为基岩，data为0\")"
      },
      {
        "name": "getBlockData",
        "desc": "获得blockdata",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "data",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取(0,0)高度6的位置的方块data\n--data是方块数据，比如硬砂块的颜色、音乐方块的音调等等\nlocal result,data=Block:getBlockData(0,6,0)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度6的位置的方块data是\"..data)"
      },
      {
        "name": "destroyBlock",
        "desc": "摧毁方块 dropitem:掉落道具(默认false,不掉落)",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "dropitem",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--破坏(0,0)高度6的方块并掉落\n--最后一个参数true为掉落，false为不掉落\nBlock:destroyBlock(0,6,0,true)\n--在聊天框显示\nChat:sendSystemMsg(\"破坏了(0,0)高度6的方块并掉落\")"
      },
      {
        "name": "placeBlock",
        "desc": "放置方块",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "face",
            "type": "Number",
            "name": ""
          },
          {
            "key": "color",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--在(0,0)高度7放置一个基岩，朝向西。如果这个位置已经有了方块是无法放置的。\n--第一个参数1为放置的方块id\n--中间三个参数0,7,0为放置坐标\n--最后一个参数0为朝向参数：0西 1东 2南 3北 4下 5上\nBlock:placeBlock(1,0,7,0,0)\n--在聊天框显示\nChat:sendSystemMsg(\"在(0,0)高度7的位置放置了一个基岩，朝向西\")"
      },
      {
        "name": "replaceBlock",
        "desc": "替换方块",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "face",
            "type": "Number",
            "name": ""
          },
          {
            "key": "color",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把(0,0)高度6的位置替换为基岩，朝向西。\n--第一个参数1为放置的方块id\n--中间三个参数0,6,0为替换坐标\n--最后一个参数0为朝向参数：0西 1东 2南 3北 4下 5上\nBlock:placeBlock(1,0,6,0,0)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度6的位置被替换成了基岩，朝向西\")"
      },
      {
        "name": "setBlockAllForUpdate",
        "desc": "设置blockalldata 通知周围方块",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把(0,0)高度6的位置设置为基岩(id:1)\n--前三个参数0,6,0为坐标，最后一个参数1为方块id\nBlock:setBlockAllForUpdate(0,6,0,1)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度6的位置被设置为了基岩\")"
      },
      {
        "name": "setBlockAllForNotify",
        "desc": "设置blockalldata 更新当前位置方块",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把(0,0)高度6的位置设置为基岩(id:1)\n--前三个参数0,6,0为坐标，最后一个参数1为方块id\nBlock:setBlockAllForNotify(0,6,0,1)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度6的位置被设置为了基岩\")"
      },
      {
        "name": "setBlockSettingAttState",
        "desc": "设置方块设置属性状态",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attrtype",
            "type": "",
            "name": ""
          },
          {
            "key": "switch",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把所有土块设置为不可破坏\n--第一个参数101为方块id\n--第二个参数1为方块属性：1破坏 2操作 4推拉 8掉落 16推拉掉落\n--第三个参数false为“不可”，改为true表示“可以”\nBlock:setBlockSettingAttState(101,1,false)\n--在聊天框显示\nChat:sendSystemMsg(\"所有土块被设置为了不可破坏！\")"
      },
      {
        "name": "getBlockSettingAttState",
        "desc": "获取方块设置属性状态",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attrtype",
            "type": "",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "switch",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--获取土块是否可被破坏\n--第一个参数101为方块id\n--第二个参数1为方块属性：1破坏 2操作 4推拉 8掉落 16推拉掉落\nlocal result,switch=Block:getBlockSettingAttState(101,1)\nif switch then--可以破坏\n\tChat:sendSystemMsg(\"土块可以被破坏！\")\nelse--不可破坏\n\tChat:sendSystemMsg(\"土块无法被破坏！\")\nend"
      },
      {
        "name": "getBlockSwitchStatus",
        "desc": "获取功能方块的开关状态",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "{x,y,z}"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "isactive",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断(0,0)高度7的位置的方块(比如开关)是否被打开\nlocal result,isactive=Block:getBlockSwitchStatus({x=0,y=7,z=0})\nif isactive then--被打开\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的方块已被打开！\")\nelse--没有被打开\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的方块没有被打开！\")\nend"
      },
      {
        "name": "setBlockSwitchStatus",
        "desc": "设置功能方块的开关状态",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "{x,y,z}"
          },
          {
            "key": "isactive",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--打开(0,0)高度7位置的方块(比如开关)\n--最后一个参数true为打开，false为关闭\nBlock:setBlockSwitchStatus({x=0,y=7,z=0},true)\n--在聊天框显示\nChat:sendSystemMsg(\"打开了(0,0)高度7的位置的方块！\")"
      },
      {
        "name": "getBlockDataByDir",
        "desc": "通过方向获取方块data值",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "dir",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "data",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取朝向北的落叶松木的data\n--第一个参数201为方块id\n--第二个参数3为朝向参数：0西 1东 2南 3北 4下 5上\nlocal result,data=Block:getBlockDataByDir(201,3)\n--在聊天框显示\nChat:sendSystemMsg(\"落叶松木在朝向北的时候的data为:\"..data)"
      },
      {
        "name": "getBlockPowerStatus",
        "desc": "获取方块的通电状态",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "{x,y,z}"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "isactive",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断(0,0)高度7的位置的方块有没有通电\nlocal result,isactive=Block:getBlockPowerStatus({x=0,y=7,z=0})\nif isactive then--通电\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的方块已被通电！\")\nelse--没有通电\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的方块没有通电！\")\nend"
      },
      {
        "name": "randomBlockID",
        "desc": "获取随机方块id",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": "获取随机方块id"
          }
        ],
        "example": "local result,blockid = Block:randomBlockID()"
      },
      {
        "name": "GetBlockDefName",
        "desc": "获取方块名称",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": "方块类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "name",
            "type": "Number",
            "name": "方块名称"
          }
        ],
        "example": "local result,name = Block:GetBlockDefName(blockid)"
      },
      {
        "name": "GetBlockDefDesc",
        "desc": "获取方块描述",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": "方块类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "desc",
            "type": "Number",
            "name": "方块描述"
          }
        ],
        "example": "local result,desc = Block:GetBlockDefDesc(blockid)"
      },
      {
        "name": "GetBlockFacade",
        "desc": "获取方块外观",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": "方块类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "faced",
            "type": "Number",
            "name": "方块外观名"
          }
        ],
        "example": "local result,faced = Block:GetBlockFacade(blockid)"
      },
      {
        "name": "PlayAct",
        "desc": "微缩方块播放动作",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置坐标"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置坐标"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置坐标"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动作ID"
          },
          {
            "key": "playmode",
            "type": "Number",
            "name": "播放模式(ANIMMODE)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "faced",
            "type": "Number",
            "name": "方块外观名"
          }
        ],
        "example": "local result = Block:PlayAct(0,8,0,12,ANIMMODE.ANIM_MODE_LOOP) --在坐标（0,8,0）的微缩方块循环播放跑的动画"
      },
      {
        "name": "ReplaceBluePrint",
        "desc": "放置蓝图",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置坐标"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置坐标"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置坐标"
          },
          {
            "key": "blueprint",
            "type": "String",
            "name": "蓝图资源ID"
          },
          {
            "key": "angle",
            "type": "Number",
            "name": "旋转角度"
          },
          {
            "key": "mirror",
            "type": "Boolean",
            "name": "是否镜像"
          },
          {
            "key": "placeMode",
            "type": "Boolean",
            "name": "是否放置"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Block:ReplaceBluePrint(x, y, z, blueprint, angle, mirror, placeMode)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      }
    ]
  },
  {
    "class": "Buff",
    "name": "状态接口",
    "functions": [
      {
        "name": "addBuff",
        "desc": "给对象附加效果",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": "效果ID"
          },
          {
            "key": "bufflv",
            "type": "Number",
            "name": "效果等级"
          },
          {
            "key": "customticks",
            "type": "Number",
            "name": "效果持续时间(-1表示默认配置，0表示无限)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Buff:addBuff(objid, buffid, bufflv, customticks)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "removeBuff",
        "desc": "给对象移除指定效果",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": "效果ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Buff:removeBuff(objid, buffid)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "clearAllBuff",
        "desc": "给对象清除所有效果",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Buff:clearAllBuff(objid)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "clearAllBadBuff",
        "desc": "为对象清除所有负面效果",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Buff:clearAllBadBuff(objid)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "hasBuff",
        "desc": "判断对象身上是否有指定效果",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": "效果ID"
          },
          {
            "key": "bufflv",
            "type": "Number",
            "name": "效果等级"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Buff:hasBuff(objid, buffid, bufflv)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "getBuffList",
        "desc": "获取对象身上效果列表",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "效果数量"
          },
          {
            "key": "arr",
            "type": "Number",
            "name": "效果ID数组"
          }
        ],
        "example": "local code ,num,arr = Buff:getBuffList(objid)\nif code == ErrorCode.OK then\n\tprint('执行成功' ,num,arr )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "getBuffNumByBuffid",
        "desc": "获取对象身上指定效果数量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": "效果ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "数量"
          }
        ],
        "example": "local code ,num = Buff:getBuffNumByBuffid(objid, buffid)\nif code == ErrorCode.OK then\n\tprint('执行成功' ,num )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "getBuffIndex",
        "desc": "获取对象身上指定效果的索引位置(索引从1开始)",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": "效果ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "ix",
            "type": "Number",
            "name": "效果索引从1开始"
          }
        ],
        "example": "local code ,ix = Buff:getBuffIndex(objid, buffid)\nif code == ErrorCode.OK then\n\tprint('执行成功' ,ix )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "getBuffLeftTime",
        "desc": "获取对象身上指定效果剩余时间",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": "效果ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "剩余时间(秒)，0表示永久"
          }
        ],
        "example": "local code ,num = Buff:getBuffLeftTime(objid, buffid)\nif code == ErrorCode.OK then\n\tprint('执行成功' ,num )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "getBuffName",
        "desc": "获取对象身上状态效果名称",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": "效果ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "name",
            "type": "String",
            "name": "效果名称"
          }
        ],
        "example": "local code ,name = Buff:getBuffName(objid, buffid)\nif code == ErrorCode.OK then\n\tprint('执行成功' ,name )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "GetBuffDefName",
        "desc": "获取状态效果名称",
        "parm": [
          {
            "key": "buffid",
            "type": "Number",
            "name": "效果ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "name",
            "type": "String",
            "name": "效果名称"
          }
        ],
        "example": "local code ,name = Buff:GetBuffDefName(buffid)\nif code == ErrorCode.OK then\n\tprint('执行成功' ,name )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "GetBuffDefDesc",
        "desc": "获取状态效果描述",
        "parm": [
          {
            "key": "buffid",
            "type": "Number",
            "name": "效果ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code ,desc = Buff:GetBuffDefDesc(buffid)\nif code == ErrorCode.OK then\n\tprint('执行成功' ,desc )\nelse\n\tprint('执行失败')\nend"
      }
    ]
  },
  {
    "class": "Actor",
    "name": "实体接口",
    "functions": [
      {
        "name": "isPlayer",
        "desc": "检测是否为玩家",
        "parm": [],
        "ret": [],
        "example": "--每当玩家攻击命中对象，判断被攻击的对象是不是玩家\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--判断某对象是不是玩家，参数为对象在存档中的id\n\tlocal result=Actor:isPlayer(event.toobjid)\n\tif result==0 then--如果是玩家\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的对象是玩家\")\n\telse--如果不是玩家\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的对象不是玩家\")\n\tend\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "isMob",
        "desc": "检测是否为怪物",
        "parm": [],
        "ret": [],
        "example": "--每当玩家攻击命中对象，判断被攻击的对象是不是怪物\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--判断某对象是不是怪物，参数为对象在存档中的id\n\tlocal result=Actor:isMob(event.toobjid)\n\tif result==0 then--如果是怪物\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的对象是怪物\")\n\telse--如果不是怪物\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的对象不是怪物\")\n\tend\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "getObjType",
        "desc": "获取对象类型（玩家、生物、投掷物、掉落物等^）",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "objtype",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当有玩家做动画表情，聊天框显示房主周围10格内其中一个对象的所属类型\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--获取房主的坐标\n\tlocal result,x,y,z=Player:getPosition(0)\n\t--获取房主周围10格内对象的数量和列表\n\tlocal result2,num,objids=World:getActorsByBox(0,x-10,y-10,z-10,x+10,y+10,z+10)\n\tif num>0 then--如果获取到了对象\n\t\t--获取对象列表中的第一个对象的类型，参数为要获取类型的对象在存档中的id\n\t\t--返回值可能是：1玩家 2生物 3掉落物 4投掷物\n\t\tlocal result3,objtype=Actor:getObjType(objids[1])\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"附近10格发现对象！其中一个对象类型为(1玩家 2生物 3掉落物 4投掷物)\"..objtype)\n\telse--如果获取失败\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"附近10格没有发现对象！\")\n\tend\nend\n--注册动画表情监听器，当玩家做动画表情时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "isInAir",
        "desc": "是否在空中",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家攻击命中某对象，判断该对象是否在空中\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--判断某对象是否在空中，参数为对象在存档中的id\n\tlocal result=Actor:isInAir(event.toobjid)\n\tif result==0 then--如果在空中\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物在空中\")\n\telse--如果不在空中\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物不在空中\")\n\tend\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "getPosition",
        "desc": "获取actor位置",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当玩家攻击命中某对象，获取该对象的坐标\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--获取某对象的坐标，参数为对象在存档中的id\n\tlocal result,x,y,z=Actor:getPosition(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的坐标为(\"..x..\",\"..y..\",\"..z..\")\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "setPosition",
        "desc": "设置actor位置",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家攻击命中某对象，设置该对象的位置\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--设置指定对象的坐标\n\t--第一个参数为对象在存档中的id\n\t--后三个参数为要设置的坐标\n\tActor:setPosition(event.toobjid,10,20,10)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物被设置到了(10,10)高度20的位置\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "jump",
        "desc": "跳跃",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家攻击命中某对象，让该对象跳跃\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--让指定对象跳跃，参数为对象在存档中的id\n\tActor:jump(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"让objid为\"..event.toobjid..\"的生物跳跃了一次\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "killSelf",
        "desc": "杀死自己",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家攻击命中某生物，清除该生物\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--清除指定生物，参数为生物在存档中的id\n\tActor:killSelf(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"清除了objid为\"..event.toobjid..\"的生物\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "getCurPlaceDir",
        "desc": "获取当前朝向",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "dir",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当玩家攻击命中某生物，获取该生物的朝向\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--获取指定生物的朝向，参数为生物在存档中的id\n\t--返回值可能是：0西 1东 2南 3北 4下 5上\n\tlocal result,dir=Actor:getCurPlaceDir(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物当前朝向为(0西 1东 2南 3北 4下 5上)\"..dir)\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "tryMoveToActor",
        "desc": "向目标行动者移动",
        "parm": [
          {
            "key": "self_objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "target_objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "speed",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家攻击命中某生物，让该生物向另一生物移动\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--让指定生物向另一生物移动\n\t--第一个参数为要移动的生物在存档中的id\n\t--第二个参数为移动目标生物在存档中的id\n\t--第三个参数为移动速度\n\tActor:tryMoveToActor(event.toobjid,event.eventobjid,3)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"让objid为\"..event.toobjid..\"的生物向objid为\"..event.eventobjid..\"的生物移动，速度为3\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "tryMoveToPos",
        "desc": "向目标位置移动",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "speed",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家攻击命中某生物，让该生物移动至某位置\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--让某生物移动至某坐标\n\t--第一个参数为要移动的生物在存档中的id\n\t--中间三个参数10,7,10为要移动至的坐标\n\t--最后一个参数为移动速度\n\tActor:tryMoveToPos(event.toobjid,10,7,10,3)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"让objid为\"..event.toobjid..\"的生物移动至(10,10)高度7的位置，速度为3\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "addHP",
        "desc": "增加当前生命量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "hp",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家做动画表情，给该玩家增加生命值\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--给指定生物增加生命值\n\t--第一个参数为生物在存档中的id，可以是玩家迷你号\n\t--第二个参数为要增加的生命值\n\tActor:addHP(event.eventobjid,10)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"给objid为\"..event.eventobjid..\"的生物增加了10点生命值\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "getHP",
        "desc": "获取当前生命量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当玩家做动画表情，获取该玩家当前生命值\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--获取指定生物的当前生命值，参数为生物在存档中的id，可以是玩家迷你号，0是房主\n\tlocal result,value=Actor:getHP(event.eventobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.eventobjid..\"的生物当前生命值为:\"..value)\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "getMaxHP",
        "desc": "获取最大生命量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当玩家做动画表情，获取该玩家最大生命值\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--获取指定生物的最大生命值，参数为生物在存档中的id，可以是玩家迷你号，0是房主\n\tlocal result,value=Actor:getMaxHP(event.eventobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.eventobjid..\"的生物最大生命值为:\"..value)\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "addOxygen",
        "desc": "增加当前氧气值",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "oxygen",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家做动画表情，增加该玩家氧气值\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--增加指定生物的氧气值\n\t--第一个参数为生物在存档中的id，可以是玩家迷你号\n\t--第二个参数为要增加的值\n\tActor:addOxygen(event.eventobjid,10)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.eventobjid..\"的生物氧气值增加了10\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "getOxygen",
        "desc": "获取当前氧气值",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当玩家做动画表情，获取该玩家当前氧气值\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--获取指定生物的当前氧气值，参数为生物在存档中的id，可以是玩家迷你号，0是房主\n\tlocal result,value=Actor:getOxygen(event.eventobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.eventobjid..\"的生物当前氧气值为:\"..value)\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "addEnchant",
        "desc": "增加装备附魔",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "slot",
            "type": "Number",
            "name": ""
          },
          {
            "key": "enchantId",
            "type": "Number",
            "name": ""
          },
          {
            "key": "enchantLevel",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家做动画表情，给该玩家的装备添加附魔\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--给指定玩家的装备添加附魔\n\t--第一个参数为生物在存档中的id，可以是玩家迷你号\n\t--第二个参数为装备栏id：0头饰 1胸甲 2裤子 3鞋子 4披风 5手中持有的物品\n\t--后两个参数为附魔和附魔等级，具体可以在“迷你世界ID查询”的“附魔表数据”中查看\n\tActor:addEnchant(event.eventobjid,5,10,5)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.eventobjid..\"的生物手中的物品被添加了点燃5的附魔\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "removeEnchant",
        "desc": "移除装备附魔",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "slot",
            "type": "Number",
            "name": ""
          },
          {
            "key": "enchantId",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家做动画表情，移除指定装备的附魔\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--移除指定生物的指定装备的指定附魔\n\t--第一个参数为生物在存档中的id，可以是玩家迷你号\n\t--第二个参数为装备栏id：0头饰 1胸甲 2裤子 3鞋子 4披风 5手中持有的物品\n\t--第三个参数为要移除的附魔，具体可以在“迷你世界ID查询”的“附魔表数据”中查看\n\tActor:removeEnchant(event.eventobjid,5,10)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"移除了objid为\"..event.eventobjid..\"的生物手持物品的点燃附魔\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "findNearestBlock",
        "desc": "寻找附近方块",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--实体id\n\tlocal blockid=1--寻找方块id\n\tlocal blockRange=10--寻找范围\n\t--寻找附近方块\n\tlocal result,x,y,z=Actor:findNearestBlock(objid, blockid, blockRange)\n\tif result==0 then\n\t\tChat:sendSystemMsg(\"范围内找到了方块\")\n\telse\n\t\tChat:sendSystemMsg(\"范围内未找到方块\")\n\tend\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "setFaceYaw",
        "desc": "设置actor原地旋转偏移角度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "yaw",
            "type": "Number",
            "name": "角度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家攻击命中生物，设置被命中生物的朝向\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--设置指定玩家的朝向\n\t--第一个参数为生物在存档中的id\n\t--第二个参数为要设置的偏移角度，0为南方，从南向西角度递增\n\tActor:setFaceYaw(event.toobjid,0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物朝向被设置为了南方\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "getFaceYaw",
        "desc": "获取actor原地旋转偏移角度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "yaw",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取指定生物的朝向偏转角度，参数为生物在存档中的id，可以是玩家迷你号，0是房主\nlocal result,yaw=Actor:getFaceYaw(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主的朝向偏转角度为\"..yaw)"
      },
      {
        "name": "turnFaceYaw",
        "desc": "转动actor横向偏移角度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "转动角度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家以攻击命中生物的方式选中要旋转的对象，之后每次做动画表情，该生物都会旋转90度\nlocal objid--储存生物id的变量\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--把命中的生物id赋值给上面的变量\n\tobjid=event.toobjid\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"选中了\"..event.toobjid..\"，现在每次做动画表情该生物都会旋转90度\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--旋转指定生物某一角度\n\t--第一个参数为生物在存档中的id\n\t--第二个参数为要旋转的角度\n\tActor:turnFaceYaw(objid,90)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"生物\"..objid..\"被旋转了90度\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "setFacePitch",
        "desc": "设置actor视角仰望角度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "pitch",
            "type": "Number",
            "name": "仰望角度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家攻击命中生物，设置被命中生物的竖直朝向\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--设置指定玩家的竖直朝向\n\t--第一个参数为生物在存档中的id\n\t--第二个参数为要设置的偏移角度，0为正前方，仰视为正，俯视为负\n\tActor:setFacePitch(event.toobjid,0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物竖直朝向被设置为了正前方\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "getFacePitch",
        "desc": "获取actor视角仰望角度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "pitch",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取指定生物的竖直朝向偏转角度，参数为生物在存档中的id，可以是玩家迷你号，0是房主\nlocal result,pitch=Actor:getFacePitch(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主的竖直朝向偏转角度为\"..pitch)"
      },
      {
        "name": "turnFacePitch",
        "desc": "转动actor仰望偏移角度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "转动角度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家以攻击命中生物的方式选中要旋转的对象，之后每次做动画表情，该生物的竖直朝向都会旋转90度\nlocal objid--储存生物id的变量\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--把命中的生物id赋值给上面的变量\n\tobjid=event.toobjid\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"选中了\"..event.toobjid..\"，现在每次做动画表情该生物的竖直朝向都会旋转90度\")\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--旋转指定生物的竖直朝向某一角度\n\t--第一个参数为生物在存档中的id\n\t--第二个参数为要旋转的角度\n\tActor:turnFacePitch(objid,90)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"生物\"..objid..\"的竖直朝向被旋转了90度\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "playBodyEffect",
        "desc": "播放特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "type",
            "type": "Number",
            "name": "特效类型ACTORBODY_EFFECT"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--给指定生物添加特效\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要添加的特效id，大致从1000开始\nActor:playBodyEffect(0,1027)\n--在聊天框显示\nChat:sendSystemMsg(\"房主被添加了特效1027\")"
      },
      {
        "name": "stopBodyEffect",
        "desc": "停止特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "type",
            "type": "Number",
            "name": "特效类型ACTORBODY_EFFECT"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--取消指定生物的特效\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要取消的特效id，大致从1000开始\nActor:stopBodyEffect(0,1027)\n--在聊天框显示\nChat:sendSystemMsg(\"房主被取消了特效1027\")"
      },
      {
        "name": "playBodyEffectByFile",
        "desc": "播放文件特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "filename",
            "type": "String",
            "name": "文件名"
          },
          {
            "key": "sync",
            "type": "bool",
            "name": "同步"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Actor:playBodyEffectByFile(objid, filename, sync)"
      },
      {
        "name": "stopBodyEffectByFile",
        "desc": "停止文件特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "filename",
            "type": "String",
            "name": "文件名"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Actor:stopBodyEffectByFile(objid, filename)"
      },
      {
        "name": "playSound",
        "desc": "播放声音",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "name",
            "type": "String",
            "name": ""
          },
          {
            "key": "volume",
            "type": "Number",
            "name": ""
          },
          {
            "key": "pitch",
            "type": "Number",
            "name": ""
          },
          {
            "key": "flag",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Actor:playSound(objid, name, volume, pitch, flag)"
      },
      {
        "name": "playSoundSpecial",
        "desc": "播放声音(特定类型:GSOUND_TYPE)",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "name",
            "type": "String",
            "name": ""
          },
          {
            "key": "type",
            "type": "Number",
            "name": "指定类型(GSOUND_TYPE)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Actor:playSoundSpecial(objid, name, type)"
      },
      {
        "name": "clearActorWithId",
        "desc": "清除生物ID为actorid的生物",
        "parm": [
          {
            "key": "actorid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "bkill",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--清除存档指定生物\n--第一个参数为要清除的生物id，3402是猪，具体可以在“迷你世界ID查询”的“生物表数据”中查看\n--第二个参数为是否显示死亡效果：true显示 false直接消失\nActor:clearActorWithId(3402,false)\n--在聊天框显示\nChat:sendSystemMsg(\"清除了存档里所有的猪\")"
      },
      {
        "name": "setAttackType",
        "desc": "设置伤害类型",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attacktype",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickActor(event)\n\tlocal objid=event.toobjid--被点击的生物\n\tlocal attacktype=0--近战伤害(伤害类型可在常量列表查询)\n\t--设置被点击的生物伤害类型为近战伤害\n\tActor:setAttackType(objid, attacktype)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], ClickActor)--点击生物"
      },
      {
        "name": "setImmuneType",
        "desc": "设置免疫伤害类型",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "immunetype",
            "type": "Number",
            "name": ""
          },
          {
            "key": "isadd",
            "type": "bool",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickActor(event)\n\tlocal objid=event.toobjid--被点击的生物\n\tlocal immunetype=0--近战伤害(伤害类型可在常量列表查询)\n\tlocal isadd=true--开启\n\t--被点击的生物开启免疫近战伤害\n\tActor:setImmuneType(objid, immunetype, isadd)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], ClickActor)--点击生物"
      },
      {
        "name": "mountActor",
        "desc": "登上、脱离载具",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "mountobjid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "posindex",
            "type": "Number",
            "name": "骑乘位"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家攻击命中生物，玩家骑乘被命中生物\n--当玩家攻击命中时会执行此函数\nlocal function Player_AttackHit(event)\n\t--让指定生物骑乘另一生物\n\t--第一个参数为骑乘的生物在存档中的id，可以为玩家迷你号\n\t--第二个参数为被骑乘生物在存档中的id\n\t--第三个参数为骑乘位\n\tActor:mountActor(event.eventobjid,event.toobjid,0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.eventobjid..\"的生物骑乘坐骑objid为\"..event.toobjid)\nend\n--注册监听器，玩家攻击命中时执行Player_AttackHit函数\nScriptSupportEvent:registerEvent([=[Player.AttackHit]=],Player_AttackHit)"
      },
      {
        "name": "setActionAttrState",
        "desc": "设置生物行为属性状态",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actionattr",
            "type": "Number",
            "name": "CREATUREATTR_ENABLE"
          },
          {
            "key": "switch",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置生物的属性\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要设置的属性，1是移动，具体可以在“游戏数据类型”的“生物属性设置”中查看\n--第三个参数为设置：true可以 false不可\nActor:setActionAttrState(0,1,false)\n--在聊天框显示\nChat:sendSystemMsg(\"房主被设置为不可移动\")"
      },
      {
        "name": "getActionAttrState",
        "desc": "获取生物特殊属性的状态",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actionattr",
            "type": "Number",
            "name": "CREATUREATTR_ENABLE"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "switch",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--获取指定生物的属性\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要获取的属性，1是移动，具体可以在“游戏数据类型”的“生物属性设置”中查看\nlocal result=Actor:getActionAttrState(0,1)\nif result==0 then--如果可以\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主当前可移动\")\nelse--如果不可以\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主当前不可移动\")\nend"
      },
      {
        "name": "tryNavigationToPos",
        "desc": "寻路到目标位置",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "cancontrol",
            "type": "booleanbshowtipboolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--自动寻路的生物实体id，这里是点击方块的玩家\n\tlocal x,y,z=event.x+10,event.y+1,event.z--寻路目的地\n\tlocal cancontrol=false--寻路过程中是否可控制：否\n\tlocal showtip=true--是否显示路线提示：是\n\t--让生物自动寻路\n\tActor:tryNavigationToPos(objid, x, y, z, cancontrol, showtip)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "randomActorID",
        "desc": "在资源库里随机创建一个生物",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--随机生成一个生物id，返回值可以在“迷你世界ID查询”的“生物表数据”中查看\nlocal result,id=Actor:randomActorID()\n--在聊天框显示\nChat:sendSystemMsg(\"随机选取了一个生物id\"..id)"
      },
      {
        "name": "getRidingActorObjId",
        "desc": "获取骑乘生物的objid",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--获取指定生物的骑乘坐骑在存档中的id\n--参数为生物在存档中的id，可以是玩家迷你号，0是房主\nlocal result,objid=Actor:getRidingActorObjId(0)\nif objid==0 then--如果没有坐骑\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主当前没有骑乘坐骑\")\nelse--如果正在骑乘坐骑\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主当前骑乘的坐骑在存档中的objid为：\"..objid)\nend"
      },
      {
        "name": "playBodyEffectById",
        "desc": "在指定玩家身上播放特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "particleId",
            "type": "Number",
            "name": "特效id"
          },
          {
            "key": "scale",
            "type": "Number",
            "name": "特效大小"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--给指定生物添加特效\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要添加的特效id，大致从1000开始\n--第三个参数为特效的缩放比例\nActor:playBodyEffectById(0,1029,1)\n--在聊天框显示\nChat:sendSystemMsg(\"给房主添加了1029特效，缩放比例为1\")"
      },
      {
        "name": "stopBodyEffectById",
        "desc": "停止指定玩家身上的特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "particleId",
            "type": "Number",
            "name": "特效id"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--停止指定生物的某特效\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要停止的特效id，大致从1000开始\nActor:stopBodyEffectById(0,1029)\n--在聊天框显示\nChat:sendSystemMsg(\"停止了房主的1029特效\")"
      },
      {
        "name": "setBodyEffectScale",
        "desc": "设置指定玩家身上的特效大小",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "particleId",
            "type": "Number",
            "name": "特效id"
          },
          {
            "key": "scale",
            "type": "Number",
            "name": "特效大小"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--给房主添加特效\nActor:playBodyEffectById(0,1029,1)\n--在聊天框显示\nChat:sendSystemMsg(\"给房主添加了1029特效，缩放比例为1\")\n--设置生物指定特效的缩放比例\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要缩放的特效id，大致从1000开始\n--第三个参数为缩放比例\nActor:setBodyEffectScale(0,1029,2)\n--在聊天框显示\nChat:sendSystemMsg(\"把房主的1029特效放大了两倍\")"
      },
      {
        "name": "playSoundEffectById",
        "desc": "在指定Actor身上播放音效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "soundId",
            "type": "Number",
            "name": ""
          },
          {
            "key": "volume",
            "type": "Number",
            "name": ""
          },
          {
            "key": "pitch",
            "type": "Number",
            "name": ""
          },
          {
            "key": "isLoop",
            "type": "bool",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--给指定生物播放音乐\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数10713为播放的音效id，具体可以在“迷你世界ID查询”的“音效表数据”里查看\n--后三个参数分别是：音量、音高、是否循环播放\nActor:playSoundEffectById(0,10713,100,1,false)\n--在聊天框显示\nChat:sendSystemMsg(\"正在给房主播放音乐\")"
      },
      {
        "name": "stopSoundEffectById",
        "desc": "停止指定Actor身上的音效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "soundId",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--给房主播放音乐\nActor:playSoundEffectById(0,10713,100,1,false)\n--在聊天框显示提示\nChat:sendSystemMsg(\"正在给房主播放音乐，做动画表情即可停止播放\")\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--停止音乐10713对房主的播放\n\t--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n\t--第二个参数为要停止播放的音乐id，具体可以在“迷你世界ID查询”的“音效表数据”里查看\n\tActor:stopSoundEffectById(0,10713)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"停止了音乐10713对房主的播放\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "appendSpeed",
        "desc": "给actor附加一个速度",
        "parm": [],
        "ret": [],
        "example": "--给指定生物附加一个速度\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--后三个参数分别为向东、上、北三个方向的分速度，可以为负\nActor:appendSpeed(0,5,6,7)\n--在聊天框显示\nChat:sendSystemMsg(\"房主被弹了出去，向东、上、北方向的速度分别为5,6,7\")"
      },
      {
        "name": "getFaceDirection",
        "desc": "获取actor朝向",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--获取指定生物在各个方向的朝向，参数为生物在存档中的id，可以是玩家迷你号，0是房主\nlocal result,dirx,diry,dirz=Actor:getFaceDirection(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主当前在东西方向偏移\"..dirx..\"，在上下方向偏移\"..diry..\"，在南北方向偏移\"..dirz)"
      },
      {
        "name": "calcDirectionByDirection",
        "desc": "通过局部坐标方向计算绝对方向",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "vz",
            "type": "Number",
            "name": "局部方向"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "{x=number, y=number, z=number}"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家id\n\tlocal vx,vy,vz=10,10,10--以objid的朝向建立坐标系的局部坐标\n\t--通过局部坐标计算在地图默认坐标系上的绝对坐标\n\tlocal result,dir=Actor:calcDirectionByDirection(objid, vx, vy, vz)\n\tprint(dir)--输出绝对坐标\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "calcDirectionByAngle",
        "desc": "通过局部球坐标方向计算绝对方向",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "yaw",
            "type": "Number",
            "name": "局部水平偏移"
          },
          {
            "key": "pitch",
            "type": "Number",
            "name": "局部垂直偏移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "{x=number, y=number, z=number}"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家id\n\tlocal yaw,pitch=90,90--以objid的朝向为基准的旋转角度(水平、垂直)\n\t--计算在地图上的绝对方向\n\tlocal result,dir=Actor:calcDirectionByAngle(objid, yaw, pitch)\n\tprint(dir)--输出绝对方向\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "calcDirectionByYawDirection",
        "desc": "通过局部坐标方向计算绝对正方向(忽略视角仰角)",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "vz",
            "type": "Number",
            "name": "局部方向"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "{x=number, y=number, z=number}"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家id\n\tlocal vx,vy,vz=10,10,10--以objid的朝向建立坐标系的局部坐标\n\t--计算绝对正方向(忽略竖坐标)\n\tlocal result,dir=Actor:calcDirectionByYawDirection(objid, vx, vy, vz)\n\tprint(dir)--输出绝对正方向\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "calcDirectionByYawAngle",
        "desc": "通过局部球坐标方向计算绝对正方向(忽略视角仰角)",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "yaw",
            "type": "Number",
            "name": "局部水平偏移"
          },
          {
            "key": "pitch",
            "type": "Number",
            "name": "局部垂直偏移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "{x=number, y=number, z=number}"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家id\n\tlocal yaw,pitch=90,90--以objid的朝向为基准的旋转角度(水平、垂直)\n\t--计算绝对正方向(忽略仰角)\n\tlocal result,dir=Actor:calcDirectionByYawAngle(objid, yaw, pitch)\n\tprint(dir)--输出绝对正方向\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getEyeHeight",
        "desc": "获取眼睛高度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "height",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取指定生物的眼睛高度，参数为生物在存档中的id，可以是玩家迷你号，0是房主\nlocal result,height=Actor:getEyeHeight(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主的眼睛高度为\"..height)"
      },
      {
        "name": "getEyePosition",
        "desc": "获取眼睛位置",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取指定生物的眼睛坐标，参数为生物在存档中的id，可以是玩家迷你号，0是房主\nlocal result,x,y,z=Actor:getEyePosition(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主眼睛坐标为：(\"..x..\",\"..y..\",\"..z..\")\")"
      },
      {
        "name": "getBodySize",
        "desc": "获取身体尺寸",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "w",
            "type": "Number",
            "name": ""
          },
          {
            "key": "h",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取指定生物的尺寸，参数为生物在存档中的id，可以是玩家迷你号，0是房主\nlocal result,w,h=Actor:getBodySize(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主身体宽：\"..w..\"，高：\"..h)"
      },
      {
        "name": "playAct",
        "desc": "播放动作",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actid",
            "type": "Number",
            "name": "动作id"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--让指定生物播放动画表情\n--第一个参数为生物在存档中的实体id，可以是玩家迷你号，0是房主\n--第二个参数为动作表情id，具体可以在“迷你世界ID查询”的“动作表数据”查询\nActor:playAct(0,1)\n--在聊天框显示\nChat:sendSystemMsg(\"让房主播放打招呼动作\")"
      },
      {
        "name": "shownickname",
        "desc": "设置昵称显示",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "bshow",
            "type": "Boolean",
            "name": "是否显示"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--要显示昵称的实体id，这里是点击方块的玩家\n\tlocal isshow=true--是否显示昵称：是\n\t--设置objid的昵称\n\tActor:setnickname(objid, \"昵称\")\n\t--显示objid的昵称\n\tActor:shownickname(objid, isshow)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "setnickname",
        "desc": "设置昵称",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "nickname",
            "type": "String",
            "name": "名称"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--要设置昵称的实体id，这里是点击方块的玩家\n\tlocal name=\"昵称\"--要设置的昵称\n\t--显示objid的昵称\n\tActor:shownickname(objid, true)\n\t--设置objid的昵称\n\tActor:setnickname(objid, name)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getActorFacade",
        "desc": "获取Actor的外观",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "name",
            "type": "String",
            "name": ""
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--要获取外观的实体id，这里是玩家\n\t--获取objid的外观\n\tlocal result,name=Actor:getActorFacade(objid)\n\tChat:sendSystemMsg(name)--在聊天框显示\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "changeCustomModel",
        "desc": "改变Actor外观",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickActor(event)\n\tlocal objid=event.toobjid--要获取外观的实体id，这里是被点击的生物\n\tlocal result,name=Actor:getActorFacade(objid)--获取objid的外观\n\n\tlocal objid2=event.eventobjid--要设置外观的实体id，这里是点击生物的玩家\n\t--设置objid2的外观为刚刚获取的name\n\tActor:changeCustomModel(objid2, name)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], ClickActor)--点击生物"
      },
      {
        "name": "recoverinitialModel",
        "desc": "恢复生物外观",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--要恢复外观的实体id，这里是点击方块的玩家\n\t--恢复objid的外观\n\tActor:recoverinitialModel(objid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "addBuff",
        "desc": "增加指定BUFF",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "bufflv",
            "type": "Number",
            "name": ""
          },
          {
            "key": "customticks",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--给指定生物添加buff\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二、三个参数为要添加的buff，具体可以在“迷你世界ID查询”的“状态(效果)表数据”中查看\n--最后一个参数为buff持续时长\nActor:addBuff(0,50,4,10000)\n--在聊天框显示\nChat:sendSystemMsg(\"房主被添加了快速生命恢复4级的buff，持续时长10000\")"
      },
      {
        "name": "hasBuff",
        "desc": "是否已经有了指定BUFF",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "ret",
            "type": "Boolean",
            "name": ""
          }
        ],
        "example": "--判断某生物是否有某buff\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要判断的buff，具体可以在“迷你世界ID查询”的“状态(效果)表数据”中查看\nlocal result=Actor:hasBuff(0,50)\nif result==0 then--如果有\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主当前有快速生命恢复的buff\")\nelse--如果没有\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主当前没有快速生命恢复的buff\")\nend"
      },
      {
        "name": "removeBuff",
        "desc": "移除指定BUFF",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除指定生物的指定buff\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要移除的buff，具体可以在“迷你世界ID查询”的“状态(效果)表数据”中查看\nActor:removeBuff(0,50)\n--在聊天框显示\nChat:sendSystemMsg(\"移除了房主的快速生命恢复的buff\")"
      },
      {
        "name": "clearAllBuff",
        "desc": "清除全部BUFF",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除某生物所有buff，参数为生物在存档中的id，可以是玩家迷你号，0是房主\nActor:clearAllBuff(0)\n--在聊天框显示\nChat:sendSystemMsg(\"清空了房主所有buff\")"
      },
      {
        "name": "clearAllBadBuff",
        "desc": "清除全部减益BUFF",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除某生物所有负面buff，参数为生物在存档中的id，可以是玩家迷你号，0是房主\nActor:clearAllBadBuff(0)\n--在聊天框显示\nChat:sendSystemMsg(\"清空了房主所有负面buff\")"
      },
      {
        "name": "getBuffList",
        "desc": "获取已有BUFF",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除某生物所有负面buff，参数为生物在存档中的id，可以是玩家迷你号，0是房主\nActor:clearAllBadBuff(0)\n--在聊天框显示\nChat:sendSystemMsg(\"清空了房主所有负面buff\")"
      },
      {
        "name": "getBuffLeftTick",
        "desc": "获取BUFF剩余tick",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "buffid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "ticks",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取某生物指定buff的剩余时长\n--第一个参数为生物在存档中的id，可以是玩家迷你号，0是房主\n--第二个参数为要获取剩余时长的buff，具体可以在“迷你世界ID查询”的“状态(效果)表数据”中查看\nlocal result,ticks=Actor:getBuffLeftTick(0,50)\n--在聊天框显示\nChat:sendSystemMsg(\"房主当前快速生命恢复的buff剩余时长为：\"..ticks)"
      },
      {
        "name": "randomFacadeID",
        "desc": "获取随机外观id字符串",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "facadeid",
            "type": "String",
            "name": ""
          }
        ],
        "example": "local result = Actor:randomFacadeID()"
      },
      {
        "name": "playerHurt",
        "desc": "使玩家对生物或玩家造成伤害",
        "parm": [
          {
            "key": "objidA",
            "type": "Number",
            "name": ""
          },
          {
            "key": "objidB",
            "type": "Number",
            "name": ""
          },
          {
            "key": "hp",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attackType",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickActor(event)\n    local objidA=event.eventobjid--攻击者，这里是点击生物的玩家\n    local objidB=event.toobjid--被攻击者，这里是被点击的生物\n    local hp=999--造成的伤害数值\n    local attackType=0--伤害类型，这里是近战伤害，可以在常量列表查询\n\t--使玩家对生物造成伤害\n    Actor:playerHurt(objidA, objidB, hp, attackType)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], ClickActor)--点击生物，执行函数ClickActor"
      },
      {
        "name": "playerHurtArea",
        "desc": "使玩家伤害区域内的目标",
        "parm": [
          {
            "key": "objidA",
            "type": "Number",
            "name": ""
          },
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "hp",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attackType",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n    local objidA=event.eventobjid--攻击者，这里是点击方块的玩家\n\t--以被点击的方块为中心，向前后左右上下各扩展10格创建一个区域\n    local result,areaid=Area:createAreaRect({x=event.x,y=event.y,z=event.z},{x=10,y=10,z=10})\n    local hp=999--造成的伤害数值\n    local attackType=0--伤害类型，这里是近战伤害，可以在常量列表查询\n\t--使玩家对区域内的所有目标造成伤害\n    Actor:playerHurtArea(objidA, areaid, hp, attackType)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块，执行函数ClickBlock"
      },
      {
        "name": "actorHurt",
        "desc": "使生物对生物或玩家造成伤害",
        "parm": [
          {
            "key": "objidA",
            "type": "Number",
            "name": ""
          },
          {
            "key": "objidB",
            "type": "Number",
            "name": ""
          },
          {
            "key": "hp",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attackType",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickActor(event)\n    local objidA=event.toobjid--攻击者，这里是被点击的生物\n    local objidB=event.eventobjid--被攻击者，这里是点击生物的玩家\n    local hp=999--造成的伤害数值\n    local attackType=0--伤害类型，这里是近战伤害，可以在常量列表查询\n\t--使生物对玩家造成伤害\n    Actor:actorHurt(objidA, objidB, hp, attackType)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], ClickActor)--点击生物，执行函数ClickActor"
      },
      {
        "name": "actorHurtArea",
        "desc": "使生物伤害区域内的目标",
        "parm": [
          {
            "key": "objidA",
            "type": "Number",
            "name": ""
          },
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "hp",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attackType",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickActor(event)\n    local objidA=event.toobjid--攻击者，这里是被点击的生物\n    local _,x,y,z=Actor:getPosition(objidA)--获取被点击的生物坐标\n    --以被点击的生物为中心，向前后左右上下各扩展10格创建区域\n    local _,areaid=Area:createAreaRect({x=x,y=y,z=z},{x=10,y=10,z=10})\n    local hp=999--造成的伤害数值\n    local attackType=0--伤害类型，这里是近战伤害，可以在常量列表查询\n\t--使生物对区域内的所有目标造成伤害(包括生物自身)\n    Actor:actorHurtArea(objidA, areaid, hp, attackType)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], ClickActor)--点击生物，执行函数ClickActor"
      },
      {
        "name": "getPositionV2",
        "desc": "获取actor位置",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象的objid"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "pos",
            "type": "table",
            "name": "方块坐标"
          }
        ],
        "example": "local code ,pos = Actor:getPositionV2(objid)\nif code == ErrorCode.OK then\n\tprint('执行成功' ,pos )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "setFaceDirection",
        "desc": "设置对象朝向",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象objid"
          },
          {
            "key": "x",
            "type": "Number",
            "name": "轴向上的方向"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "轴向上的方向"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "轴向上的方向"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Actor:setFaceDirection(objid, x, y, z)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "ChangePlayerSkin",
        "desc": "改变对象为指定玩家ID的皮肤外观",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家或生物objid"
          },
          {
            "key": "uin",
            "type": "Number",
            "name": "玩家UIn"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Actor:ChangePlayerSkin(objid, uin)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      }
    ]
  },
  {
    "class": "Player",
    "name": "玩家接口",
    "functions": [
      {
        "name": "getAttr",
        "desc": "玩家属性获取",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attrtype",
            "type": "Number",
            "name": "PLAYERATTR"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取房主的生命值\n--第一个参数0为游戏玩家id或玩家迷你号，0是房主\n--第二个参数2是属性：当前生命值，具体可以在“游戏数据类型”的“玩家属性枚举”中查看\nlocal result,value=Player:getAttr(0,2)\n--在聊天框显示\nChat:sendSystemMsg(\"房主当前生命值为：\"..value)"
      },
      {
        "name": "setAttr",
        "desc": "玩家属性设置",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attrtype",
            "type": "Number",
            "name": "PLAYERATTR"
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置房主的生命上限\n--第一个参数0为游戏玩家id或玩家迷你号，0是房主\n--第二个参数1是属性：生命上限，具体可以在“游戏数据类型”的“玩家属性枚举”中查看\n--第三个参数500是需要设置属性的值\nPlayer:setAttr(0,1,500)\n--在聊天框显示\nChat:sendSystemMsg(\"房主生命上限被设置为500\")"
      },
      {
        "name": "getHostUin",
        "desc": "获取房主uin",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "uin",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取房主迷你号\nlocal result,uin=Player:getHostUin()\n--在聊天框显示\nChat:sendSystemMsg(\"房主迷你号为：\"..uin)"
      },
      {
        "name": "isMainPlayer",
        "desc": "是否是本地玩家",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [],
        "example": "--判断某迷你号是不是本地玩家(房主)\n--参数1000是需要判断的迷你号\nlocal result=Player:isMainPlayer(1000)\nif result==0 then--如果是\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"1000是本地玩家(房主)\")\nelse--如果不是\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"1000不是本地玩家(房主)\")\nend"
      },
      {
        "name": "getMainPlayerUin",
        "desc": "获取本地玩家的uin",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "uin",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取本地玩家(房主)迷你号\nlocal result,uin=Player:getMainPlayerUin()\n--在聊天框显示\nChat:sendSystemMsg(\"本地玩家(房主)迷你号为：\"..uin)"
      },
      {
        "name": "getGameResults",
        "desc": "获取玩家比赛结果",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取玩家的游戏状态或比赛结果\n--参数0是玩家id或玩家迷你号，0是房主\n--返回值可能是：0游戏中 1游戏胜利 2游戏结束\nlocal result,value=Player:getGameResults(0)\nChat:sendSystemMsg(\"当前房主的游戏状态是(0游戏中 1游戏胜利 2游戏结束)：\"..value)"
      },
      {
        "name": "setGameResults",
        "desc": "设置玩家比赛结果",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家的游戏状态或比赛结果\n--第一个参数是玩家id或玩家迷你号，0是房主\n--第二个参数为游戏状态或比赛结果：0游戏中 1游戏胜利 2游戏结束\nPlayer:setGameResults(0,1)\n--在聊天框显示\nChat:sendSystemMsg(\"设置房主游戏胜利\")"
      },
      {
        "name": "getGameScore",
        "desc": "获取玩家游戏分数",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--当玩家做动画表情时在聊天框显示房主游戏分数\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--获取房主的游戏分数\n\t--参数0为玩家id或玩家迷你号，0是房主\n\tlocal result,value=Player:getGameScore(0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主当前的游戏分数为\"..value)\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "setGameScore",
        "desc": "设置玩家游戏分数",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "score",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把房主的分数设为100(玩家分数不是玩家所在队伍的分数，要注意区别。队伍分数可查阅Team)\n--第一个参数是玩家id或玩家迷你号，0是房主\n--第二个参数为要设置的游戏分数\nPlayer:setGameScore(0,100)\n--在聊天框显示\nChat:sendSystemMsg(\"房主的游戏分数被设置为了100(玩家分数不是玩家所在队伍的分数)\")"
      },
      {
        "name": "getGameRanking",
        "desc": "获取玩家的排行",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "rank",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取玩家的游戏排行\n--参数0为玩家id或玩家迷你号，0是房主\nlocal result,rank=Player:getGameRanking(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主的游戏排行为\"..rank)"
      },
      {
        "name": "setGameRanking",
        "desc": "给玩家设置排行",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "rank",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置房主的排行为第一名\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为玩家排行\nPlayer:setGameRanking(0,1)\n--在聊天框显示\nChat:sendSystemMsg(\"房主排行被设置为了第一名\")"
      },
      {
        "name": "gainItems",
        "desc": "给玩家增加道具",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          },
          {
            "key": "prioritytype",
            "type": "Number",
            "name": "(1是优先快捷栏2是优先背包栏)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--给玩家背包增加某道具或物品\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数是添加物品的id，1是基岩\n--第三个参数是添加的物品数量\n--最后一个参数是优先快捷栏还是背包栏：1优先快捷栏 2优先背包栏\nPlayer:gainItems(0,1,10,1)\n--在聊天框显示\nChat:sendSystemMsg(\"给房主快捷栏或背包增加了10个基岩\")"
      },
      {
        "name": "teleportHome",
        "desc": "传送到出生点",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家做动画表情房主都会被传送回出生点\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--把玩家传送至出生点，参数为玩家id或玩家迷你号，0是房主\n\tPlayer:teleportHome(0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主被传送到了出生点\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "getCurToolID",
        "desc": "获取玩家当前手持的物品id",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--获取玩家手持物品的id，参数为玩家id或玩家迷你号，0是房主\nlocal result,id=Player:getCurToolID(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主当前拿着的物品的id为\"..id)"
      },
      {
        "name": "getNickname",
        "desc": "获取玩家昵称",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "name",
            "type": "String",
            "name": ""
          }
        ],
        "example": "--获取玩家昵称，参数为玩家id或玩家迷你号，0是房主\nlocal result,name=Player:getNickname(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主的昵称为：\"..name)"
      },
      {
        "name": "removeBackpackItem",
        "desc": "移走背包里的物品",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除玩家背包里的物品\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为要移除的物品id，101是土块\n--第三个参数为要移除的物品数量\nPlayer:removeBackpackItem(0,101,10)\n--在聊天框显示\nChat:sendSystemMsg(\"移除了房主背包里的10个土块\")"
      },
      {
        "name": "getDieTimes",
        "desc": "获取玩家死亡次数",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当玩家做动画表情，聊天框显示房主死亡次数\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--获取玩家死亡次数，参数为玩家id或玩家迷你号，0是房主\n\tlocal result,value=Player:getDieTimes(0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主的死亡次数为\"..value)\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "getLeftLifeNum",
        "desc": "获取玩家剩下的生命次数",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当玩家做动画表情，聊天框显示房主剩余生命数\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--获取玩家剩余生命数，参数为玩家id或玩家迷你号，0是房主\n\tlocal result,value=Player:getLeftLifeNum(0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主剩余生命数为\"..value)\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "setTeam",
        "desc": "设置玩家队伍",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家队伍\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为要设置为的队伍\nPlayer:setTeam(0,2)\n--在聊天框显示\nChat:sendSystemMsg(\"房主被设置为第二队\")"
      },
      {
        "name": "getTeam",
        "desc": "获取玩家队伍",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取玩家所在队伍，参数为玩家id或玩家迷你号，0是房主\nlocal result,value=Player:getTeam(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主所在队伍为：\"..value)"
      },
      {
        "name": "getFoodLevel",
        "desc": "获取当前饱食度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--获取玩家饱食度，参数为玩家id或玩家迷你号，0是房主\nlocal result,value=Player:getFoodLevel(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主当前饱食度为\"..value)"
      },
      {
        "name": "setFoodLevel",
        "desc": "设置玩家饱食度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "foodLevel",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家饱食度\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为要设置的饱食度\nPlayer:setFoodLevel(0,100)\n--在聊天框显示\nChat:sendSystemMsg(\"设置房主的饱食度为100\")"
      },
      {
        "name": "getCurShotcut",
        "desc": "获取当前所用快捷栏键",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "scutIdx",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取玩家当前选中的快捷栏位置，参数为玩家id或玩家迷你号，0是房主\nlocal result,scutIdx=Player:getCurShotcut(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主当前选中的快捷栏为：\"..scutIdx)"
      },
      {
        "name": "onCurToolUsed",
        "desc": "设置当前玩家手持的道具消耗",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": "道具数量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家手持物品的消耗\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为消耗的道具数量(貌似没效果)\nPlayer:onCurToolUsed(0,1)\n--在聊天框显示\nChat:sendSystemMsg(\"房主当前选中的物品被移除了1个\")"
      },
      {
        "name": "setSkillCD",
        "desc": "设置CD",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "cd",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家做动画表情，房主的钻石剑CD都会变为100秒\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--设置玩家的道具CD\n\t--第一个参数为玩家id或玩家迷你号，0是房主\n\t--第二个参数为道具id，12005是能量剑(钻石剑)\n\t--第三个参数为设置的技能冷却时长\n\tPlayer:setSkillCD(0,12005,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主的钻石剑技能冷却时间被设置为了100秒\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "reviveToPos",
        "desc": "复活玩家到指定点",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--复活玩家到指定位置(貌似没效果，也许只对死亡玩家有效)\n--第一个参数为玩家id或玩家迷你号，0是房主\n--后三个参数为复活到坐标\nPlayer:reviveToPos(0,50,7,50)\n--在聊天框显示\nChat:sendSystemMsg(\"把房主复活到(50,50)高度7的位置\")"
      },
      {
        "name": "setRevivePoint",
        "desc": "改变玩家复活点位置",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家的复活点坐标\n--第一个参数为玩家id或玩家迷你号，0是房主\n--后三个参数为设置的复活点坐标\nPlayer:setRevivePoint(0,50,7,50)\n--在聊天框显示\nChat:sendSystemMsg(\"房主复活点被设置在了(50,50)高度7的位置\")"
      },
      {
        "name": "mountActor",
        "desc": "玩家乘上坐骑",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "objid",
            "type": "Number",
            "name": "动作id"
          },
          {
            "key": "posindex",
            "type": "Number",
            "name": "位置id"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickActor(event)\n\tlocal playerid=event.eventobjid--玩家\n\tlocal objid=event.toobjid--要骑乘的实体id\n\tlocal posindex=1--骑乘位\n\t--让玩家骑乘生物\n\tPlayer:mountActor(playerid, objid, posindex)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], ClickActor)--点击生物\nlocal function ClickBlock(event)\n\tlocal playerid=event.eventobjid--玩家\n\t--让玩家取消骑乘\n\tPlayer:mountActor(playerid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "playAct",
        "desc": "玩家播放动画",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actid",
            "type": "Number",
            "name": "动作id"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--让玩家播放动画表情\n--第一个参数为玩家迷你号\n--第二个参数为动作表情id，具体可以在“迷你世界ID查询”的“动作表数据”查询\nPlayer:playAct(1000,1)\n--在聊天框显示\nChat:sendSystemMsg(\"让迷你号为1000的玩家播放打招呼动作\")"
      },
      {
        "name": "notifyGameInfo2Self",
        "desc": "对玩家显示飘窗文字",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "info",
            "type": "String",
            "name": "文字内容"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--对玩家显示飘窗提示框\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数是显示的文本内容\nPlayer:notifyGameInfo2Self(0,\"这里是飘窗文字内容\")"
      },
      {
        "name": "useItem",
        "desc": "使玩家使用当前道具",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "status",
            "type": "Number",
            "name": "使用状态"
          },
          {
            "key": "onshift",
            "type": "Boolean",
            "name": "是否按下shift键"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--使用道具的玩家\n\tlocal itemid=12005--使用的道具id\n\tlocal status=1--使用状态(意义不明)\n\tlocal onshift=false--是否按下shift：否\n\t--使玩家使用道具(貌似无效)\n\tPlayer:useItem(objid, itemid, status, onshift)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "rotateCamera",
        "desc": "旋转玩家镜头",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "yaw",
            "type": "Number",
            "name": ""
          },
          {
            "key": "pitch",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家视角方向\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为水平方向旋转角度，正北为0，由北向东为正方向\n--第三个参数为俯仰角，90为俯视，-90为仰视，之间的角度可任意设置\nPlayer:rotateCamera(0,90,90)\n--在聊天框显示\nChat:sendSystemMsg(\"房主视角被设置为面向正东、俯视\")"
      },
      {
        "name": "changeViewMode",
        "desc": "改变玩家视角模式",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "viewmode",
            "type": "Number",
            "name": "VIEWPORTTYPE"
          },
          {
            "key": "islock",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家视角模式\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为视角模式：0主视角 1背视角 2正视角 3俯视角 4俯视角 5自定义视角\n--第三个参数为是否锁定视角：true锁定 false不锁定\nPlayer:changeViewMode(0,0,true)\n--在聊天框显示\nChat:sendSystemMsg(\"锁定房主视角为第一人称主视角\")"
      },
      {
        "name": "setActionAttrState",
        "desc": "设置玩家行为属性状态",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actionattr",
            "type": "Number",
            "name": "PLAYERATTR_ENABLE"
          },
          {
            "key": "switch",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家行为属性状态\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数是行为属性值，1是“移动”，具体可以在“游戏数据类型”的“玩家属性设置”里查看\n--第三个参数为“是否可以”，true可以 false不可以\nPlayer:setActionAttrState(0,1,false)\n--在聊天框显示\nChat:sendSystemMsg(\"设置房主不可移动\")"
      },
      {
        "name": "checkActionAttrState",
        "desc": "获取玩家特殊属性的状态",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actionattr",
            "type": "Number",
            "name": "PLAYERATTR_ENABLE"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--获取玩家的行为属性状态\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数是行为属性值，1是“移动”，具体可以在“游戏数据类型”的“玩家属性设置”里查看\nlocal result=Player:checkActionAttrState(0,1)\nif result==0 then--如果可以\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主可以移动\")\nelse--如果不可以\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"房主不可移动\")\nend"
      },
      {
        "name": "isEquipByResID",
        "desc": "设置玩家是否装备了某件装备",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "resid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--检测的玩家\n\tlocal itemid=12241--要检测的装备，这里是蓝钻头盔\n\t--获取玩家是否穿戴itemid装备\n\tlocal result=Player:isEquipByResID(objid, itemid)\n\tif result==0 then\n\t\tChat:sendSystemMsg(\"玩家穿着蓝钻头盔\")\n\telse\n\t\tChat:sendSystemMsg(\"玩家没有穿戴蓝钻头盔\")\n\tend\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "setPosition",
        "desc": "设置player位置",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家到某坐标\n--第一个参数为玩家id或玩家迷你号，0是房主\n--后三个参数为设置到的坐标\nPlayer:setPosition(0,100,7,100)\n--在聊天框显示\nChat:sendSystemMsg(\"房主被设置到了(100,100)高度7的位置\")"
      },
      {
        "name": "getAimPos",
        "desc": "获取player准星位置",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--获取玩家准心坐标，参数为玩家id或玩家迷你号，0是房主\nlocal result,x,y,z=Player:getAimPos(0)\n--在聊天框显示\nChat:sendSystemMsg(\"房主当前准心坐标为(\"..x..\",\"..y..\",\"..z..\")\")\n--输出到控制台\nprint(\"房主当前准心坐标为(\"..x..\",\"..y..\",\"..z..\")\")"
      },
      {
        "name": "setItemAttAction",
        "desc": "设置玩家道具设置属性：丢弃、掉落",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attrtype",
            "type": "Number",
            "name": "PLAYERATTR_ITEM"
          },
          {
            "key": "switch",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置玩家的道具的操作属性\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为要设置的道具的id，101是土块\n--第三个参数为属性值：1不可丢弃 2不可掉落\n--最后一个参数为是否开启属性：true开启 false关闭\nPlayer:setItemAttAction(0,101,1,true)\n--在聊天框显示\nChat:sendSystemMsg(\"房主被设置为不可丢弃土块\")"
      },
      {
        "name": "playMusic",
        "desc": "对玩家播放背景音乐",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "musicId",
            "type": "Number",
            "name": ""
          },
          {
            "key": "volume",
            "type": "Number",
            "name": ""
          },
          {
            "key": "pitch",
            "type": "Number",
            "name": ""
          },
          {
            "key": "isLoop",
            "type": "bool",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--对玩家播放音乐\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为音乐id，具体可以在“迷你世界ID表查询”的“音效表数据”里查看\n--第三个参数为播放音量\n--第四个参数为播放音高\n--最后一个参数为是否循环播放\nPlayer:playMusic(0,10713,100,1,false)\n--在聊天框显示\nChat:sendSystemMsg(\"开始对房主播放音乐10713\")"
      },
      {
        "name": "stopMusic",
        "desc": "停止播放玩家背景音乐",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--对房主播放音乐10713\nPlayer:playMusic(0,10713,100,1,false)\n--在聊天框显示\nChat:sendSystemMsg(\"开始对房主播放音乐10713，做动画表情即可停止播放\")\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--停止对玩家播放音乐，参数为玩家id或玩家迷你号，0是房主\n\tPlayer:stopMusic(0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"停止对房主播放音乐\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "setGameWin",
        "desc": "使玩家获得游戏胜利",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家做动画表情，让指定迷你号的玩家获胜\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--指定迷你号玩家获胜，参数为玩家迷你号\n\tlocal result=Player:setGameWin(1000)\n\tif result==0 then--如果房间里存在迷你号为1000的玩家\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"设置玩家1000获胜\")\n\telse--如果房间里没有迷你号为1000的玩家\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"房间里没有玩家迷你号为1000\")\n\tend\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "openDevStore",
        "desc": "打开开发者商店",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家做动画表情，为指定玩家打开开发者商店\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--为指定玩家打开开发者商店，参数为玩家id或玩家迷你号，0是房主\n\tPlayer:openDevStore(0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"为房主打开了开发者商店\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "getPropsType",
        "desc": "玩家手持道具的类型",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal playerid=event.eventobjid--玩家\n\t--获取玩家手持道具id\n\tlocal result,id=Player:getPropsType(playerid)\n\tif result==0 then\n\t\tChat:sendSystemMsg(\"玩家手持道具id为\".. id)\n\telse\n\t\tChat:sendSystemMsg(\"玩家当前没有手持道具\")\n\tend\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "setCheckBoxScale",
        "desc": "设置检测掉落物半径",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "range",
            "type": "Number",
            "name": "缩放比例"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家\n\tlocal range=10--缩放倍数\n\t--设置玩家检测掉落物半径放大10倍\n\tPlayer:setCheckBoxScale(objid, range)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "openBoxByPos",
        "desc": "打开可以操作的箱子",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "方块位置"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家\n\tlocal x,y,z=0,7,0--箱子坐标\n\t--为玩家打开位于(0,0)高度7处的箱子(前提是这个位置有箱子且可以打开)\n\tPlayer:openBoxByPos(objid, x, y, z)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "forceOpenBoxUI",
        "desc": "强制打开可以操作的方块 如工具箱",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "工具箱方块ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家\n\tlocal itemid=824--可以操作的方块id，这里是黄铜工匠台\n\t--为玩家打开操作界面(不需要实际放置)\n\tPlayer:forceOpenBoxUI(objid, itemid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "openDevGoodsBuyDialog",
        "desc": "customDesc : 自定义商品描述",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "devGoodsId",
            "type": "Number",
            "name": "商品id"
          },
          {
            "key": "customDesc",
            "type": "String",
            "name": "商品描述"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家\n\tlocal devGoodsId=1--商品id，具体可在脚本编辑界面ID库查询\n\tlocal customDesc=\"商品描述\"--商品描述\n\t--为玩家打开开发者商品购买弹窗\n\tPlayer:openDevGoodsBuyDialog(objid, devGoodsId, customDesc)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "changPlayerMoveType",
        "desc": "改变玩家移动方式",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "moveType",
            "type": "Number",
            "name": "移动方式类型"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n    local objid=event.eventobjid--点击方块的玩家\n    local moveType=1--移动方式：1飞行 2默认\n    --设置玩家的移动方式为飞行\n\tPlayer:changPlayerMoveType(objid, moveType)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块，执行函数ClickBlock"
      },
      {
        "name": "setImmuneType",
        "desc": "设置玩家免疫伤害类型开关",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "immunetype",
            "type": "Number",
            "name": ""
          },
          {
            "key": "isadd",
            "type": "bool",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--点击方块的玩家\n\tlocal immunetype=0--近战伤害(伤害类型可在常量列表查询)\n\tlocal isadd=true--开启\n\t--给玩家开启免疫近战伤害\n\tPlayer:setImmuneType(objid, immunetype, isadd)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "shakeCamera",
        "desc": "抖动玩家摄像机",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "duration",
            "type": "Number",
            "name": ""
          },
          {
            "key": "power",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--要抖动镜头的玩家，这里是点击方块的玩家\n\tlocal duration=10--抖动持续秒数\n\tlocal power=100--抖动力度\n\t--抖动玩家的镜头持续duration秒，力度为power\n\tPlayer:shakeCamera(objid, duration, power)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "stopShakeCamera",
        "desc": "停止抖动玩家摄像机",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块，开始抖动镜头持续1000秒\nlocal function ClickBlock(event)\n\tlocal objid=event.eventobjid--要抖动镜头的玩家，这里是点击方块的玩家\n\tlocal duration=1000--抖动持续秒数\n\tlocal power=100--抖动力度\n\t--抖动玩家的镜头持续duration秒，力度为power\n\tPlayer:shakeCamera(objid, duration, power)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块\n--玩家点击生物，停止镜头抖动\nlocal function ClickActor(event)\n\tlocal objid=event.eventobjid--要停止抖动镜头的玩家，这里是点击生物的玩家\n\t--停止抖动玩家的镜头\n\tPlayer:stopShakeCamera(objid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], ClickActor)--点击生物"
      },
      {
        "name": "playQQMusic",
        "desc": "玩家播放qq音乐",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "musicId",
            "type": "Number",
            "name": "音乐ID"
          },
          {
            "key": "volume",
            "type": "Number",
            "name": "音量"
          },
          {
            "key": "isLoop",
            "type": "Boolean",
            "name": "是否循环"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Player:playQQMusic(objid,musicId,valume,idLoop)"
      },
      {
        "name": "operateQQMusic",
        "desc": "暂停/恢复/停止玩家的QQ音乐",
        "parm": [
          {
            "key": "operate",
            "type": "Number",
            "name": "QQMUSICOP"
          },
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Player:playQQMusic(objid,musicId,valume,idLoop)"
      },
      {
        "name": "OpenAppraiseView",
        "desc": "打开评价界面",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function callback(event)\n  local ret = Player:OpenAppraiseView(event.eventobjid)\n  if ret == ErrorCode.OK then\n      print('打开成功')\n  end\nend\nScriptSupportEvent:registerEvent([[Player.ClickBlock]],callback) --点击方块事件"
      },
      {
        "name": "OpenCollectionView",
        "desc": "打开收藏界面",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function callback(event)\n  local ret = Player:OpenCollectionView(event.eventobjid)\n  if ret == ErrorCode.OK then\n      print('打开成功')\n  end\nend\nScriptSupportEvent:registerEvent([[Player.ClickBlock]],callback) --点击方块事件"
      },
      {
        "name": "IsMiniVip",
        "desc": "是否为迷你会员",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function callback(event)\n  local ret = Player:IsMiniVip(event.eventobjid)\n  if ret == ErrorCode.OK then\n      print('玩家是会员')\n  else\n      print('玩家不是会员')\n  end\nend\nScriptSupportEvent:registerEvent([[Player.ClickBlock]],callback) --点击方块事件"
      },
      {
        "name": "SendFriendApply",
        "desc": "发送好友请求",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "发送请求的玩家ID"
          },
          {
            "key": "playerid2",
            "type": "Number",
            "name": "被添加的好友ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Player:SendFriendApply(playerid,playerid2)"
      },
      {
        "name": "HasFriend",
        "desc": "是否是好友判断",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "发送请求的玩家ID"
          },
          {
            "key": "playerid2",
            "type": "Number",
            "name": "判断是否是好友的ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Player:HasFriend(playerid,playerid2)"
      },
      {
        "name": "PlayActInHand",
        "desc": "手持道具播放动画",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动作ID"
          },
          {
            "key": "playmode",
            "type": "Number",
            "name": "播放模式(ANIMMODE)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "属性值"
          }
        ],
        "example": "local result = Player:PlayActInHand(objid,12,ITEMATTR.ATTACK) --指定玩家当前选择的微缩道具循环播放跑动画"
      },
      {
        "name": "openDevStoreNew",
        "desc": "玩家打开开发者商店（仅开发者可用）",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家Uin"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:openDevStoreNew(objid)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "OpenBuiltinRank",
        "desc": "打开内置排行榜",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "排行榜ID(也可填索引)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:OpenBuiltinRank(playerid, id)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "HideBuiltinRank",
        "desc": "隐藏内置排行榜",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "对象ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:HideBuiltinRank(playerid)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "openDevGoodsBuyDetailedDialog",
        "desc": "打开开发者商店商品详情页",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "devGoodsId",
            "type": "Number",
            "name": "商品ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:openDevGoodsBuyDetailedDialog(objid, devGoodsId)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "setMobileVibrate",
        "desc": "玩家手机震动",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "震动时长(单位：ms)"
          },
          {
            "key": "amplitude",
            "type": "Number",
            "name": "震动强度(范围：1~255)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:setMobileVibrate(playerid, time, amplitude)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraPosTransformBy",
        "desc": "玩家摄像机变换相对位置",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "vec",
            "type": "table",
            "name": "变换轴向，不变换的轴向可不填（{x=100y=100}摄像机xy轴分别增加100）"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动画枚举(LinearTransformation)LinearTransformation"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "动画时长"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraPosTransformBy(playerid, vec, animid, time)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraPosTransformTo",
        "desc": "玩家摄像机变换到位置",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "vec",
            "type": "table",
            "name": "变换轴向，不变换的轴向可不填（{x=100y=100}摄像机xy轴分别变换到100的位置）"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动画枚举(LinearTransformation)LinearTransformation"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "动画时长"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraPosTransformTo(playerid, vec, animid, time)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraRotTransformBy",
        "desc": "玩家摄像机旋转相对角度",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "vec",
            "type": "table",
            "name": "变换轴向，不变换的轴向可不填（{x=90y=90}摄像机xy轴分别旋转90度）"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动画枚举(LinearTransformation)LinearTransformation"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "动画时长"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraRotTransformBy(playerid, vec, animid, time)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraRotTransformTo",
        "desc": "玩家摄像机旋转到角度",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "vec",
            "type": "table",
            "name": "变换轴向，不变换的轴向可不填（{x=90y=90}摄像机xy轴分别旋转到90度）"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动画枚举(LinearTransformation)LinearTransformation"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "动画时长"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraRotTransformTo(playerid, vec, animid, time)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraFovTransformBy",
        "desc": "玩家摄像机Fov变换相对值",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "视场角"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动画枚举(LinearTransformation)LinearTransformation"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "动画时长"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraFovTransformBy(playerid, value, animid, time)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraFovTransformTo",
        "desc": "玩家摄像机Fov变换到值",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "视场角"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动画枚举(LinearTransformation)LinearTransformation"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "动画时长"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraFovTransformTo(playerid, value, animid, time)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraAttrState",
        "desc": "设置玩家的摄像机设置开关",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "attr",
            "type": "Number",
            "name": "摄像机属性(CameraModel)CameraModel"
          },
          {
            "key": "enable",
            "type": "Boolean",
            "name": "是否"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraAttrState(playerid, attr, enable)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraRotMode",
        "desc": "设置玩家的摄像机旋转模式",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "attr",
            "type": "Number",
            "name": "摄像机旋转模式(CameraRotate)CameraRotate"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraRotMode(playerid, attr)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraMountObj",
        "desc": "设置玩家的摄像机挂载到对象",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "objid",
            "type": "Number",
            "name": "对象objid"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraMountObj(playerid, objid)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SetCameraMountPos",
        "desc": "设置玩家的摄像机挂载到位置",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "pos",
            "type": "table",
            "name": "位置坐标"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:SetCameraMountPos(playerid, pos)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "ResetCameraAttr",
        "desc": "重置玩家摄像机",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:ResetCameraAttr(playerid)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "openDevGoodsSkinBuyDialog",
        "desc": "打开皮肤商品购买弹框",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "skin",
            "type": "String",
            "name": "模型ID"
          },
          {
            "key": "desc",
            "type": "String",
            "name": "描述语"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:openDevGoodsSkinBuyDialog(playerid, skin, desc)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "openDevGoodsSkinDetail",
        "desc": "\n打开皮肤商品详情页\n(仅限自定义UI按钮响应事件)\n",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          },
          {
            "key": "skin",
            "type": "String",
            "name": "模型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:openDevGoodsSkinDetail(playerid, skin)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "openDevGoodsSkin",
        "desc": "打开皮肤商店(仅限自定义UI按钮响应事件)",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家Uin"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Player:openDevGoodsSkin(playerid)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      }
    ]
  },
  {
    "class": "Creature",
    "name": "生物接口",
    "functions": [
      {
        "name": "getAttr",
        "desc": "生物属性设置获取",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attrtype",
            "type": "Number",
            "name": "CREATUREATTR"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，聊天框显示生物属性\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的指定属性\n\t--第一个参数为要获取属性的生物在存档中的id\n\t--第二个参数为要获取的属性，2是当前生命值，具体可在“游戏数据类型”的“生物属性枚举”中查看\n\tlocal result,value=Creature:getAttr(event.toobjid,2)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的当前生命值为：\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setAttr",
        "desc": "生物属性获取",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attrtype",
            "type": "Number",
            "name": "CREATUREATTR"
          },
          {
            "key": "val",
            "type": "Number",
            "name": "需要设置的数值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物属性\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的指定属性\n\t--第一个参数为要设置属性的生物在存档中的id\n\t--第二个参数为要设置的属性，1是最大生命值，具体可在“游戏数据类型”的“生物属性枚举”中查看\n\t--第三个参数为要设置的值\n\tCreature:setAttr(event.toobjid,1,999)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的最大生命值被设置为了999\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "isAdult",
        "desc": "判断该生物是否成年",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [],
        "example": "--玩家点击生物，聊天框显示生物是否成年\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--判断生物是否成年，参数为生物在存档中的id\n\tlocal result=Creature:isAdult(event.toobjid)\n\tif result==0 then--如果已成年\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物已成年\")\n\telse--如果未成年\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物未成年\")\n\tend\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setOxygenNeed",
        "desc": "设置是否依赖氧气",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "v",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置该生物是否需要氧气生成\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置生物是否需要氧气\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为是否需要氧气：true需要 false不需要\n\tCreature:setOxygenNeed(event.toobjid,false)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物被设置为了不需要氧气生存\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getTamedOwnerID",
        "desc": "获取驯养主ID",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "uin",
            "type": "Number",
            "name": "0表示未驯服"
          }
        ],
        "example": "--玩家点击生物，聊天框显示生物主人\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物是否被驯服、被谁驯服\n\tlocal result,uin=Creature:getTamedOwnerID(event.toobjid)\n\tif uin==0 then--如果没有被驯服\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物没有被驯服\")\n\telse--如果被驯服\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物被玩家\"..uin..\"驯服\")\n\tend\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setPanic",
        "desc": "设置是否正在惊慌",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "v",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物是否惊慌\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置生物是否正在惊慌\n\t--第一个参数为生物在存档中的id\n\t--第二个参数为是否正在惊慌：true是 false否\n\tCreature:setPanic(event.toobjid,true)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物被设置为了正在惊慌\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setAIActive",
        "desc": "设置AI是否生效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "v",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物AI是否生效\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置生物AI是否生效\n\t--第一个参数为生物在存档中的id\n\t--第二个参数为AI是否生效：true是 false否\n\tCreature:setAIActive(event.toobjid,false)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物AI被设置为了不生效\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getActorID",
        "desc": "获取生物actorID",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "actorid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，在聊天框显示生物id\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的生物id，参数为生物在存档中的id\n\tlocal result,actorid=Creature:getActorID(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物在当前存档中的生物id为：\"..actorid)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getActorName",
        "desc": "获取生物名称",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "name",
            "type": "String",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，在聊天框显示生物名字\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的生物名字，参数为生物在存档中的id\n\tlocal result,name=Creature:getActorName(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的名字为：\"..name)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "addModAttrib",
        "desc": "增加模组属性",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attrtype",
            "type": "",
            "name": ""
          },
          {
            "key": "value",
            "type": "Number",
            "name": "设置数值大小"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，增加被点击生物的buff属性\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--增加指定生物的buff属性\n\t--第一个参数为要增加属性的生物在存档中的id\n\t--第二个参数为要增加的附魔属性，0是移动速度，具体可以在“游戏数据类型”的“附魔属性类型”中查看\n\t--第三个参数为要增加的值\n\tCreature:addModAttrib(event.toobjid,0,1)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的移动速度附魔等级被增加了1\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getModAttrib",
        "desc": "获取模组属性",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "attrtype",
            "type": "",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，聊天框显示生物buff属性\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的buff属性值\n\t--第一个参数为要获取属性的生物在存档中的id\n\t--第二个参数为要获取的附魔属性，0是移动速度，具体可以在“游戏数据类型”的“附魔属性类型”中查看\n\tlocal result,value=Creature:getModAttrib(event.toobjid,0)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的移动速度附魔等级为：\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setTeam",
        "desc": "设置生物队伍",
        "parm": [
          {
            "key": "objids",
            "type": "Number",
            "name": ""
          },
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物队伍\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置生物所属的队伍\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置为的队伍id\n\tCreature:setTeam(event.toobjid,1)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物被设置到了队伍1\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getTeam",
        "desc": "获取生物队伍",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物队伍\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物所属的队伍，参数为要获取的生物在存档中的id\n\tlocal result,teamid=Creature:getTeam(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物所属的队伍为：\"..teamid)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getMaxFood",
        "desc": "获取最大饥饿度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物最大饥饿度\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 最大饥饿度，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getMaxFood(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 最大饥饿度为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getFood",
        "desc": "获取饥饿度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物当前饥饿度\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 当前饥饿度，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getFood(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 当前饥饿度为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setFood",
        "desc": "设置饥饿度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的当前饥饿度\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的当前饥饿度\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setFood(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 当前饥饿度被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getHpRecover",
        "desc": "HP恢复",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物HP恢复\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 HP恢复，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getHpRecover(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 HP恢复为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getMaxOxygen",
        "desc": "最大氧气值",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物最大氧气值\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 最大氧气值，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getMaxOxygen(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 最大氧气值为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getWalkSpeed",
        "desc": "行走速度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物行走速度\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 行走速度，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getWalkSpeed(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 行走速度为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getSwimSpeed",
        "desc": "游泳速度（水中速度）",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物游泳速度\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 游泳速度，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getSwimSpeed(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 游泳速度为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getJumpPower",
        "desc": "跳跃力",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物跳跃力\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 跳跃力，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getJumpPower(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 跳跃力为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getMass",
        "desc": "重量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物重量\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 重量，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getMass(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 重量为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getDodge",
        "desc": "闪避",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物闪避值\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 闪避值，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getDodge(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 闪避值为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getPunchAttack",
        "desc": "近程攻击",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物近战攻击\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 近战攻击，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getPunchAttack(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 近战攻击为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getRangeAttack",
        "desc": "远程攻击",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物远程攻击\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 远程攻击，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getRangeAttack(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 远程攻击为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getPunchDefense",
        "desc": "近程防御",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物近战防御\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 近战防御，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getPunchDefense(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 近战防御为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "getRangeDefense",
        "desc": "远程防御",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物，获取生物远程防御\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--获取指定生物的 远程防御，参数为要获取的生物在存档中的id\n\tlocal result,value=Creature:getRangeDefense(event.toobjid)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物 远程防御为\"..value)\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setMaxHp",
        "desc": "设置血量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的最大生命值\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的最大生命值\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setMaxHp(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 最大生命值被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setHP",
        "desc": "设置血量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的当前生命值\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的当前生命值\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setHP(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 当前生命值被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setHpRecover",
        "desc": "设置HP恢复",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的生命恢复\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的生命恢复\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setHpRecover(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 生命恢复被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setOxygen",
        "desc": "设置氧气",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的氧气值\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的氧气值\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setOxygen(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 氧气值被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setWalkSpeed",
        "desc": "设置行走速度",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的行走速度\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的行走速度\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setWalkSpeed(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 行走速度被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setSwimSpeed",
        "desc": "设置游泳速度（水中速度）",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的游泳速度\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的游泳速度\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setSwimSpeed(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 游泳速度被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setJumpPower",
        "desc": "设置跳跃力",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的跳跃力\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的跳跃力\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setJumpPower(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 跳跃力被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setDodge",
        "desc": "设置闪避",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的闪避值\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的闪避值\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setDodge(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 闪避值被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setPunchAttack",
        "desc": "设置近程攻击",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的近战攻击\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的近战攻击\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setPunchAttack(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 近战攻击被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setRangeAttack",
        "desc": "设置远程攻击",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的远程攻击\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的远程攻击\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setRangeAttack(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 远程攻击被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setPunchDefense",
        "desc": "设置近程防御",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的近战防御\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的近战防御\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setPunchDefense(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 近战防御被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "setRangeDefense",
        "desc": "设置远程防御",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物，设置生物的远程防御\n--当点击生物时会执行此函数\nlocal function Player_ClickActor(event)\n\t--设置指定生物的远程防御\n\t--第一个参数为要设置的生物在存档中的id\n\t--第二个参数为要设置的值\n\tCreature:setRangeDefense(event.toobjid,100)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"objid为\"..event.toobjid..\"的生物的 远程防御被设置为了100\")\nend\n--注册监听器，点击生物时执行Player_ClickActor函数\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=],Player_ClickActor)"
      },
      {
        "name": "replaceActor",
        "desc": "替换生物",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actorid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "hp",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickActor(event)\n\tlocal objid=event.toobjid--要替换掉的生物实体id，这里是被点击的生物\n\tlocal actorid=3400--要替换为的生物类型id，这里是鸡，具体可以在ID库查询\n\tlocal hp=10--替换后的生物血量\n\t--把被点击的生物替换为actorid，生命值为hp\n\tCreature:replaceActor(objid, actorid, hp)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], ClickActor)--点击生物"
      },
      {
        "name": "GetMonsterDefName",
        "desc": "获取生物名称",
        "parm": [
          {
            "key": "monsterid",
            "type": "Number",
            "name": "生物类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "name",
            "type": "Number",
            "name": "生物类型名称"
          }
        ],
        "example": "local result,name = Creature:GetMonsterDefName(monsterid)"
      },
      {
        "name": "GetMonsterDefDesc",
        "desc": "获取生物描述",
        "parm": [
          {
            "key": "monsterid",
            "type": "Number",
            "name": "生物类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "desc",
            "type": "Number",
            "name": "生物类型描述"
          }
        ],
        "example": "local result,desc = Creature:GetMonsterDefDesc(monsterid)"
      }
    ]
  },
  {
    "class": "UI",
    "name": "世界UI接口",
    "functions": [
      {
        "name": "setGBattleUI",
        "desc": "设置战斗总结UI",
        "parm": [
          {
            "key": "name",
            "type": "String",
            "name": "设定名"
          },
          {
            "key": "value",
            "type": "stringor",
            "name": " boolean设定值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置游戏结束界面(有些貌似没效果)\n--设置左标题，只需要修改第二个参数\nUI:setGBattleUI(\"left_title\",\"这里是左标题\")\n--设置右标题，只需要修改第二个参数\nUI:setGBattleUI(\"rigjt_title\",\"这里是右标题\")\n--设置左描述，只需要修改第二个参数\nUI:setGBattleUI(\"left_desc\",\"这里是左描述\")\n--设置左简述，只需要修改第二个参数\nUI:setGBattleUI(\"left_title_desc\",\"这里是左简述\")\n--设置右简述，只需要修改第二个参数\nUI:setGBattleUI(\"right_title_desc\",\"这里是右简述\")\n--设置比分导航栏面板按钮是否显示，true显示 false不显示\nUI:setGBattleUI(\"battle_btn\",true)\n--设置比赛结果是否显示，true显示 false不显示\nUI:setGBattleUI(\"result\",true)\n--设置比赛结果底板是否显示，true显示 false不显示\nUI:setGBattleUI(\"result_bkg\",true)\n--设置再来一局按钮是否显示，true显示 false不显示\nUI:setGBattleUI(\"reopen\",true)\n--在聊天框显示提示\nChat:sendSystemMsg(\"做动画表情结束游戏即可查看效果\")\n--每当玩家做动画表情，就会游戏结束\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--结束游戏\n    Game:doGameEnd(nil)\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "world2RadarPos",
        "desc": "世界坐标转换到小地图",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取存档里(100,100)的位置在地图上的坐标\nlocal result,x,z=UI:world2RadarPos(100,100)\n--在聊天框显示\nChat:sendSystemMsg(\"坐标(100,100)在当前地图上的坐标为(\"..x..\",\"..z..\")\")"
      },
      {
        "name": "world2RadarDist",
        "desc": "世界长度转换到小地图",
        "parm": [
          {
            "key": "length",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "length",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取存档里100格距离在地图上的长度\nlocal result,length=UI:world2RadarDist(100)\n--在聊天框显示\nChat:sendSystemMsg(\"存档里100格距离在地图上的长度为\"..length)"
      },
      {
        "name": "setMinimapRenderMode",
        "desc": "设置小地图模式。1：45度旋转视角；2：全图俯视角",
        "parm": [
          {
            "key": "mode",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置地图查看模式为45度旋转视角\n--参数 0:默认 1:45度旋转视角 2:全图固定俯视角\nUI:setMinimapRenderMode(1)\n--在聊天框显示\nChat:sendSystemMsg(\"设置地图查看模式为45度旋转视角\")"
      },
      {
        "name": "setShapeLine",
        "desc": "地图标记形状设置，设置成线条(LineShape)",
        "parm": [
          {
            "key": "uiname",
            "type": "String",
            "name": ""
          },
          {
            "key": "p1x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "p1y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "p2x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "p2y",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = UI:setShapeLine(uiname, p1x, p1y, p2x, p2y)"
      },
      {
        "name": "setShapeCircle",
        "desc": "地图标记形状设置，设置成圆(CircleShape)",
        "parm": [
          {
            "key": "uiname",
            "type": "String",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "radius",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = UI:setShapeCircle(uiname, x, y, radius)"
      },
      {
        "name": "ShowScreenEffect",
        "desc": "显示屏幕特效",
        "parm": [
          {
            "key": "type",
            "type": "Number",
            "name": "效果类型"
          },
          {
            "key": "isloop",
            "type": "Boolean",
            "name": "是否循环"
          },
          {
            "key": "incspeed",
            "type": "Number",
            "name": "增速bshow"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--显示雾效(貌似没效果)\n--第一个参数为屏幕效果id：1 speedline 2 powerline 3 fog\n--第二个参数为是否循环：true是 false否\n--第三个参数为增速\nUI:ShowScreenEffect(3,false,1)\n--在聊天框显示\nChat:sendSystemMsg(\"显示雾效\")"
      }
    ]
  },
  {
    "class": "Area",
    "name": "区域接口",
    "functions": [
      {
        "name": "createAreaRect",
        "desc": "创建矩形区域",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "中心位置"
          },
          {
            "key": "dim",
            "type": "table",
            "name": "尺寸"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--通过中心点和扩展长度创建一个区域\n--第一个参数{x=0,y=10,z=0}为区域中心坐标组成的表\n--第二个参数{x=1,y=2,z=3}为区域各方向扩展的距离组成的表\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=1,y=2,z=3})\n--在聊天框显示\nChat:sendSystemMsg(\"以(0,0)高度10为中心，左右各扩展1格，上下各扩展2格，前后各扩展3格，创建了一个区域，id为\"..areaid)"
      },
      {
        "name": "createAreaRectByRange",
        "desc": "创建矩形区域(通过范围)",
        "parm": [
          {
            "key": "posBeg",
            "type": "table",
            "name": ""
          },
          {
            "key": "posEnd",
            "type": "table",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--通过起点终点坐标创建区域\n--第一个参数为区域起点坐标组成的表，即面朝北时，区域的左、下、后方的顶点坐标\n--第二个参数为区域终点坐标组成的表，即面朝北时，区域的右、上、前方的顶点坐标\nlocal result,areaid=Area:createAreaRectByRange({x=0,y=7,z=0},{x=5,y=10,z=5})\n--在聊天框显示\nChat:sendSystemMsg(\"以(0,0)高度7为起点，(5,5)高度10为终点创建一个区域，id为\"..areaid)"
      },
      {
        "name": "destroyArea",
        "desc": "销毁区域",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--销毁指定区域，参数为区域id\nArea:destroyArea(1)\n--在聊天框显示\nChat:sendSystemMsg(\"销毁了id为1的区域\")"
      },
      {
        "name": "getAreaByPos",
        "desc": "通过位置查找区域",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "中心位置"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--判断某坐标所属的区域，参数为坐标组成的表\nlocal result,areaid=Area:getAreaByPos({x=0,y=7,z=0})\nif result==0 then--如果获取成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7所在的区域id为\"..areaid)\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"获取失败，或(0,0)高度7不属于任何区域\")\nend"
      },
      {
        "name": "offsetArea",
        "desc": "区域偏移",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--平移区域范围\n--第一个参数为要平移的区域id\n--后三个参数分别为向右、上、前的平移距离，可为负\nArea:offsetArea(areaid,5,5,5)\n--在聊天框显示\nChat:sendSystemMsg(\"id为\"..areaid..\"的区域被向右、上、前各移动了5格\")"
      },
      {
        "name": "expandArea",
        "desc": "扩大区域",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--扩充区域范围\n--第一个参数为区域id\n--后三个参数分别为区域向左右、上下、前后扩充的距离\nArea:expandArea(areaid,2,2,2)\n--在聊天框显示\nChat:sendSystemMsg(\"id为\"..areaid..\"的区域向左右、上下、前后各扩充了2格范围\")"
      },
      {
        "name": "getAreaCenter",
        "desc": "获取区域中间点",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "pos",
            "type": "table",
            "name": "中心位置"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--获取指定区域的中心坐标，参数为要获取中心的区域id\nlocal result,pos=Area:getAreaCenter(areaid)\n--在聊天框显示\nChat:sendSystemMsg(\"id为\"..areaid..\"的区域的中心点坐标为：(\"..pos.x..\",\"..pos.y..\",\"..pos.z..\")\")"
      },
      {
        "name": "getAreaRectLength",
        "desc": "获取区域各边长",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--获取指定区域各方向的边长，参数为区域id\nlocal result,x,y,z=Area:getAreaRectLength(areaid)\n--在聊天框显示\nChat:sendSystemMsg(\"id为\"..areaid..\"的区域各方向的边长为：左右\"..x..\",上下\"..y..\",前后\"..z)"
      },
      {
        "name": "getAreaRectRange",
        "desc": "获取区域范围",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "posBeg",
            "type": "table",
            "name": ""
          },
          {
            "key": "posEnd",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--获取指定区域的起点和终点坐标，参数为区域id\nlocal result,posBeg,posEnd=Area:getAreaRectRange(areaid)\n--在聊天框显示\nChat:sendSystemMsg(\"id为\"..areaid..\"的区域的起点坐标为(\"..posBeg.x..\",\"..posBeg.y..\",\"..posBeg.z..\")，终点坐标为(\"..posEnd.x..\",\"..posEnd.y..\",\"..posEnd.z..\")\")"
      },
      {
        "name": "getRandomPos",
        "desc": "随机区域内位置",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "pos",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--从指定区域中随机获取一个坐标，参数为区域id\nlocal result,pos=Area:getRandomPos(areaid)\n--在聊天框显示\nChat:sendSystemMsg(\"从id为\"..areaid..\"的区域中随机获取了一个坐标(\"..pos.x..\",\"..pos.y..\",\"..pos.z..\")\")"
      },
      {
        "name": "objInArea",
        "desc": "检测obj是否在区域内",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--判断某对象是否在指定区域中\n--第一个参数为区域id\n--第二个参数为对象id，可以是玩家迷你号、生物id或掉落物id等等\nlocal result=Area:objInArea(areaid,1000)\nif result==0 then--如果在区域内\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000在区域\"..areaid..\"内部\")\nelse--如果不在内部或获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在区域\"..areaid..\"内部，或玩家1000不在当前存档\")\nend"
      },
      {
        "name": "blockInArea",
        "desc": "检测区域内是否有某个方块",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--判断指定区域是否包含某种方块\n--第一个参数为区域id\n--第二个参数为方块id\nlocal result=Area:blockInArea(areaid,101)\nif result==0 then--如果包含\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"id为\"..areaid..\"的区域内有土块\")\nelse--如果不包含\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"id为\"..areaid..\"的区域内没有土块\")\nend"
      },
      {
        "name": "posInArea",
        "desc": "位置是否在区域内",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": ""
          },
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--判断某坐标是否在指定区域内\n--第一个参数为要判断的坐标组成的表\n--第二个参数为区域id\nlocal result=Area:posInArea({x=0,y=7,z=0},areaid)\nif result==0 then--如果在内部\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置在id为\"..areaid..\"的区域内\")\nelse--如果不在内部\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置不在id为\"..areaid..\"的区域内\")\nend"
      },
      {
        "name": "getAreaPlayers",
        "desc": "获取区域中的所有玩家",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "playerlist",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--获取区域内的玩家列表，参数为区域id\nlocal result,playerlist=Area:getAreaPlayers(areaid)\nif #playerlist>0 then--如果区域内存在玩家\n\tfor i,a in ipairs(playerlist) do\n\t\t--在聊天框显示列表\n\t\tChat:sendSystemMsg(\"区域\"..areaid..\"内第\"..i..\"个玩家：\"..a)\n\tend\nelse--如果区域内不存在玩家\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"区域\"..areaid..\"内没有玩家\")\nend"
      },
      {
        "name": "getAreaCreatures",
        "desc": "获取区域中的所有生物",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "creaturelist",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--获取区域内的生物列表，参数为区域id\nlocal result,creaturelist=Area:getAreaCreatures(areaid)\nif #creaturelist>0 then--如果区域内存在生物\n\tfor i,a in ipairs(creaturelist) do\n\t\t--在聊天框显示列表\n\t\tChat:sendSystemMsg(\"区域\"..areaid..\"内第\"..i..\"个生物：\"..a)\n\tend\nelse--如果区域内不存在生物\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"区域\"..areaid..\"内没有生物\")\nend"
      },
      {
        "name": "fillBlock",
        "desc": "用方块填充区域",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "face",
            "type": "Number",
            "name": "朝向"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=3,y=3,z=3})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展3格的区域，区域id为\"..areaid)\n--用方块填充指定区域\n--第一个参数为区域id\n--第二个参数为要填充的方块id，1为基岩\n--第三个参数为方块朝向：0西 1东 2南 3北 4下 5上\nArea:fillBlock(areaid,1,0)\n--在聊天框显示\nChat:sendSystemMsg(\"区域\"..areaid..\"被填充了基岩\")"
      },
      {
        "name": "clearAllBlock",
        "desc": "清空区域内全部方块",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--清空指定区域内的指定方块\n--第一个参数为区域id\n--第二个参数为要清除的方块id\nArea:clearAllBlock(areaid,101)\n--在聊天框显示\nChat:sendSystemMsg(\"清空了区域\"..areaid..\"内的所有土块\")"
      },
      {
        "name": "cloneArea",
        "desc": "复制区域内方块到另一个区域",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "deststartpos",
            "type": "table",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--复制区域内的方块到另一位置\n--第一个参数为要复制的区域id\n--第二个参数为要复制到的起点坐标组成的表\nArea:cloneArea(areaid,{x=0,y=10,z=0})\n--在聊天框显示\nChat:sendSystemMsg(\"把区域\"..areaid..\"内的所有方块复制到了(0,0)高度10的位置，此坐标与区域起点对应\")"
      },
      {
        "name": "getPosOffset",
        "desc": "传入两个坐标列表，得到相加后的位置",
        "parm": [
          {
            "key": "srcpos",
            "type": "table",
            "name": "{x=0,y=0,z=0}"
          },
          {
            "key": "dim",
            "type": "table",
            "name": "{x=2,y=2,z=2}"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "pos",
            "type": "table",
            "name": "{x=2,y=2,z=2}"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal srcpos={x=event.x,y=event.y,z=event.z}--起点坐标，这里是被点击的坐标\n\tlocal dim={x=10,y=10,z=10}--偏移距离\n\t--计算偏移后的坐标\n\tlocal result,pos=Area:getPosOffset(srcpos, dim)\n\tprint(pos)--在日志输出\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "replaceAreaBlock",
        "desc": "替换方块类型为新的方块类型",
        "parm": [
          {
            "key": "areaid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "srcblockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "destblockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "face",
            "type": "Number",
            "name": "朝向"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--创建一个区域\nlocal result,areaid=Area:createAreaRect({x=0,y=10,z=0},{x=30,y=30,z=30})\n--在聊天框显示\nChat:sendSystemMsg(\"创建了以(0,0)高度10为中心，向左右上下前后各扩展30格的区域，区域id为\"..areaid)\n--把指定区域内的一种方块替换成新的方块\n--第一个参数为区域id\n--第二个参数为要替换掉的方块id，101是土块\n--第三个参数为要替换为的方块id，1是地心基石\n--最后一个参数为方块朝向：0西 1东 2南 3北 4下 5上\nArea:replaceAreaBlock(areaid,101,1,0)\n--在聊天框显示\nChat:sendSystemMsg(\"区域\"..areaid..\"内所有土块被替换为了基岩\")"
      },
      {
        "name": "blockInAreaRange",
        "desc": "区域范围内有方块",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "posbeg",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--判断两点之前的范围内有没有某种方块\n--第一个参数为方块id，101是土块\n--后两个参数分别是范围起点和终点坐标组成的表\nlocal result=Area:blockInAreaRange(101,{x=0,y=5,z=0},{x=1,y=8,z=1})\nif result==0 then--如果包含\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"在(0,0)高度5到(1,1)高度8的范围内有土块\")\nelse--如果不包含\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"在(0,0)高度5到(1,1)高度8的范围内没有土块\")\nend"
      },
      {
        "name": "getAllObjsInAreaRange",
        "desc": "获取区域范围内全部对象",
        "parm": [
          {
            "key": "posbegin",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          },
          {
            "key": "objtype",
            "type": "Number",
            "name": "OBJ_TYPE"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "objids",
            "type": "table",
            "name": ""
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal x,y,z=event.x,event.y,event.z--点击坐标\n\tlocal posbegin={x=x-10,y=y-10,z=z-10}--起点\n\tlocal posend={x=x+10,y=y+10,z=z+10}--终点\n\tlocal objtype=1--对象类型，1是玩家\n\t--获取范围内所有玩家\n\tlocal result,objids=Area:getAllObjsInAreaRange(posbegin, posend, objtype)\n\tChat:sendSystemMsg(\"区域内共有\".. #objids ..\"个玩家\")--在聊天框显示玩家数量\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getAllObjsInAreaRangeByObjTypes",
        "desc": "获取区域范围内全部对象",
        "parm": [
          {
            "key": "posbegin",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          },
          {
            "key": "objtypes",
            "type": "table",
            "name": "OBJ_TYPE"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "objids",
            "type": "table",
            "name": ""
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal x,y,z=event.x,event.y,event.z--点击坐标\n\tlocal posbegin={x=x-10,y=y-10,z=z-10}--起点\n\tlocal posend={x=x+10,y=y+10,z=z+10}--终点\n\tlocal objtypes={1,2}--对象类型，1是玩家，2是生物\n\t--获取范围内所有玩家和生物\n\tlocal result,objids=Area:getAllObjsInAreaRangeByObjTypes(posbegin, posend, objtypes)\n\tChat:sendSystemMsg(\"区域内共有\".. #objids ..\"个玩家和生物\")--在聊天框显示\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getAllPlayersInAreaRange",
        "desc": "获取区域范围内全部玩家",
        "parm": [
          {
            "key": "posbegin",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "objids",
            "type": "table",
            "name": ""
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal x,y,z=event.x,event.y,event.z--点击坐标\n\tlocal posbegin={x=x-10,y=y-10,z=z-10}--起点\n\tlocal posend={x=x+10,y=y+10,z=z+10}--终点\n\t--获取范围内所有玩家\n\tlocal result,objids=Area:getAllPlayersInAreaRange(posbegin, posend)\n\tChat:sendSystemMsg(\"区域内共有\".. #objids ..\"个玩家\")--在聊天框显示\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getAllCreaturesInAreaRange",
        "desc": "获取区域范围内全部生物",
        "parm": [
          {
            "key": "posbegin",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "objids",
            "type": "table",
            "name": ""
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal x,y,z=event.x,event.y,event.z--点击坐标\n\tlocal posbegin={x=x-10,y=y-10,z=z-10}--起点\n\tlocal posend={x=x+10,y=y+10,z=z+10}--终点\n\t--获取范围内所有生物\n\tlocal result,objids=Area:getAllCreaturesInAreaRange(posbegin, posend)\n\tChat:sendSystemMsg(\"区域内共有\".. #objids ..\"个生物\")--在聊天框显示\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "fillBlockAreaRange",
        "desc": "用方块填充区域范围",
        "parm": [
          {
            "key": "posbeg",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": "方块ID"
          },
          {
            "key": "face",
            "type": "Number",
            "name": "朝向"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--在两点之间的范围内填充某方块\n--前两个参数为填充范围的起点和终点坐标组成的表\n--第三个参数1为要填充的方块id，1是地心基石\n--第四个参数0为方块朝向：0西 1东 2南 3北 4下 5上\nArea:fillBlockAreaRange({x=0,y=7,z=0},{x=5,y=9,z=5},1,0)\n--在聊天框显示\nChat:sendSystemMsg(\"从(0,0)高度7到(5,5)高度9的范围被填充了基岩\")"
      },
      {
        "name": "clearAllBlockAreaRange",
        "desc": "清空区域范围内方块",
        "parm": [
          {
            "key": "posbeg",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": "方块ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--清空两点之间范围内的某方块\n--前两个参数为范围的起点和终点坐标组成的表\n--第三个参数为要清除的方块id，101是土块\nArea:clearAllBlockAreaRange({x=0,y=7,z=0},{x=5,y=9,z=5},101)\n--在聊天框显示\nChat:sendSystemMsg(\"清空了(0,0)高度7到(5,5)高度9范围内的土块\")"
      },
      {
        "name": "cloneAreaRange",
        "desc": "复制区域范围内方块到另一个区域",
        "parm": [
          {
            "key": "posbeg",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          },
          {
            "key": "deststartpos",
            "type": "table",
            "name": "目标起始位置{x=number, y=number, z=number}"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--复制两点之间范围内的方块到另一位置\n--前两个参数为范围的起点和终点坐标组成的表\n--后一个参数为要复制到的范围起点坐标\nArea:cloneAreaRange({x=0,y=3,z=0},{x=5,y=7,z=5},{x=0,y=10,z=0})\n--在聊天框显示\nChat:sendSystemMsg(\"把(0,0)高度3到(5,5)高度7范围内的方块复制到了(0,0)高度10（以此为起点）\")"
      },
      {
        "name": "replaceAreaRangeBlock",
        "desc": "替换区域范围方块",
        "parm": [
          {
            "key": "posbeg",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          },
          {
            "key": "srcblockid",
            "type": "Number",
            "name": "替换原始方块"
          },
          {
            "key": "destblockid",
            "type": "Number",
            "name": "替换目标方块"
          },
          {
            "key": "face",
            "type": "Number",
            "name": "朝向"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--替换两点之间范围内的某种方块为另一种方块\n--前两个参数为范围的起点和终点坐标组成的表\n--第三个参数101为要替换掉的方块id，101是土块\n--第四个参数为要替换为的方块id，1是地心基石\n--最后一个参数为方块朝向：0西 1东 2南 3北 4下 5上\nArea:replaceAreaRangeBlock({x=0,y=3,z=0},{x=5,y=7,z=5},101,1,0)\n--在聊天框显示\nChat:sendSystemMsg(\"从(0,0)高度3到(5,5)高度7的范围内，所有的土块被替换为了基岩\")"
      },
      {
        "name": "DestroyBlockkAreaRange",
        "desc": "破坏区域范围方块",
        "parm": [
          {
            "key": "posbeg",
            "type": "table",
            "name": "起点{x=number, y=number, z=number}"
          },
          {
            "key": "posend",
            "type": "table",
            "name": "终点{x=number, y=number, z=number}"
          },
          {
            "key": "blockid",
            "type": "Number",
            "name": "破坏的方块ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "Area:DestroyBlockkAreaRange({x=0,y=3,z=0},{x=5,y=7,z=5},101)"
      }
    ]
  },
  {
    "class": "Chat",
    "name": "聊天接口",
    "functions": [
      {
        "name": "sendChat",
        "desc": "发送聊天消息(默认全部玩家)",
        "parm": [
          {
            "key": "content",
            "type": "String",
            "name": ""
          },
          {
            "key": "targetuin",
            "type": "Number",
            "name": "发给uin为targetuin的玩家，0表示发给所有玩家"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--发送一条聊天消息\n--第一个参数是消息内容，第二个参数是接收消息的玩家的uin，0表示全部玩家(貌似没有效果)\nChat:sendChat(\"这是一条聊天消息！\",0)\nChat:sendChat(\"也可以只输入消息内容，默认发给全部玩家\")"
      },
      {
        "name": "sendSystemMsg",
        "desc": "发送系统消息(默认全部玩家)",
        "parm": [
          {
            "key": "content",
            "type": "String",
            "name": ""
          },
          {
            "key": "targetuin",
            "type": "Number",
            "name": "发给uin为targetuin的玩家，0表示发给所有玩家"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--发送一条系统消息\n--第一个参数是消息内容，第二个参数是接收消息的玩家的uin，0表示全部玩家(貌似没有效果)\nChat:sendSystemMsg(\"这是一条系统消息！\",0)\nChat:sendSystemMsg(\"也可以只输入消息内容，默认发给全部玩家\")"
      }
    ]
  },
  {
    "class": "Team",
    "name": "组队接口",
    "functions": [
      {
        "name": "getNumTeam",
        "desc": "当前队伍数量",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取队伍数量\nlocal result,num=Team:getNumTeam()\n--在聊天框显示\nChat:sendSystemMsg(\"当前队伍数量为：\"..num)"
      },
      {
        "name": "getTeamPlayerNum",
        "desc": "获取指定队伍玩家数量",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": "队伍ID，默认全部"
          },
          {
            "key": "alive",
            "type": "Number",
            "name": "是否存活，默认全部"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "队伍玩家数量"
          }
        ],
        "example": "--获取第一个队伍的玩家数量\n--第一个参数为队伍id\n--第二个参数：0为当前队伍的死亡玩家数量 1为存活 2为全部\nlocal result,num=Team:getTeamPlayerNum(1,2)\n--在聊天框显示\nChat:sendSystemMsg(\"第一个队伍的玩家总数为：\"..num)"
      },
      {
        "name": "getTeamPlayers",
        "desc": "获取指定队伍玩家",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": "队伍ID，默认全部"
          },
          {
            "key": "alive",
            "type": "Number",
            "name": "是否存活，默认全部"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "队伍玩家数量"
          },
          {
            "key": "array",
            "type": "table",
            "name": "成员uin数组"
          }
        ],
        "example": "--获取第一个队伍的玩家数量和列表\n--第一个参数为队伍id\n--第二个参数：0为当前队伍的死亡玩家数量 1为存活 2为全部\nlocal result,num,array=Team:getTeamPlayers(1,2)\n--在聊天框显示数量\nChat:sendSystemMsg(\"第一个队伍的玩家总数为：\"..num)\nfor i,a in ipairs(array) do\n\t--在聊天框显示列表\n\tChat:sendSystemMsg(\"第\"..i..\"个：\"..a)\nend"
      },
      {
        "name": "randomTeamPlayer",
        "desc": "随机一名玩家",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": "队伍ID，默认全部"
          },
          {
            "key": "alive",
            "type": "Number",
            "name": "是否存活，默认全部"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "uin",
            "type": "Number",
            "name": "随机出玩家的uin"
          }
        ],
        "example": "--从队伍中随机选取一名玩家\n--第一个参数为队伍id\n--第二个参数：0为当前队伍的死亡玩家数量 1为存活 2为全部\nlocal result,uin=Team:randomTeamPlayer(1,2)\n--在聊天框显示\nChat:sendSystemMsg(\"从第一个队伍中随机选取了一名玩家：\"..uin)"
      },
      {
        "name": "getTeamCreatures",
        "desc": "获取指定队伍生物 (类似 getTeamPlayers)",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": "队伍ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "array",
            "type": "tableobjid",
            "name": "数组"
          }
        ],
        "example": "--获取属于第一个队伍的生物列表，参数为队伍id\nlocal result,array=Team:getTeamCreatures(1)\nif #array==0 then--如果没有生物\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"没有动物或怪物属于第一个队伍\")\nelse--如果有生物\n\tfor i,a in ipairs(array) do\n\t\t--在聊天框显示生物列表\n\t\tChat:sendSystemMsg(\"属于第一个队伍的生物id，\"..i..\"：\"..a)\n\tend\nend"
      },
      {
        "name": "setTeamScore",
        "desc": "队伍分数",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "score",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置指定队伍的分数\n--第一个参数为队伍id\n--第二个参数为要设置的分数\nTeam:setTeamScore(1,10)\n--在聊天框显示\nChat:sendSystemMsg(\"第一个队伍的分数被设置为了10\")"
      },
      {
        "name": "getTeamScore",
        "desc": "获取组队分数",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "score",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取队伍的分数，参数为队伍id\nlocal result,score=Team:getTeamScore(1)\n--在聊天框显示\nChat:sendSystemMsg(\"第一个队伍的游戏分数为\"..score)"
      },
      {
        "name": "addTeamScore",
        "desc": "增加队伍分数",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "score",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--给指定队伍增加分数\n--第一个参数为队伍id\n--第二个参数为要增加的游戏分数\nTeam:addTeamScore(1,10)\n--在聊天框显示\nChat:sendSystemMsg(\"第一个队伍的分数被增加了10\")"
      },
      {
        "name": "setTeamResults",
        "desc": "队伍胜负结果",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "result",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--每当玩家做动画表情，让指定队伍获胜或失败\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--让队伍1获胜\n\t--第一个参数为队伍id\n\t--第二个参数为：1获胜 2失败\n\tTeam:setTeamResults(1,1)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"队伍1获胜\")\nend\n--注册一个动画表情监听器，事件发生时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "getTeamResults",
        "desc": "获取当前队伍胜负",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "teamresult",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取队伍是否获胜，参数为队伍id\nlocal result,teamresult=Team:getTeamResults(1)\n--在聊天框显示\nChat:sendSystemMsg(\"队伍1当前获胜状态为(1:获胜 2:失败)：\"..teamresult)"
      },
      {
        "name": "setTeamDieTimes",
        "desc": "队伍阵亡次数",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "times",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置队伍玩家的阵亡次数，第一个参数为队伍id，第二个参数为阵亡次数\nTeam:setTeamDieTimes(1,10)\n--在聊天框显示\nChat:sendSystemMsg(\"队伍1的玩家阵亡次数被设置为了10\")"
      },
      {
        "name": "getTeamDieTimes",
        "desc": "获取队伍总死亡数",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "times",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取队伍1的总阵亡次数，参数为队伍id\nlocal result,times=Team:getTeamDieTimes(1)\n--在聊天框显示\nChat:sendSystemMsg(\"队伍1的总阵亡次数为：\"..times)"
      },
      {
        "name": "addTeamDieTimes",
        "desc": "增加队伍总死亡数",
        "parm": [
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--增加队伍的阵亡次数，参数为队伍id\nTeam:addTeamDieTimes(1)\n--在聊天框显示\nChat:sendSystemMsg(\"队伍1的死亡次数被增加了1（即队伍1的总生命数减少了1）\")"
      },
      {
        "name": "changePlayerTeam",
        "desc": "改变玩家队伍",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "teamid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把指定玩家设置到指定队伍\n--第一个参数为玩家id或玩家迷你号，0是房主\n--第二个参数为要移动到的队伍id\nTeam:changePlayerTeam(0,2)\n--在聊天框显示\nChat:sendSystemMsg(\"房主被设置到了队伍2\")"
      }
    ]
  },
  {
    "class": "Item",
    "name": "道具接口",
    "functions": [
      {
        "name": "getItemName",
        "desc": "获取道具名称",
        "parm": [
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "name",
            "type": "String",
            "name": ""
          }
        ],
        "example": "--获取id为1的物品的名称，参数1就是需要获取名称的物品id\nlocal result,name=Item:getItemName(1)\n--在聊天框显示\nChat:sendSystemMsg(\"id为1的物品的名字是：\"..name)"
      },
      {
        "name": "getItemId",
        "desc": "获取actor对应的道具ID，如球类等",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当有玩家做动画表情，聊天框显示房主周围10格内其中一个掉落物的id\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--获取房主的坐标\n\tlocal result,x,y,z=Player:getPosition(0)\n\t--获取房主周围10格内的掉落物数量和列表\n\tlocal result2,num,objids=World:getActorsByBox(3,x-10,y-10,z-10,x+10,y+10,z+10)\n\tif num>0 then--如果存在掉落物\n\t\t--获取掉落物列表中的第一个物品的id\n\t\tlocal result3,itemid=Item:getItemId(objids[1])\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"附近10格发现掉落物品！其中一个物品id为\"..itemid)\n\telse--如果不存在掉落物\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"附近10格没有发现掉落物品！\")\n\tend\nend\n--注册动画表情监听器，当玩家做动画表情时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "getDropItemNum",
        "desc": "获取掉落物数量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "itemnum",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--每当有玩家做动画表情，聊天框显示房主周围10格内其中一个掉落物的堆叠数量\n--当玩家做动画表情时执行此函数\nlocal function Player_PlayAction(event)\n\t--获取房主的坐标\n\tlocal result,x,y,z=Player:getPosition(0)\n\t--获取房主周围10格内的掉落物数量和列表\n\tlocal result2,num,objids=World:getActorsByBox(3,x-10,y-10,z-10,x+10,y+10,z+10)\n\tif num>0 then--如果存在掉落物\n\t\t--获取掉落物列表中的第一个物品的堆叠数量\n\t\tlocal result3,itemnum=Item:getDropItemNum(objids[1])\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"附近10格发现掉落物品！其中一种物品有\"..itemnum..\"个堆叠在了一起\")\n\telse--如果不存在掉落物\n\t\t--在聊天框显示\n\t\tChat:sendSystemMsg(\"附近10格没有发现掉落物品！\")\n\tend\nend\n--注册动画表情监听器，当玩家做动画表情时执行上面的函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],Player_PlayAction)"
      },
      {
        "name": "randomItemID",
        "desc": "获取随机道具id",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "随机道具id"
          }
        ],
        "example": "local result,blockid = Item:randomItemID()"
      },
      {
        "name": "randomProjectileID",
        "desc": "获取随机投掷物id",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "随机投掷物id"
          }
        ],
        "example": "local result,itemid = Item:randomProjectileID()"
      },
      {
        "name": "getItemDesc",
        "desc": "获取道具类型描述",
        "parm": [
          {
            "key": "itemid",
            "type": "Number",
            "name": "道具类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "desc",
            "type": "Number",
            "name": "道具类型描述"
          }
        ],
        "example": "local result,desc = Item:getItemDesc(itemid)"
      },
      {
        "name": "GetAttr",
        "desc": "获取道具属性",
        "parm": [
          {
            "key": "itemid",
            "type": "Number",
            "name": "道具类型ID"
          },
          {
            "key": "attr",
            "type": "Number",
            "name": "道具属性枚举(ITEMATTR)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "属性值"
          }
        ],
        "example": "local result,value = GetAttr(itemid,ITEMATTR.ATTACK)"
      },
      {
        "name": "playAct",
        "desc": "微缩模型的掉落物播放动画",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "掉落物objid"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动作ID"
          },
          {
            "key": "playmode",
            "type": "Number",
            "name": "播放模式(ANIMMODE)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Item:playAct(objid,12,ITEMATTR.ATTACK) --指定掉落物循环播放跑动画"
      }
    ]
  },
  {
    "class": "Backpack",
    "name": "背包接口",
    "functions": [
      {
        "name": "getBackpackBarIDRange",
        "desc": "获取道具背包栏ID范围(起始ID~结束ID)",
        "parm": [
          {
            "key": "bartype",
            "type": "Number",
            "name": "背包类型，快捷栏、存储栏、装备栏"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "begid",
            "type": "Number",
            "name": "道具格起始ID"
          },
          {
            "key": "endid",
            "type": "Number",
            "name": "道具格末尾ID"
          }
        ],
        "example": "--获取快捷栏的物品格id，参数为背包栏类型：1快捷栏 2储存栏 3装备栏\nlocal result,begid,endid=Backpack:getBackpackBarIDRange(1)\n--在聊天框显示\nChat:sendSystemMsg(\"快捷栏的物品格id为：\"..begid..\"至\"..endid)\n--获取储存栏的物品格id\nresult,begid,endid=Backpack:getBackpackBarIDRange(2)\n--在聊天框显示\nChat:sendSystemMsg(\"储存栏的物品格id为：\"..begid..\"至\"..endid)\n--装备栏的物品格id\nresult,begid,endid=Backpack:getBackpackBarIDRange(3)\n--在聊天框显示\nChat:sendSystemMsg(\"装备栏的物品格id为：\"..begid..\"至\"..endid)"
      },
      {
        "name": "getBackpackBarSize",
        "desc": "获取道具背包栏大小",
        "parm": [
          {
            "key": "bartype",
            "type": "Number",
            "name": "BPACK_SINDEX"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "size",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取背包栏总格数，参数为背包类型：1快捷栏 2储存栏 3装备栏\nlocal result,size=Backpack:getBackpackBarSize(1)\n--在聊天框显示\nChat:sendSystemMsg(\"快捷栏一共有\"..size..\"格\")"
      },
      {
        "name": "setGridItem",
        "desc": "设置背包格道具",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": "道具格ID"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": "默认1"
          },
          {
            "key": "durability",
            "type": "Number",
            "name": "耐久度，默认满耐久"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--给指定玩家的指定背包栏添加物品\n--第一个参数1000为玩家迷你号\n--第二个参数0为背包栏id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\n--第三个参数为要添加的物品id，12005是钻石剑\n--第四个参数为要添加的物品数量\n--最后一个参数为要添加的物品耐久，nil为默认满\nBackpack:setGridItem(1000,0,12005,10,nil)\n--在聊天框显示\nChat:sendSystemMsg(\"给迷你号为1000的玩家储存栏的第一格添加了10把钻石剑，耐久为满\")"
      },
      {
        "name": "removeGridItem",
        "desc": "移除背包格内一定数量道具，通过道具格移除，默认全部移除",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": "默认全部道具"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除指定玩家的指定背包栏的物品\n--第一个参数为玩家迷你号\n--第二个参数0为背包栏id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\n--第三个参数为移除数量\nBackpack:removeGridItem(1000,0,10)\n--在聊天框显示\nChat:sendSystemMsg(\"移除了玩家1000的背包栏第一格10个物品\")"
      },
      {
        "name": "removeGridItemByItemID",
        "desc": "移除背包内一定数量道具，通过道具ID移除，默认全部移除",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": "默认全部道具"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "成功移除数量"
          }
        ],
        "example": "--移除指定玩家背包里的指定物品\n--第一个参数为玩家迷你号\n--第二个参数为要移除的物品id，101为土块\n--第三个参数为要移除的物品数量\nlocal result,num=Backpack:removeGridItemByItemID(1000,101,50)\n--在聊天框显示\nChat:sendSystemMsg(\"尝试移除玩家1000背包里的50个土块，实际移除了\"..num..\"个\")"
      },
      {
        "name": "clearPack",
        "desc": "清空指定背包栏",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "bartype",
            "type": "Number",
            "name": "背包类型"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--清空指定玩家的背包物品\n--第一个参数为玩家迷你号\n--第二个参数为背包类型：1快捷栏 2储存栏 3装备栏\nBackpack:clearPack(1000,1)\n--在聊天框显示\nChat:sendSystemMsg(\"清空了玩家1000的快捷栏物品\")"
      },
      {
        "name": "clearAllPack",
        "desc": "清空全部背包(包含背包栏、快捷栏、装备栏)",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [],
        "example": "--清空指定玩家的所有物品，包括快捷栏、储存栏和装备栏，参数为玩家迷你号\nBackpack:clearAllPack(1000)\n--在聊天框显示\nChat:sendSystemMsg(\"清空了玩家1000的所有物品，包括快捷栏、储存栏和装备栏\")"
      },
      {
        "name": "moveGridItem",
        "desc": "移动背包道具，默认全部转移",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridsrc",
            "type": "Number",
            "name": ""
          },
          {
            "key": "griddst",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": "默认全部转移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移动玩家背包物品到指定物品栏\n--第一个参数为玩家迷你号\n--第二个参数0为要移动的背包栏id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\n--第三个参数1000为移动至的背包栏id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\n--第四个参数为移动数量\nlocal result=Backpack:moveGridItem(1000,0,1000,10)\nif result==0 then--如果移动成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"把玩家1000的储存栏的第一格物品移动了10个到快捷栏第一格\")\nelse--如果移动失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档，或无法移动\")\nend"
      },
      {
        "name": "swapGridItem",
        "desc": "交换背包道具",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridsrc",
            "type": "Number",
            "name": ""
          },
          {
            "key": "griddst",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--交换玩家两个物品栏的物品\n--第一个参数为玩家迷你号\n--后两个参数为要交换的背包栏id：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\nlocal result=Backpack:moveGridItem(1000,0,1000)\nif result==0 then--如果交换成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"交换了玩家1000的储存栏第一格和快捷栏第一格的物品\")\nelse--如果交换失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档，或无法交换\")\nend"
      },
      {
        "name": "enoughSpaceForItem",
        "desc": "背包(包含背包栏、快捷栏)是否有足够的空间存放一定数量的道具",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": "默认1"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--判断玩家背包(包括快捷栏和储存栏)是否能继续容纳指定数量的物品\n--第一个参数为玩家迷你号\n--第二个参数为要判断的物品id，101为土块\n--第三个参数为物品数量\nlocal result=Backpack:enoughSpaceForItem(1000,101,999)\nif result==0 then--如果可以\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的背包可以继续容纳999个土块\")\nelse--如果不可以或判断失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的背包无法继续容纳999个土块，或玩家1000不在当前存档\")\nend"
      },
      {
        "name": "calcSpaceNumForItem",
        "desc": "计算背包(包含背包栏、快捷栏)能存放的道具剩余总数量",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取指定玩家的背包(包括快捷栏和储存栏)还能添加多少指定物品\n--第一个参数为玩家迷你号\n--第二个参数为要获取剩余容纳数量的物品，101为土块\nlocal result,num=Backpack:calcSpaceNumForItem(1000,101)\nif result==0 then--如果获取成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的背包还能添加\"..num..\"个土块\")\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "getBackpackBarValidList",
        "desc": "获取道具背包栏有效格ID列表(道具已存在)，背包格ID数组",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "bartype",
            "type": "Number",
            "name": "背包类型"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "数量"
          },
          {
            "key": "array",
            "type": "table",
            "name": "背包格ID数组"
          }
        ],
        "example": "--获取指定玩家的背包中已有物品的格子id\n--第一个参数为玩家迷你号\n--第二个参数为背包栏类型：1快捷栏 2储存栏 3装备栏\nlocal result,num,array=Backpack:getBackpackBarValidList(1000,2)\nif result==0 then--如果获取成功\n\t--在聊天框显示已有物品的格子数量\n\tChat:sendSystemMsg(\"玩家1000的储存栏一共有\"..num..\"格已经放置了物品\")\n\tfor i,a in ipairs(array) do\n\t\t--在聊天框显示格子id列表\n\t\tChat:sendSystemMsg(\"第\"..i..\"个有物品的物品格id：\"..a)\n\tend\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "getBackpackBarItemList",
        "desc": "获取道具背包栏已拥有道具，道具ID数组",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "bartype",
            "type": "Number",
            "name": "背包类型"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "数量"
          },
          {
            "key": "arr",
            "type": "table",
            "name": "道具ID数组"
          }
        ],
        "example": "--获取指定玩家背包的物品列表\n--第一个参数为玩家迷你号\n--第二个参数为背包栏类型：1快捷栏 2储存栏 3装备栏\nlocal result,num,arr=Backpack:getBackpackBarItemList(1000,1)\nif result==0 then--如果获取成功\n\t--在聊天框显示种类数\n\tChat:sendSystemMsg(\"玩家1000的快捷栏一共有\"..num..\"种物品\")\n\tfor i,a in ipairs(arr) do\n\t\t--在聊天框显示物品id列表\n\t\tChat:sendSystemMsg(\"第\"..i..\"种物品id：\"..a)\n\tend\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "hasItemByBackpackBar",
        "desc": "检测背包是否持有某个道具",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "bartype",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--判断玩家背包是否包含某物品\n--第一个参数为玩家迷你号\n--第二个参数为背包栏类型：1快捷栏 2储存栏 3装备栏\n--第三个参数为要判断的物品id，1是地心基石\nlocal result=Backpack:hasItemByBackpackBar(1000,1,1)\nif result==0 then--如果有\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的快捷栏里有地心基石\")\nelse--如果没有或获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的快捷栏里没有地心基石或玩家1000不在当前存档\")\nend"
      },
      {
        "name": "getItemNumByBackpackBar",
        "desc": "获取背包持有某个道具总数量，同时返回装有道具的背包格数组",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "bartype",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "道具总数量"
          },
          {
            "key": "arr",
            "type": "table",
            "name": "道具格ID数组"
          }
        ],
        "example": "--获取指定玩家的背包有多少个指定物品\n--第一个参数为玩家迷你号\n--第二个参数为背包栏类型：1快捷栏 2储存栏 3装备栏\n--第三个参数为要获取的物品id，101为土块\nlocal result,num,arr=Backpack:getItemNumByBackpackBar(1000,2,101)\nif result==0 then--如果获取成功\n\t--在聊天框显示物品数量\n\tChat:sendSystemMsg(\"玩家1000的储存栏里有\"..num..\"个土块\")\n\tfor i,a in ipairs(arr) do\n\t\t--在聊天框显示物品格列表\n\t\tChat:sendSystemMsg(\"有土块的第\"..i..\"个物品格id为：\"..a)\n\tend\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "getGridItemID",
        "desc": "获取背包格道具ID(返回itemid, num)",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取指定玩家指定物品格的物品id和数量\n--第一个参数为玩家迷你号\n--第二个参数0为背包栏物品格id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\nlocal result,itemid,num=Backpack:getGridItemID(1000,0)\nif result==0 then--如果获取成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的背包储存栏的第一格物品id为：\"..itemid..\"，数量为：\"..num)\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "getGridItemName",
        "desc": "获取背包格道具名称",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "name",
            "type": "String",
            "name": ""
          }
        ],
        "example": "--获取指定玩家指定物品格的物品名称\n--第一个参数为玩家迷你号\n--第二个参数0为背包栏物品格id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\nlocal result,name=Backpack:getGridItemName(1000,0)\nif result==0 then--如果获取成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的背包储存栏的第一格物品名称为：\"..name)\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"获取失败，可能是玩家1000不在当前存档\")\nend"
      },
      {
        "name": "getGridStack",
        "desc": "获取背包格道具堆叠数(返回curstack, maxstack)",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          },
          {
            "key": "maxstack",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取指定玩家指定背包物品格的物品堆叠数量和最大堆叠数\n--第一个参数为玩家迷你号\n--第二个参数0为背包栏id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\nlocal result,num,maxstack=Backpack:getGridStack(1000,0)\nif result==0 then--如果获取成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的背包储存栏第一格的物品当前堆叠了\"..num..\"个，该物品最大可以堆叠\"..maxstack..\"个\")\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "getGridDurability",
        "desc": "获取背包格道具耐久度(返回durcur, durmax)",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "durcur",
            "type": "Number",
            "name": ""
          },
          {
            "key": "durmax",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取指定玩家指定背包物品格的物品当前耐久值和最大耐久值\n--第一个参数为玩家迷你号\n--第二个参数0为背包栏id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\nlocal result,durcur,durmax=Backpack:getGridDurability(1000,0)\nif result==0 then--如果获取成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的背包储存栏第一格的物品的耐久值为\"..durcur..\"，该物品最大耐久值为\"..durmax)\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "getGridEnchantList",
        "desc": "获取背包格道具附魔，返回附魔id数组",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "数量"
          },
          {
            "key": "arr",
            "type": "table",
            "name": "附魔ID数组"
          }
        ],
        "example": "--获取指定玩家背包中某格物品的附魔数量与id\n--第一个参数为玩家迷你号\n--第二个参数为背包栏id，1000为快捷栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\nlocal result,num,arr=Backpack:getGridEnchantList(1000,1000)\nif result==0 then--如果获取成功\n\t--在聊天框显示附魔数量\n\tChat:sendSystemMsg(\"玩家1000的快捷栏第一格物品附魔数量为\"..num)\n\tfor i,a in ipairs(arr) do\n\t\t--在聊天框显示附魔列表\n\t\tChat:sendSystemMsg(\"第\"..i..\"个附魔id为：\"..a)\n\tend\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "getGridToolType",
        "desc": "获取背包道具工具类型(<0表示非工具)",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "type",
            "type": "Number",
            "name": "工具类型"
          }
        ],
        "example": "--获取指定玩家指定物品格的物品道具类型\n--第一个参数为玩家迷你号\n--第二个参数为背包栏id，1000为快捷栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\n--返回值可能是：-1非道具 1斧 2镐 3铲 4锄 6剑 7弓 14投掷 等\nlocal result,type=Backpack:getGridToolType(1000,1000)\n--在聊天框显示\nChat:sendSystemMsg(\"玩家1000快捷栏第一格物品类型为：(-1非道具 1斧 2镐 3铲 4锄 6剑 7弓 14投掷)\"..type)"
      },
      {
        "name": "addItem",
        "desc": "添加道具到背包",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "successNum",
            "type": "Number",
            "name": "成功添加的数量"
          }
        ],
        "example": "--给指定玩家的背包添加物品\n--第一个参数为玩家迷你号\n--第二个参数为要添加的物品id，101为土块\n--第三个参数为要添加的物品数量\nlocal result,successNum=Backpack:addItem(1000,101,999)\nif result==0 then--如果添加成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"尝试给玩家1000的背包添加999个土块，实际添加了\"..successNum)\nelse--如果添加失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "discardItem",
        "desc": "丢弃背包某个格子里的道具",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除指定玩家的指定背包栏的物品\n--第一个参数为玩家迷你号\n--第二个参数0为背包栏id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\n--第三个参数为移除数量\nBackpack:discardItem(1000,0,10)\n--在聊天框显示\nChat:sendSystemMsg(\"移除了玩家1000的背包栏第一格10个物品\")"
      },
      {
        "name": "getGridNum",
        "desc": "获取背包某个格子的道具数量",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "gridid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--获取指定玩家指定物品格的物品数量\n--第一个参数为玩家迷你号\n--第二个参数0为背包栏物品格id，0为储存栏的第一格：0-29储存栏 1000-1007快捷栏 8000-8004装备栏\nlocal result,num=Backpack:getGridNum(1000,0)\nif result==0 then--如果获取成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000的背包储存栏的第一格物品数量为：\"..num)\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"玩家1000不在当前存档\")\nend"
      },
      {
        "name": "actEquipUpByResID",
        "desc": "玩家穿上装备",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "resid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家\n\tlocal resid=12241--装备id\n\t--给玩家穿上装备(前提是玩家背包里有这件装备)\n\tBackpack:actEquipUpByResID(objid, resid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "actEquipOffByEquipID",
        "desc": "玩家脱下装备栏装备",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "equipid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家\n\tlocal equipid=0--装备栏id，0代表头盔\n\t--给玩家脱下装备(前提是玩家装备栏里有装备)\n\tBackpack:actEquipOffByEquipID(objid, equipid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "actCreateEquip",
        "desc": "创建装备",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "resid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家\n\tlocal resid=12241--装备id，这里是蓝钻头盔\n\t--给玩家创建装备(不消耗玩家物品)\n\tBackpack:actCreateEquip(objid, resid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "actDestructEquip",
        "desc": "销毁装备",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "equipid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal objid=event.eventobjid--玩家\n\tlocal equipid=0--装备栏id，0代表头盔\n\t--销毁玩家装备(不放入背包)\n\tBackpack:actDestructEquip(objid, equipid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "PlayShortCutIxEffect",
        "desc": "设置手持栏道具上播放特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "effectid",
            "type": "Number",
            "name": "特效ID"
          },
          {
            "key": "scale",
            "type": "Number",
            "name": "缩放大小"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Backpack:PlayShortCutIxEffect(objid, effectid,scale)"
      },
      {
        "name": "StopShortCutIxEffect",
        "desc": "停止手持栏道具上播放特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "effectid",
            "type": "Number",
            "name": "特效ID"
          }
        ],
        "ret": [],
        "example": "local result = Backpack:StopShortCutIxEffect(objid, equipid)"
      },
      {
        "name": "PlayShortCutItemEffect",
        "desc": "设置快捷栏指定道具上播放特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "道具ID"
          },
          {
            "key": "effectid",
            "type": "Number",
            "name": "特效ID"
          },
          {
            "key": "scale",
            "type": "Number",
            "name": "缩放大小"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Backpack:PlayShortCutItemEffect(objid,itemid, effectid,scale)"
      },
      {
        "name": "StopShortCutItemEffect",
        "desc": "停止快捷栏指定道具上播放特效",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "道具ID"
          },
          {
            "key": "effectid",
            "type": "Number",
            "name": "特效ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Backpack:StopShortCutItemEffect(objid, itemid,effectid)"
      }
    ]
  },
  {
    "class": "ObjectLib",
    "name": "对象库接口",
    "functions": [
      {
        "name": "getAreaData",
        "desc": "获取区域数据",
        "parm": [
          {
            "key": "uuid",
            "type": "Number",
            "name": "区域ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "区域运行ID"
          }
        ],
        "example": "local result,areaid= ObjectLib:getAreaData(10000001) --场景中拉取的区域\nif result == 0 then--是液体方块\n\tChat:sendSystemMsg(\"获取的区域ID是 \"..areaid)\nend"
      },
      {
        "name": "getPositionData",
        "desc": "获取位置数据",
        "parm": [
          {
            "key": "uuid",
            "type": "Number",
            "name": "位置ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "位置运行ID"
          }
        ],
        "example": "local result,areaid= ObjectLib:getPositionData(20000001) --场景中放置的位置\nif result == 0 then--是液体方块\n\tChat:sendSystemMsg(\"获取的区域ID是 \"..areaid)\nend"
      },
      {
        "name": "getLivingData",
        "desc": "获取生物数据",
        "parm": [
          {
            "key": "uuid",
            "type": "Number",
            "name": "生物ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "生物运行ID"
          }
        ],
        "example": "local result,areaid= ObjectLib:getLivingData(30000001) --场景中放置的生物\nif result == 0 then--是液体方块\n\tChat:sendSystemMsg(\"获取的区域ID是 \"..areaid)\nend"
      },
      {
        "name": "getItemData",
        "desc": "获取道具点数据",
        "parm": [
          {
            "key": "uuid",
            "type": "Number",
            "name": "道具ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "道具运行ID"
          }
        ],
        "example": "local result,areaid= ObjectLib:getItemData(50000001) --场景中放置的道具点\nif result == 0 then--是液体方块\n\tChat:sendSystemMsg(\"获取的区域ID是 \"..areaid)\nend"
      }
    ]
  },
  {
    "class": "VarLib",
    "name": "变量库接口",
    "functions": [
      {
        "name": "setGlobalVarByName",
        "desc": "设置变量库全局变量",
        "parm": [
          {
            "key": "actionattr",
            "type": "Number",
            "name": "，查看参数：VARTYPE"
          },
          {
            "key": "msg",
            "type": "String",
            "name": "，在变量库中创建的参数名称"
          },
          {
            "key": "val",
            "type": "Number",
            "name": "，设置的值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行函数\nlocal function clickblock(event)\n    local actionattr=3--变量类型：数值\n    local msg=\"数值01\"--变量名\n    local val=50--要设置的值\n    --设置数值“数值01”的值为50\n    VarLib2:setGlobalVarByName(actionattr,msg,val)\nend\nScriptSupportEvent:registerEvent('Player.ClickBlock', clickblock)"
      },
      {
        "name": "getGlobalVarByName",
        "desc": "获取变量库全局变量",
        "parm": [
          {
            "key": "actionattr",
            "type": "Number",
            "name": "，查看参数：VARTYPE"
          },
          {
            "key": "msg",
            "type": "String",
            "name": "，在变量库中创建的参数名称"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行函数\nlocal function clickblock(event)\n    local actionattr=3--变量类型：数值\n    local msg=\"数值01\"--变量名\n    --获取数值“数值01”的值，赋值给value\n    local result,value = VarLib2:getGlobalVarByName(actionattr,msg)\n    --在聊天框显示数值\n    Chat:sendSystemMsg(\"数值“数值01”的值为\"..value)\nend\nScriptSupportEvent:registerEvent('Player.ClickBlock', clickblock)"
      },
      {
        "name": "setPlayerVarByName",
        "desc": "设置变量库私有变量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actionattr",
            "type": "Number",
            "name": "，查看参数：VARTYPE"
          },
          {
            "key": "msg",
            "type": "String",
            "name": "，在变量库中创建的参数名称"
          },
          {
            "key": "val",
            "type": "Number",
            "name": "，设置的值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行函数\nlocal function clickblock(event)\n    local objid=event.eventobjid--点击方块的玩家迷你号（私有变量所属对象）\n    local actionattr=3--变量类型：数值\n    local msg=\"数值01\"--变量名\n    local val=50--要设置的值\n    --设置私有数值“数值01”的值为50\n    VarLib2:setPlayerVarByName(objid,actionattr,msg,val)\nend\nScriptSupportEvent:registerEvent('Player.ClickBlock', clickblock)"
      },
      {
        "name": "getPlayerVarByName",
        "desc": "获取变量库私有变量",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "actionattr",
            "type": "Number",
            "name": "，查看参数：VARTYPE"
          },
          {
            "key": "msg",
            "type": "String",
            "name": "，在变量库中创建的参数名称"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "val",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行函数\nlocal function clickblock(event)\n    local objid=event.eventobjid--点击方块的玩家迷你号（私有变量所属对象）\n    local actionattr=3--变量类型：数值\n    local msg=\"数值01\"--变量名\n    --获取私有数值“数值01”的值，赋值给value\n    local result,value = VarLib2:getPlayerVarByName(objid,actionattr,msg)\n    --在聊天框显示私有数值\n    Chat:sendSystemMsg(\"私有数值“数值01”的值为\"..value)\nend\nScriptSupportEvent:registerEvent('Player.ClickBlock', clickblock)"
      }
    ]
  },
  {
    "class": "Mapmark",
    "name": "小地图接口",
    "functions": [
      {
        "name": "newShape",
        "desc": "新增一个形状(线，矩形，圆形)",
        "parm": [
          {
            "key": "type",
            "type": "Number",
            "name": ""
          },
          {
            "key": "isshow",
            "type": "Boolean",
            "name": ""
          },
          {
            "key": "r",
            "type": "Number",
            "name": ""
          },
          {
            "key": "g",
            "type": "Number",
            "name": ""
          },
          {
            "key": "b",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "shapeid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--在地图创建一条黑色的线并显示(貌似没有效果)\n--第一个参数0是形状类型：0线 1矩形 2圆形\n--第二个参数是是否显示：true是 false否\n--后三个参数是形状颜色，分别是R、G、B(红绿蓝)\nlocal result,shapeid=MapMark:newShape(0,true,0,0,0)\n--在聊天框显示\nChat:sendSystemMsg(\"创建了一条黑色的线！\")"
      },
      {
        "name": "deleteShape",
        "desc": "删除一个形状",
        "parm": [
          {
            "key": "shapeid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把id为1的形状删除，参数1就是要删除的形状id\nMapMark:deleteShape(1)\n--在聊天框显示\nChat:sendSystemMsg(\"删除了id为1的形状！\")"
      },
      {
        "name": "setShapeColor",
        "desc": "设置形状颜色",
        "parm": [
          {
            "key": "shapeid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "r",
            "type": "Number",
            "name": ""
          },
          {
            "key": "g",
            "type": "Number",
            "name": ""
          },
          {
            "key": "b",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把id为1的形状设置为黑色\n--第一个参数是形状id\n--后三个参数是要改成的颜色，分别是R、G、B(红绿蓝)\nMapMark:setShapeColor(1,0,0,0)\n--在聊天框显示\nChat:sendSystemMsg(\"id为1的形状被设置成了黑色！\")"
      },
      {
        "name": "showShape",
        "desc": "设置形状显示 or 隐藏",
        "parm": [
          {
            "key": "shapeid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "showflag",
            "type": "Boolean",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把id为1的形状隐藏\n--第一个参数是形状id\n--第二个参数是是否隐藏，true显示 false隐藏\nMapMark:showShape(1,false)\n--在聊天框显示\nChat:sendSystemMsg(\"隐藏了id为1的形状！\")"
      },
      {
        "name": "updateLine",
        "desc": "更新形状(线形)，传入起始坐标和末尾坐标",
        "parm": [
          {
            "key": "shapeid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "sx",
            "type": "Number",
            "name": ""
          },
          {
            "key": "sz",
            "type": "Number",
            "name": ""
          },
          {
            "key": "ex",
            "type": "Number",
            "name": ""
          },
          {
            "key": "ez",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把id为1的形状(只能是直线)设置为从(0,0)到(1,1)\n--第一个参数1是直线形状id\n--第二、三个参数0,0是直线起点坐标\n--后两个参数1,1是直线终点坐标\nMapMark:updateLine(1,0,0,1,1)\n--在聊天框显示\nChat:sendSystemMsg(\"id为1的直线被设置为了从(0,0)到(1,1)\")"
      },
      {
        "name": "updateRectangle",
        "desc": "更新形状(矩形)，传入起始坐标和尺寸",
        "parm": [
          {
            "key": "shapeid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "sx",
            "type": "Number",
            "name": ""
          },
          {
            "key": "sz",
            "type": "Number",
            "name": ""
          },
          {
            "key": "w",
            "type": "Number",
            "name": ""
          },
          {
            "key": "h",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把id为1的形状(只能是矩形)设置为从(0,0)开始宽和高分别为1和1的矩形\n--第一个参数1是矩形形状id\n--第二、三个参数0,0是矩形起点坐标\n--后两个参数1,1是矩形宽高尺寸\nMapMark:updateRectangle(1,0,0,1,1)\n--在聊天框显示\nChat:sendSystemMsg(\"id为1的矩形被设置为了起点在(0,0)，宽高分别是1和1\")"
      },
      {
        "name": "updateCircle",
        "desc": "更新形状(圆形)，传入圆心坐标和半径",
        "parm": [
          {
            "key": "shapeid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "cx",
            "type": "Number",
            "name": ""
          },
          {
            "key": "cz",
            "type": "Number",
            "name": ""
          },
          {
            "key": "r",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--把id为1的形状(只能是圆)设置为圆心为(0,0)，半径为1的圆\n--第一个参数1是圆形形状id\n--第二、三个参数0,0是圆的圆心坐标\n--最后一个参数1是圆的半径\nMapMark:updateCircle(1,0,0,1)\n--在聊天框显示\nChat:sendSystemMsg(\"id为1的圆被设置为了圆心在(0,0)，半径为1\")"
      }
    ]
  },
  {
    "class": "Spawnport",
    "name": "出生点接口",
    "functions": [
      {
        "name": "getSpawnPoint",
        "desc": "获取默认出生点",
        "parm": [],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--获取存档的默认出生点坐标\nlocal result,x,y,z=Spawnport:getSpawnPoint()\n--在聊天框显示\nChat:sendSystemMsg(\"默认出生点坐标为：(\"..x..\",\"..y..\",\"..z..\")\")"
      },
      {
        "name": "setSpawnPoint",
        "desc": "设置出生点位置",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal x,y,z=event.x,event.y,event.z--被点击的坐标\n\t--设置出生点坐标(貌似无效)\n\tSpawnport:setSpawnPoint(x, y, z)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getChunkValidSpawnPos",
        "desc": "获取区块有效刷新点，可作为出生点",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--随机获取区块(0,0,0)的有效刷新点坐标(意义不明)\nlocal result,x,y,z=Spawnport:getChunkValidSpawnPos(0,0,0)\n--在聊天框显示\nChat:sendSystemMsg(\"区块(0,0,0)的随机有效刷新点坐标为：(\"..x..\",\"..y..\",\"..z..\")\")"
      }
    ]
  },
  {
    "class": "MiniTimer",
    "name": "计时器接口",
    "functions": [
      {
        "name": "isExist",
        "desc": "判断计时器是否存在",
        "parm": [
          {
            "key": "id",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "result",
            "type": "bool",
            "name": ""
          }
        ],
        "example": "--判断id为1的计时器是否存在，参数1就是计时器id\nlocal result=MiniTimer:isExist(1)\nif result==0 then--如果存在\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"id为1的计时器存在！\")\n\t--让id为1的计时器开始20秒倒计时\n\tMiniTimer:startBackwardTimer(1,20,false)\n\t--在房主游戏界面显示计时时间\n\tMiniTimer:showTimerTips({0},1,\"id为1的计时器的计时为：\",true)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"开始20秒倒计时！\")\nelse--如果不存在\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"id为1的计时器不存在！\")\n\t--创建一个计时器，命名为“timer”\n\tlocal result2,id=MiniTimer:createTimer(\"timer\",nil,true)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"创建了一个名为“timer”的新计时器并开始20秒倒计时！计时器id为\"..id)\n\t--让新创建的这个计时器开始20秒倒计时\n\tMiniTimer:startBackwardTimer(id,20,false)\n\t--在房主游戏界面显示计时时间\n\tMiniTimer:showTimerTips({0},id,\"id为1的计时器的计时为：\",true)\nend"
      },
      {
        "name": "createTimer",
        "desc": "添加计时器",
        "parm": [
          {
            "key": "name",
            "type": "String",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "计时器索引"
          }
        ],
        "example": "--创建一个新计时器，命名为“timer”\n--第一个参数就是创建的计时器的名字，第二个参数是地图id(作用不明，默认不传)，第三个参数是是否为存档私有计时器(改为false则所有存档可共用此计时器。默认不传)\nlocal result,id=MiniTimer:createTimer(\"timer\",nil,true)\n--在聊天框显示\nChat:sendSystemMsg(\"新建了名为“timer”的计时器，id为\"..id)"
      },
      {
        "name": "deleteTimer",
        "desc": "删除计时器",
        "parm": [
          {
            "key": "id",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--删除id为1的计时器。参数为要删除的计时器的id\nMiniTimer:deleteTimer(1)\n--在聊天框显示\nChat:sendSystemMsg(\"删除了id为1的计时器！\")"
      },
      {
        "name": "startBackwardTimer",
        "desc": "启动倒计时",
        "parm": [
          {
            "key": "id",
            "type": "Number",
            "name": "计时器索引"
          },
          {
            "key": "interval",
            "type": "Number",
            "name": "倒计时间隔时间"
          },
          {
            "key": "repeated",
            "type": "bool",
            "name": "是否重复执行"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--让id为1的计时器开始20秒倒计时\n--第一个参数为计时器id，第二个参数为倒计时时间，第三个参数为是否重复执行(貌似无效)\nMiniTimer:startBackwardTimer(1,20,false)\n--在聊天框显示\nChat:sendSystemMsg(\"启动了id为1的计时器，倒计时20秒！\")\n--在房主游戏界面显示id为1的计时器的计时\nMiniTimer:showTimerTips({0},1,\"id为1的计时器的计时为：\",true)"
      },
      {
        "name": "startForwardTimer",
        "desc": "启动正向计时",
        "parm": [
          {
            "key": "id",
            "type": "Number",
            "name": "计时器索引"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--让id为1的计时器递增计时，参数1就是计时器id\nMiniTimer:startForwardTimer(1)\n--在聊天框显示\nChat:sendSystemMsg(\"id为1的计时器开始正向计时！\")\n--在房主游戏界面显示id为1的计时器的计时\nMiniTimer:showTimerTips({0},1,\"id为1的计时器的计时为：\",true)"
      },
      {
        "name": "pauseTimer",
        "desc": "暂停计时器",
        "parm": [
          {
            "key": "id",
            "type": "Number",
            "name": "计时器索引"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--暂停id为1的计时器的计时，参数1就是计时器的id\nMiniTimer:pauseTimer(1)\n--在聊天框显示\nChat:sendSystemMsg(\"暂停了id为1的计时器！\")"
      },
      {
        "name": "resumeTimer",
        "desc": "恢复计时器",
        "parm": [
          {
            "key": "id",
            "type": "Number",
            "name": "计时器索引"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--恢复id为1的计时器的计时，参数1就是计时器的id\nMiniTimer:resumeTimer(1)\n--在聊天框显示\nChat:sendSystemMsg(\"恢复了id为1的计时器！\")\n--在房主游戏界面显示id为1的计时器的计时\nMiniTimer:showTimerTips({0},1,\"id为1的计时器的计时为：\",true)"
      },
      {
        "name": "stopTimer",
        "desc": "停止计时器",
        "parm": [
          {
            "key": "id",
            "type": "Number",
            "name": "计时器索引"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--停止id为1的计时器的计时，参数1就是计时器的id\nMiniTimer:stopTimer(1)\n--在聊天框显示\nChat:sendSystemMsg(\"停止了id为1的计时器！\")"
      },
      {
        "name": "changeTimerTime",
        "desc": "改变计时器计时",
        "parm": [
          {
            "key": "id",
            "type": "Number",
            "name": "计时器索引"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "计时器计时"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = MiniTimer:changeTimerTime(id, curtime)"
      },
      {
        "name": "getTimerTime",
        "desc": "获取计时器时间",
        "parm": [
          {
            "key": "id",
            "type": "Number",
            "name": "计时器索引"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "second",
            "type": "Number",
            "name": "计时器运行时间"
          }
        ],
        "example": "--在聊天框显示提示\nChat:sendSystemMsg(\"每次做动画表情都会显示id为1的计时器的计时时间！\")\n--当监听到动画表情时，执行此函数\nlocal function showtime()\n\t--获取id为1的计时器的计时时间，参数1就是计时器的id\n\tlocal result,second=MiniTimer:getTimerTime(1)\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"id为1的计时器的计时时间为\"..second)\nend\n--注册动画表情监听器，执行showtime函数\nScriptSupportEvent:registerEvent([=[Player.PlayAction]=],showtime)"
      },
      {
        "name": "showTimerWnd",
        "desc": "\n显示计时器窗口\n(若其他计时器已经显示，则替换显示)\n",
        "parm": [
          {
            "key": "playerids",
            "type": "table",
            "name": "玩家ID数组(nil表示全部玩家)"
          },
          {
            "key": "timerid",
            "type": "Number",
            "name": "计时器ID"
          },
          {
            "key": "title",
            "type": "String",
            "name": "计时器窗口显示的标题"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = MiniTimer:showTimerWnd(playerids, timerid, title)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      },
      {
        "name": "hideTimerWnd",
        "desc": "隐藏计时器窗口",
        "parm": [
          {
            "key": "playerids",
            "type": "table",
            "name": "玩家ID数组(nil表示全部玩家)"
          },
          {
            "key": "timerid",
            "type": "Number",
            "name": "计时器ID"
          },
          {
            "key": "title",
            "type": "String",
            "name": "计时器窗口显示的标题"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = MiniTimer:hideTimerWnd(playerids, timerid)\nif code == ErrorCode.OK then\n\tprint('执行成功'  )\nelse\n\tprint('执行失败')\nend"
      }
    ]
  },
  {
    "class": "Graphics",
    "name": "文字板接口",
    "functions": [
      {
        "name": "makeGraphicsText",
        "desc": "创建文字板信息",
        "parm": [
          {
            "key": "title",
            "type": "String",
            "name": "显示的文字标题"
          },
          {
            "key": "font",
            "type": "Number",
            "name": "字体大小"
          },
          {
            "key": "apha",
            "type": "Number",
            "name": "文字板背景透明度"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "文字板的编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal title=\"这是一个文字板\"--文字内容\n\tlocal font=15--字体大小\n\tlocal alpha=100--背景透明度(0:完全透明 100:不透明)\n\tlocal itype=1--文字板编号\n\t--创建一个文字板信息，存到graphicsInfo中\n\tlocal graphicsInfo=Graphics:makeGraphicsText(title, font, alpha, itype)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "makeflotageText",
        "desc": "创建漂浮文字信息",
        "parm": [
          {
            "key": "title",
            "type": "String",
            "name": "显示的文字标题"
          },
          {
            "key": "font",
            "type": "Number",
            "name": "字体大小"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "漂浮文字的编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal title=\"这是一个漂浮文字\"--文字内容\n\tlocal font=15--字体大小\n\tlocal itype=1--漂浮文字编号\n\t--创建一个漂浮文字信息存到graphicsInfo中\n\tlocal graphicsInfo=Graphics:makeflotageText(title, font, itype)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "makeGraphicsProgress",
        "desc": "创建进度条信息",
        "parm": [
          {
            "key": "v1",
            "type": "Number",
            "name": "进度条的当前值"
          },
          {
            "key": "v2",
            "type": "Number",
            "name": "进度条的最大值"
          },
          {
            "key": "color",
            "type": "Number",
            "name": "进度条的颜色"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "进度条的编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal v1=50--进度条当前值\n\tlocal v2=100--进度条最大值\n\tlocal color=0xff0000--进度条的颜色\n\tlocal itype=1--进度条编号\n\t--创建一个进度条信息，存到graphicsInfo中\n\tlocal graphicsInfo=Graphics:makeGraphicsProgress(v1, v2, color, itype)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "makeGraphicsArrowToPos",
        "desc": "生成指向位置的箭头数据",
        "parm": [
          {
            "key": "pos",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "size",
            "type": "Number",
            "name": "大小"
          },
          {
            "key": "color",
            "type": "Number",
            "name": "颜色"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event.y,event.z--指向坐标\n\tlocal size=0.5--箭头大小\n\tlocal color=0xff0000--箭头颜色\n\tlocal id=1--箭头数据编号\n\t--创建一个指向位置的箭头数据\n\tlocal info=Graphics:makeGraphicsArrowToPos(x, y, z, size, color, id)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "makeGraphicsLineToPos",
        "desc": "生成指向位置的线数据",
        "parm": [
          {
            "key": "pos",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "size",
            "type": "Number",
            "name": "大小"
          },
          {
            "key": "color",
            "type": "Number",
            "name": "颜色"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event.y,event.z--指向坐标\n\tlocal size=0.5--线的尺寸\n\tlocal color=0xff0000--线的颜色\n\tlocal id=1--线数据编号\n\t--创建一个指向位置的线数据\n\tlocal info=Graphics:makeGraphicsLineToPos(x, y, z, size, color, id)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "makeGraphicsSurfaceToPos",
        "desc": "生成指向位置的面数据",
        "parm": [
          {
            "key": "pos",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "size",
            "type": "Number",
            "name": "大小"
          },
          {
            "key": "color",
            "type": "Number",
            "name": "颜色"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event.y,event.z--指向坐标\n\tlocal size=0.5--面的尺寸\n\tlocal color=0xff0000--面的颜色\n\tlocal id=1--面数据编号\n\t--创建一个指向位置的面数据\n\tlocal info=Graphics:makeGraphicsSurfaceToPos(x, y, z, size, color, id)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "makeGraphicsArrowToActor",
        "desc": "生成指向对象的箭头数据",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物id"
          },
          {
            "key": "size",
            "type": "Number",
            "name": "大小"
          },
          {
            "key": "color",
            "type": "Number",
            "name": "颜色"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--指向对象\n\tlocal size=0.5--箭头大小\n\tlocal color=0xff0000--箭头颜色\n\tlocal id=1--箭头数据编号\n\t--创建一个指向对象的箭头数据\n\tlocal info=Graphics:makeGraphicsArrowToActor(objid, size, color, id)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "makeGraphicsLineToActor",
        "desc": "生成指向对象的线数据",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物id"
          },
          {
            "key": "size",
            "type": "Number",
            "name": "大小"
          },
          {
            "key": "color",
            "type": "Number",
            "name": "颜色"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--指向对象\n\tlocal size=0.5--线的尺寸\n\tlocal color=0xff0000--线的颜色\n\tlocal id=1--线数据编号\n\t--创建一个指向对象的线数据\n\tlocal info=Graphics:makeGraphicsLineToActor(objid, size, color, id)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "makeGraphicsSurfaceToActor",
        "desc": "生成指向对象的面数据",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物id"
          },
          {
            "key": "size",
            "type": "Number",
            "name": "大小"
          },
          {
            "key": "color",
            "type": "Number",
            "name": "颜色"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--指向对象\n\tlocal size=0.5--面的尺寸\n\tlocal color=0xff0000--面的颜色\n\tlocal id=1--面数据编号\n\t--创建一个指向对象的面数据\n\tlocal info=Graphics:makeGraphicsSurfaceToActor(objid, size, color, id)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "createGraphicsTxtByPos",
        "desc": "在位置上创建文字板",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "graphicInfo",
            "type": "table",
            "name": "图文设置的属性信息"
          },
          {
            "key": "x2",
            "type": "Number",
            "name": "2d平面上x轴的偏移量"
          },
          {
            "key": "y2",
            "type": "Number",
            "name": "2d平面上y轴的偏移量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "graphid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal title=\"这是一个文字板\"--文字内容\n\tlocal font=15--字体大小\n\tlocal alpha=100--背景透明度(0:完全透明 100:不透明)\n\tlocal itype=1--文字板编号\n\t--创建一个文字板信息，存到graphicsInfo中\n\tlocal graphicsInfo=Graphics:makeGraphicsText(title, font, alpha, itype)\n\tlocal x,y,z=event.x,event.y+1,event.z--显示信息的坐标\n\tlocal x2,y2=0,0--偏移量\n\tlocal result,graphid=Graphics:createGraphicsTxtByPos(x, y, z, graphicsInfo, x2, y2)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createGraphicsTxtByActor",
        "desc": "在生物身上创建文字板",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物objid"
          },
          {
            "key": "graphicInfo",
            "type": "table",
            "name": "图文设置的属性信息"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "图文信息在生物身上的朝向"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "在方向上的偏移"
          },
          {
            "key": "x2",
            "type": "Number",
            "name": "2d平面上x轴的偏移量"
          },
          {
            "key": "y2",
            "type": "Number",
            "name": "2d平面上y轴的偏移量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "graphid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal title=\"这是一个文字板\"--文字内容\n\tlocal font=15--字体大小\n\tlocal alpha=100--背景透明度(0:完全透明 100:不透明)\n\tlocal itype=1--文字板编号\n\t--创建一个文字板信息，存到graphicsInfo中\n\tlocal graphicsInfo=Graphics:makeGraphicsText(title, font, alpha, itype)\n\tlocal objid=event.toobjid--显示信息的实体id\n\tlocal dir={x=0,y=10,z=0}--偏移方向\n\tlocal offset=10--方向上的偏移距离\n\tlocal x2,y2=0,0--水平偏移距离\n\t--在实体上显示文字板\n\tlocal result,graphid=Graphics:createGraphicsTxtByActor(objid, graphicsInfo, dir, offset, x2, y2)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "createflotageTextByPos",
        "desc": "在位置上创建漂浮文字",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "graphicInfo",
            "type": "table",
            "name": "图文设置的属性信息"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "graphid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal title=\"这是一个漂浮文字\"--文字内容\n\tlocal font=15--字体大小\n\tlocal itype=1--漂浮文字编号\n\t--创建一个漂浮文字信息存到graphicsInfo中\n\tlocal graphicsInfo=Graphics:makeflotageText(title, font, itype)\n\tlocal x,y,z=event.x,event.y+1,event.z--显示漂浮文字的坐标\n\tlocal x2,y2=0,0--水平偏移距离\n\t--在位置上显示漂浮文字\n\tlocal result,graphid=Graphics:createflotageTextByPos(x, y, z, graphicsInfo, x2, y2)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createflotageTextByActor",
        "desc": "在生物身上创建漂浮文字",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物objid"
          },
          {
            "key": "graphicInfo",
            "type": "table",
            "name": "图文设置的属性信息"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "图文信息在生物身上的朝向"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "在方向上的偏移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "graphid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal title=\"这是一个漂浮文字\"--文字内容\n\tlocal font=15--字体大小\n\tlocal itype=1--漂浮文字编号\n\t--创建一个漂浮文字信息存到graphicsInfo中\n\tlocal graphicsInfo=Graphics:makeflotageText(title, font, itype)\n\tlocal objid=event.toobjid--显示文字的生物实体id\n\tlocal dir={x=0,y=0,z=0}--偏移方向\n\tlocal offset=0--方向上的偏移距离\n\tlocal x2,y2=0,0--水平偏移距离\n\t--在生物身上显示漂浮文字\n\tlocal result,graphid = Graphics:createflotageTextByActor(objid, graphicsInfo, dir, offset, x2, y2)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "createGraphicsProgressByPos",
        "desc": "在位置上创建进度条",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "graphicInfo",
            "type": "table",
            "name": "进度条设置的属性信息"
          },
          {
            "key": "x2",
            "type": "Number",
            "name": "2d平面上x轴的偏移量"
          },
          {
            "key": "y2",
            "type": "Number",
            "name": "2d平面上y轴的偏移量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "graphid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal v1=50--进度条当前值\n\tlocal v2=100--进度条最大值\n\tlocal color=0xff0000--进度条的颜色\n\tlocal itype=1--进度条编号\n\t--创建一个进度条信息，存到graphicsInfo中\n\tlocal graphicsInfo=Graphics:makeGraphicsProgress(v1, v2, color, itype)\n\tlocal x,y,z=event.x,event.y+1,event.z--显示进度条的坐标\n\tlocal x2,y2=0,0--水平偏移距离\n\t--在位置上显示进度条\n\tlocal result,graphid = Graphics:createGraphicsProgressByPos(x, y, z, graphicsInfo, x2, y2)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createGraphicsProgressByActor",
        "desc": "在生物身上创建进度条",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物objid"
          },
          {
            "key": "graphicInfo",
            "type": "table",
            "name": "进度条设置的属性信息"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "图文信息在生物身上的朝向"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "在方向上的偏移"
          },
          {
            "key": "x2",
            "type": "Number",
            "name": "2d平面上x轴的偏移量"
          },
          {
            "key": "y2",
            "type": "Number",
            "name": "2d平面上y轴的偏移量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "graphid",
            "type": "Number",
            "name": ""
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal v1=50--进度条当前值\n\tlocal v2=100--进度条最大值\n\tlocal color=0xff0000--进度条的颜色\n\tlocal itype=1--进度条编号\n\t--创建一个进度条信息，存到graphicsInfo中\n\tlocal graphicsInfo=Graphics:makeGraphicsProgress(v1, v2, color, itype)\n\tlocal objid=event.toobjid--显示进度条的实体id\n\tlocal dir={x=0,y=10,z=0}--偏移方向\n\tlocal offset=10--方向上偏移距离\n\tlocal x2,y2=0,0--水平偏移距离\n\t--在生物上显示进度条\n\tlocal result,graphid = Graphics:createGraphicsProgressByActor(objid, graphicsInfo, dir, offset, x2, y2)\n\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "removeGraphicsByPos",
        "desc": "删除位置上的图文信息",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "位置"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "图文信息组类型"
          },
          {
            "key": "graphType",
            "type": "Number",
            "name": "图文类型枚举值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event,y+1,event.z--要移除图文信息的坐标\n\tlocal itype=1--要移除图文信息的编号\n\tlocal graphType=1--要移除图文信息的类型(1表示文字板，其他见常量列表)\n\t--移除被点击方块上面一格编号为1的文字板\n\tGraphics:removeGraphicsByPos(x, y, z, itype, graphType)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "removeGraphicsByObjID",
        "desc": "删除生物的图文信息",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物objid"
          },
          {
            "key": "itype",
            "type": "Number",
            "name": "图文信息组类型"
          },
          {
            "key": "graphType",
            "type": "Number",
            "name": "图文类型枚举值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--要移除图文信息的实体\n\tlocal itype=1--要移除图文信息的编号\n\tlocal graphType=1--要移除图文信息的类型(1表示文字板，其他见常量列表)\n\t--移除被点击生物身上编号为1的文字板\n\tGraphics:removeGraphicsByObjID(objid, itype, graphType)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "updateGraphicsTextById",
        "desc": "更新图文信息的文字内容",
        "parm": [
          {
            "key": "graphid",
            "type": "Number",
            "name": "已创建的图文信息ID"
          },
          {
            "key": "title",
            "type": "String",
            "name": "文字内容"
          },
          {
            "key": "fontsize",
            "type": "Number",
            "name": "字体大小(可不填值)"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal graphid=1--此处要改为create文字板返回的graphid值，表示文字板的id\n\tlocal title=\"更新了文字板\"--更新之后显示的内容\n\tlocal fontsize=20--文字大小\n\tlocal alpha=100--背景透明度\n\t--更新id为graphid的文字板的内容\n\tGraphics:updateGraphicsTextById(graphid, title, fontsize, alpha)\n\t--刷新信息至客机(避免房主以外的玩家看不到更新内容)\n\tGraphics:snycGraphicsInfo2Client()\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "updateGraphicsProgressById",
        "desc": "更新进度条的进度",
        "parm": [
          {
            "key": "graphid",
            "type": "Number",
            "name": "已创建的图文信息ID"
          },
          {
            "key": "curval",
            "type": "Number",
            "name": "进度条的当前值"
          },
          {
            "key": "maxval",
            "type": "Number",
            "name": "进度条的最大值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal graphid=1--此处要改为create进度条返回的graphid值，表示进度条的id\n\tlocal val1,val2=80,100--更新后显示的进度条当前值和最大值\n\t--更新id为graphid的进度条的内容\n\tGraphics:updateGraphicsProgressById(graphid, val1, val2)\n\t--刷新信息至客机(避免房主以外的玩家看不到更新内容)\n\tGraphics:snycGraphicsInfo2Client()\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createGraphicsArrowByActorToPos",
        "desc": "创建生物指向位置的箭头",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物id"
          },
          {
            "key": "info",
            "type": "table",
            "name": "箭头信息"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "朝向"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "偏移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event.y,event.z--指向坐标\n\tlocal size=0.5--箭头大小\n\tlocal color=0xff0000--箭头颜色\n\tlocal id=1--箭头数据编号\n\t--创建一个指向位置的箭头数据\n\tlocal info=Graphics:makeGraphicsArrowToPos(x, y, z, size, color, id)\n\n\tlocal objid=event.eventobjid--在玩家身上创建\n\tlocal dir={x=0,y=10,z=0}--偏移方向\n\tlocal offset=10--偏移距离\n\t--在生物身上创建指向坐标的箭头\n\tGraphics:createGraphicsArrowByActorToPos(objid, info, dir, offset)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createGraphicsArrowByActorToActor",
        "desc": "创建生物指向生物的箭头",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物id"
          },
          {
            "key": "info",
            "type": "table",
            "name": "箭头信息"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "朝向"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "偏移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--指向对象\n\tlocal size=0.5--箭头大小\n\tlocal color=0xff0000--箭头颜色\n\tlocal id=1--箭头数据编号\n\t--创建一个指向对象的箭头数据\n\tlocal info=Graphics:makeGraphicsArrowToActor(objid, size, color, id)\n\n\tlocal objid2=event.eventobjid--在玩家身上创建\n\tlocal dir={x=0,y=10,z=0}--偏移方向\n\tlocal offset=10--偏移距离\n\t--在玩家身上创建指向生物的箭头\n\tGraphics:createGraphicsArrowByActorToActor(objid2, info, dir, offset)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "createGraphicsArrowByPosToPos",
        "desc": "创建位置指向位置的箭头",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "位置"
          },
          {
            "key": "info",
            "type": "table",
            "name": "箭头信息"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event.y,event.z--指向坐标\n\tlocal size=0.5--箭头大小\n\tlocal color=0xff0000--箭头颜色\n\tlocal id=1--箭头数据编号\n\t--创建一个指向位置的箭头数据\n\tlocal info=Graphics:makeGraphicsArrowToPos(x, y, z, size, color, id)\n\n\tlocal result,x2,y2,z2=Actor:getPosition(event.eventobjid)--获取玩家所在位置\n\t--在玩家位置创建指向坐标的箭头\n\tGraphics:createGraphicsArrowByPosToPos(x2, y2, z2, info)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createGraphicsArrowByPosToActor",
        "desc": "创建位置指向生物的箭头",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "位置"
          },
          {
            "key": "info",
            "type": "table",
            "name": "箭头信息"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--指向对象\n\tlocal size=0.5--箭头大小\n\tlocal color=0xff0000--箭头颜色\n\tlocal id=1--箭头数据编号\n\t--创建一个指向对象的箭头数据\n\tlocal info=Graphics:makeGraphicsArrowToActor(objid, size, color, id)\n\n\tlocal result,x,y,z=Actor:getPosition(event.eventobjid)--获取玩家坐标\n\t--在玩家位置创建指向生物的箭头\n\tGraphics:createGraphicsArrowByPosToActor(x, y, z, info)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "createGraphicsLineByActorToPos",
        "desc": "创建生物与位置的线",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物id"
          },
          {
            "key": "info",
            "type": "table",
            "name": "线信息"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "朝向"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "偏移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event.y,event.z--指向坐标\n\tlocal size=0.5--线的尺寸\n\tlocal color=0xff0000--线的颜色\n\tlocal id=1--线数据编号\n\t--创建一个指向位置的线数据\n\tlocal info=Graphics:makeGraphicsLineToPos(x, y, z, size, color, id)\n\n\tlocal objid=event.eventobjid--在玩家身上创建\n\tlocal dir={x=0,y=0,z=0}--偏移方向\n\tlocal offset=0--偏移距离\n\t--在生物身上创建指向坐标的箭头\n\tGraphics:createGraphicsLineByActorToPos(objid, info, dir, offset)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createGraphicsLineByActorToActor",
        "desc": "创建指向生物的线",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物id"
          },
          {
            "key": "info",
            "type": "table",
            "name": "线信息"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "朝向"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "偏移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--指向对象\n\tlocal size=0.5--线的尺寸\n\tlocal color=0xff0000--线的颜色\n\tlocal id=1--线数据编号\n\t--创建一个指向对象的线数据\n\tlocal info=Graphics:makeGraphicsLineToActor(objid, size, color, id)\n\n\tlocal objid2=event.eventobjid--在玩家身上创建\n\tlocal dir={x=0,y=0,z=0}--偏移方向\n\tlocal offset=0--偏移距离\n\t--在玩家身上创建指向生物的线\n\tGraphics:createGraphicsLineByActorToActor(objid2, info, dir, offset)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "createGraphicsLineByPosToPos",
        "desc": "创建位置指向位置的线",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "位置"
          },
          {
            "key": "info",
            "type": "table",
            "name": "线信息"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event.y,event.z--指向坐标\n\tlocal size=0.5--线的尺寸\n\tlocal color=0xff0000--线的颜色\n\tlocal id=1--线数据编号\n\t--创建一个指向位置的线数据\n\tlocal info=Graphics:makeGraphicsLineToPos(x, y, z, size, color, id)\n\n\tlocal result,x2,y2,z2=Actor:getPosition(event.eventobjid)--获取玩家坐标\n\t--在玩家位置上生成指向坐标的线\n\tGraphics:createGraphicsLineByPosToPos(x2, y2, z2, info)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createGraphicsLineByPosToActor",
        "desc": "创建位置指向生物的线",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "位置"
          },
          {
            "key": "info",
            "type": "table",
            "name": "线信息"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--指向对象\n\tlocal size=0.5--线的尺寸\n\tlocal color=0xff0000--线的颜色\n\tlocal id=1--线数据编号\n\t--创建一个指向对象的线数据\n\tlocal info=Graphics:makeGraphicsLineToActor(objid, size, color, id)\n\n\tlocal result,x,y,z=Actor:getPosition(event.eventobjid)--获取玩家坐标\n\t--在玩家坐标上创建指向生物的线\n\tGraphics:createGraphicsLineByPosToActor(x, y, z, info)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "createGraphicsSurfaceByActorToPos",
        "desc": "创建指向位置的面",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物id"
          },
          {
            "key": "info",
            "type": "table",
            "name": "面信息"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "朝向"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "偏移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event.y,event.z--指向坐标\n\tlocal size=0.5--面的尺寸\n\tlocal color=0xff0000--面的颜色\n\tlocal id=1--面数据编号\n\t--创建一个指向位置的面数据\n\tlocal info=Graphics:makeGraphicsSurfaceToPos(x, y, z, size, color, id)\n\n\tlocal objid=event.eventobjid--在玩家身上创建\n\tlocal dir={x=0,y=0,z=0}--偏移方向\n\tlocal offset=0--偏移距离\n\t--在生物身上创建指向坐标的箭头\n\tGraphics:createGraphicsSurfaceByActorToPos(objid, info, dir, offset)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createGraphicsSurfaceByActorToActor",
        "desc": "创建指向生物的面",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物id"
          },
          {
            "key": "info",
            "type": "table",
            "name": "面信息"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "朝向"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "偏移"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--指向对象\n\tlocal size=0.5--面的尺寸\n\tlocal color=0xff0000--面的颜色\n\tlocal id=1--面数据编号\n\t--创建一个指向对象的面数据\n\tlocal info=Graphics:makeGraphicsSurfaceToActor(objid, size, color, id)\n\n\tlocal objid2=event.eventobjid--在玩家身上创建\n\tlocal dir={x=0,y=0,z=0}--偏移方向\n\tlocal offset=0--偏移距离\n\t--在玩家身上创建指向生物的面\n\tGraphics:createGraphicsSurfaceByActorToActor(objid2, info, dir, offset)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "createGraphicsSurfaceByPosToPos",
        "desc": "创建位置指向位置的面",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "位置"
          },
          {
            "key": "info",
            "type": "table",
            "name": "面信息"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal x,y,z=event.x,event.y,event.z--指向坐标\n\tlocal size=0.5--面的尺寸\n\tlocal color=0xff0000--面的颜色\n\tlocal id=1--面数据编号\n\t--创建一个指向位置的面数据\n\tlocal info=Graphics:makeGraphicsSurfaceToPos(x, y, z, size, color, id)\n\n\tlocal result,x2,y2,z2=Actor:getPosition(event.eventobjid)--获取玩家坐标\n\t--在玩家位置上生成指向坐标的面\n\tGraphics:createGraphicsSurfaceByPosToPos(x2, y2, z2, info)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "createGraphicsSurfaceByPosToActor",
        "desc": "创建位置指向生物的面",
        "parm": [
          {
            "key": "pos",
            "type": "table",
            "name": "位置"
          },
          {
            "key": "info",
            "type": "table",
            "name": "面信息"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击生物时，执行此函数\nlocal function clickactor(event)\n\tlocal objid=event.toobjid--指向对象\n\tlocal size=0.5--面的尺寸\n\tlocal color=0xff0000--面的颜色\n\tlocal id=1--面数据编号\n\t--创建一个指向对象的面数据\n\tlocal info=Graphics:makeGraphicsSurfaceToActor(objid, size, color, id)\n\n\tlocal result,x,y,z=Actor:getPosition(event.eventobjid)--获取玩家坐标\n\t--在玩家坐标上创建指向生物的面\n\tGraphics:createGraphicsSurfaceByPosToActor(x, y, z, info)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickActor]=], clickactor)"
      },
      {
        "name": "snycGraphicsInfo2Client",
        "desc": "刷新信息至客机,在更新图文信息接口之后调用",
        "parm": [],
        "ret": [],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n\tlocal graphid=1--此处要改为create图文信息返回的graphid值，表示图文信息的id\n\t--更新id为graphid的文字板的内容\n\tGraphics:updateGraphicsTextById(graphid, \"更新了文字板\", 20, 100)\n\t--刷新信息至客机(避免房主以外的玩家看不到更新内容)\n\tGraphics:snycGraphicsInfo2Client()\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "makeGraphicsImage",
        "desc": "创建图片信息",
        "parm": [
          {
            "key": "imgid",
            "type": "Number",
            "name": "图片ID"
          },
          {
            "key": "scale",
            "type": "Number",
            "name": "图片大小缩放"
          },
          {
            "key": "apha",
            "type": "Number",
            "name": "图片透明度"
          },
          {
            "key": "id",
            "type": "Number",
            "name": "图片的编号"
          }
        ],
        "ret": [
          {
            "key": "array",
            "type": "table",
            "name": ""
          }
        ],
        "example": "local result = Graphics:makeGraphicsImage(v1, v2, color, itype)"
      },
      {
        "name": "createGraphicsImageByActor",
        "desc": "在生物身上创建图片",
        "parm": [
          {
            "key": "objid",
            "type": "table",
            "name": "生物或玩家ID"
          },
          {
            "key": "info",
            "type": "table",
            "name": "图片信息(makeGraphicsImage生成)"
          },
          {
            "key": "dir",
            "type": "table",
            "name": "图文信息在生物身上的朝向"
          },
          {
            "key": "offest",
            "type": "Number",
            "name": "在方向上的偏移"
          },
          {
            "key": "x2",
            "type": "Number",
            "name": "2d平面上x轴的偏移量"
          },
          {
            "key": "y2",
            "type": "Number",
            "name": "2d平面上y轴的偏移量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Graphics:createGraphicsImageByActor(objid,info,dir,offest,x2,y2)"
      },
      {
        "name": "createGraphicsImageByPos",
        "desc": "在位置上创建图片",
        "parm": [
          {
            "key": "x",
            "type": "table",
            "name": "位置坐标信息"
          },
          {
            "key": "y",
            "type": "table",
            "name": "位置坐标信息"
          },
          {
            "key": "z",
            "type": "table",
            "name": "位置坐标信息"
          },
          {
            "key": "info",
            "type": "table",
            "name": "图片信息(makeGraphicsImage生成)"
          },
          {
            "key": "x2",
            "type": "Number",
            "name": "2d平面上x轴的偏移量"
          },
          {
            "key": "y2",
            "type": "Number",
            "name": "2d平面上y轴的偏移量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = Graphics:createGraphicsImageByPos(x,y,z, info,x2,y2)"
      }
    ]
  },
  {
    "class": "ListenParam",
    "name": "函数监听接口",
    "functions": [
      {
        "name": "AddGraphicsListenParam",
        "desc": "添加图文信息 监听触发器参数 刷新的对象id 参数信息 回调方法",
        "parm": [
          {
            "key": "graphid",
            "type": "Number",
            "name": "已创建的图文信息ID"
          },
          {
            "key": "funcs",
            "type": "table",
            "name": "监听函数列表"
          },
          {
            "key": "param",
            "type": "table",
            "name": "监听函数需要的参数"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "-- 创建进度条基本信息\nlocal function func_3()\n    local v1 = math.random(1,100) -- 进度条的当前值\n    local v2 = 100  -- 进度条的最大值\n    local v3 = 0xFFC107  --颜色代码\n    local v4 = 1  -- 编号\n    return Graphics:makeGraphicsProgress(v1, v2, v3, v4)\nend\nlocal function getdir(playerid)\n    return {x =0 ,y =1,z = 0}\nend\n-- 触发器时间回调函数\nlocal function func_event(param)\n    local playerid = CurEventParam.TriggerByPlayer\n    if playerid then\n        local offest = 100 -- 方向上的偏移距离\n        local dir = getdir(playerid) -- 获取方向\n        local graphinfo = func_3() -- 获取图文信息\n        -- 创建一个进度条信息\n        local result, grapid = Graphics:createGraphicsProgressByActor(playerid,graphinfo,dir,offest)\n        if result == ErrorCode.OK then\n            -- 获取进度条的当前值\n\t\t\tlocal function getCurValue(params)\n\t\t\t\tlocal cur = Player:getAttr(params.TriggerByPlayer,PLAYERATTR.CUR_HP) -- 获取当前血量\n\t\t\t\treturn cur + math.random(1,20)\n\t\t\tend\n\t\t\t-- 获取进度条的最大值\n\t\t\tlocal function getMaxValue(params)\n\t\t\t\tlocal max = Player:getAttr(params.TriggerByPlayer,PLAYERATTR.MAX_HP) -- 获取最大血量\n\t\t\t\treturn max + math.random(50,100)\n\t\t\tend\n\t\t\t--监听的函数列表\n\t\t\tlocal funcs = {getCurValue,getMaxValue}\n\t\t\t-- 将创建成功的进度条添加进自动监听\n            ListenParam:AddGraphicsListenParam(grapid,funcs,param)\n        end\n    end\nend\nScriptSupportEvent:registerEvent('Player.PlayAction', func_event)"
      }
    ]
  },
  {
    "class": "ValueGroup",
    "name": "变量组接口",
    "functions": [
      {
        "name": "getAllGroupItem",
        "desc": "获取组中所有值",
        "parm": [
          {
            "key": "libname",
            "type": "String",
            "name": "组名"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "ret",
            "type": "table",
            "name": "所有元素"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--获取类型为vartype的变量组中所有变量的值\n\tlocal result,ret=Valuegroup:getAllGroupItem(vartype, libname, playerid)\n\tprint(ret)--在日志输出\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "insertInGroupByName",
        "desc": "添加任意值到任意组",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          },
          {
            "key": "value需",
            "type": "",
            "name": ""
          },
          {
            "key": "playerid",
            "type": "",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal value=10--值\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--添加value到vartype类型的变量组的最后一位\n\tValuegroup:insertInGroupByName(vartype, libname, value, playerid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "removeValueIndexByName",
        "desc": "从任意组移除指定编号的值",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          },
          {
            "key": "indx",
            "type": "Number",
            "name": "组中的编号索引"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal index=1--序号\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--删除类型为vartype的变量组中序号为index的值，删除后值为nil\n\tValuegroup:removeValueIndexByName(vartype, libname, index, playerid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "removeValueByName",
        "desc": "从任意组移除任意值",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal value=10--值\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--删除类型为vartype的变量组中值为value的值，删除后值为nil\n\tValuegroup:removeValueByName(vartype, libname, value, playerid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "clearGroupByName",
        "desc": "清空任意组",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--清空类型为vartype名为libname的变量组\n\tValuegroup:clearGroupByName(vartype, libname, playerid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getGrouplengthByName",
        "desc": "获取数组长度",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "number",
            "type": "Number",
            "name": "数组长度"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--获取变量组长度\n\tlocal result,length=Valuegroup:getGrouplengthByName(vartype, libname, playerid)\n\tprint(length)--在日志输出\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getValueNoByName",
        "desc": "获取组中索引值",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          },
          {
            "key": "indx",
            "type": "Number",
            "name": "组中的编号索引"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "libvarid",
            "type": "Number",
            "name": "编号的值"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal index=1--序号\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--获取变量组指定序号的值\n\tlocal result,value=Valuegroup:getValueNoByName(vartype, libname, index, playerid)\n\tprint(value)--在日志输出\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "setValueNoByName",
        "desc": "设置组中索引值",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          },
          {
            "key": "indx",
            "type": "Number",
            "name": "组中的编号索引"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal index=1--序号\n\tlocal value=10--要设置的值\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--设置变量组指定序号的值为value\n\tValuegroup:setValueNoByName(vartype, libname, index, value, playerid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "getRandomValueByName",
        "desc": "获得数组里面的随机值",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--随机获取变量组中的一个值\n\tlocal result,value=Valuegroup:getRandomValueByName(vartype, libname, playerid)\n\tprint(value)--在日志输出\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "insertValueByName",
        "desc": "在任意组插入任意值",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal no=1--要插入的位置\n\tlocal val=10--要插入的值\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--在变量组中no的位置插入值val\n\tValuegroup:insertValueByName(vartype, libname, no, val, playerid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "deleteNoByName",
        "desc": "从任意组删除指定编号的值",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal no=1--要清空的编号位置\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--清空变量组中编号为no的值\n\tValuegroup:deleteNoByName(vartype, libname, no, playerid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "name": "deleteValueByName",
        "desc": "从任意组删除指定编号的值",
        "parm": [
          {
            "key": "libvarid",
            "type": "String",
            "name": "组名"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local function ClickBlock(event)\n\tlocal vartype=17--变量组类型，17是数值组\n\tlocal libname=\"数值组01\"--组名\n\tlocal val=10--要清空的值\n\tlocal playerid=0--私有变量组所属玩家id，0代表全局变量组\n\t--清空变量组中值为val的值\n\tValuegroup:deleteValueByName(vartype, libname, val, playerid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], ClickBlock)--点击方块"
      },
      {
        "id": "clearnovaluebyname",
        "name": "clearNoValueByName",
        "desc": "从任意组删除指定编号的值"
      },
      {
        "id": "addgroupbyname",
        "name": "addGroupByName",
        "desc": "在任意组中添加一组值"
      },
      {
        "id": "removegroupbyname",
        "name": "removeGroupByName",
        "desc": "在任意组中将一组值设为空值"
      },
      {
        "id": "deletegroupbyname",
        "name": "deleteGroupByName",
        "desc": "在任意组中删除一组值"
      },
      {
        "id": "insertgroupbyname",
        "name": "insertGroupByName",
        "desc": "在任意组插入一组值"
      },
      {
        "id": "replacevaluebyname",
        "name": "replaceValueByName",
        "desc": "替换任意组中的任意值"
      },
      {
        "id": "sortgroupbyname",
        "name": "sortGroupByName",
        "desc": "对任意组的值排序"
      },
      {
        "id": "hasvaluebyname",
        "name": "hasValueByName",
        "desc": "任意组是否有任意值"
      },
      {
        "id": "hasnobyname",
        "name": "hasNoByName",
        "desc": "任意组位置上是否有值"
      },
      {
        "id": "getvaluecountbyname",
        "name": "getValueCountByName",
        "desc": "获取任意组种任意值的数量"
      },
      {
        "id": "getgroupnobyvalue",
        "name": "getGroupNoByValue",
        "desc": "获取任意组种任意值的编号"
      },
      {
        "id": "getspcialvaluebyname",
        "name": "getSpcialValueByName",
        "desc": "获取最大最小值"
      }
    ]
  },
  {
    "class": "Customui",
    "name": "自定义UI接口",
    "functions": [
      {
        "name": "openUIView",
        "desc": "打开一个UI界面（注意：继承自player对象）",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiname",
            "type": "String",
            "name": "自定义界面的UIID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--有玩家进入游戏时，执行此函数\nlocal function player_enter(event)\n    local uin=event.eventobjid--进入游戏的玩家迷你号\n    local uiid=\"6986982063319417057\"--要打开的界面id\n    Player:openUIView(uin,uiid)--给玩家打开界面\nend\nScriptSupportEvent:registerEvent([=[Game.AnyPlayer.EnterGame]=],player_enter)"
      },
      {
        "name": "hideUIView",
        "desc": "隐藏一个UI界面（注意：继承自player对象）",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiname",
            "type": "String",
            "name": "自定义界面的UIID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local uin=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6986982063319417057\"--要隐藏的界面id\n    Player:hideUIView(uin,uiid)--给玩家隐藏界面\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=],clickblock)"
      },
      {
        "name": "setText",
        "desc": "设置文本元件内容（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          },
          {
            "key": "text",
            "type": "String",
            "name": "显示的内容"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6986982063319417057\"--界面id\n    local elementid=\"6986982063319417057_1\"--文本元件id\n    local text=\"你好呀\"--要设置的文本内容\n    --设置玩家的文本元件的显示内容\n    Customui:setText(playerid, uiid, elementid, text)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "setTexture",
        "desc": "设置文本元件图案纹理（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          },
          {
            "key": "url",
            "type": "String",
            "name": "图片ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6986982063319417057\"--界面id\n    local elementid=\"6986982063319417057_3\"--图片元件id\n    local url=\"10010\"--要设置的图案id\n    --设置玩家的图片元件的图案\n    Customui:setTexture(playerid, uiid, elementid, url)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "setSize",
        "desc": "设置元件大小（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          },
          {
            "key": "width",
            "type": "Number",
            "name": "元件宽度"
          },
          {
            "key": "height",
            "type": "Number",
            "name": "元件高度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6986982063319417057\"--界面id\n    local elementid=\"6986982063319417057_3\"--元件id\n    local width,height=500,200--设置元件的宽高\n    --设置玩家的元件的大小\n    Customui:setSize(playerid, uiid, elementid, width, height)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "setFontSize",
        "desc": "设置文本元件字体大小（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          },
          {
            "key": "size",
            "type": "Number",
            "name": "字体大小"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6986982063319417057\"--界面id\n    local elementid=\"6986982063319417057_1\"--文本元件id\n    local size=50--要设置的文本元件的字体大小\n    --设置玩家的文本元件的字体大小\n    Customui:setFontSize(playerid, uiid, elementid, size)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "setColor",
        "desc": "设置文本元件颜色（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          },
          {
            "key": "color",
            "type": "String",
            "name": "16进制颜色值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6986982063319417057\"--界面id\n    local elementid=\"6986982063319417057_1\"--元件id\n    local color=\"0xFF0000\"--要设置的元件颜色\n    --设置玩家的元件颜色\n    Customui:setColor(playerid, uiid, elementid, color)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "showElement",
        "desc": "显示元件（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6986982063319417057\"--要显示的元件所在的界面id\n    local elementid=\"6986982063319417057_1\"--要显示的元件id\n    --对玩家显示元件\n    Customui:showElement(playerid, uiid, elementid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=],clickblock)"
      },
      {
        "name": "hideElement",
        "desc": "隐藏元件（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6986982063319417057\"--要隐藏的元件所在的界面id\n    local elementid=\"6986982063319417057_1\"--要隐藏的元件id\n    --对玩家隐藏元件\n    Customui:hideElement(playerid, uiid, elementid)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=],clickblock)"
      },
      {
        "name": "rotateElement",
        "desc": "旋转元件（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          },
          {
            "key": "rotate",
            "type": "Number",
            "name": "旋转角度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6986982063319417057\"--要旋转的元件所在的界面id\n    local elementid=\"6986982063319417057_1\"--要旋转的元件id\n    local rotate=90--要旋转的度数（顺时针）\n    --对玩家旋转元件\n    Customui:rotateElement(playerid, uiid, elementid, rotate)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=],clickblock)"
      },
      {
        "name": "setState",
        "desc": "切换页面状态（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "statename",
            "type": "String",
            "name": "页面状态UIID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6997615793455979871\"--界面id\n    local statename=\"6997615793455979871-基础页面1\"--页面状态\n    --切换玩家的页面状态\n    Customui:setState(playerid, uiid, statename)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "setAlpha",
        "desc": "设置元件透明度（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          },
          {
            "key": "alpha",
            "type": "Number",
            "name": "透明度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6997615793455979871\"--界面id\n\tlocal elementid=\"6997615793455979871_1\"--元件id\n\tlocal alpha=99--透明度\n    --设置元件透明度\n    Customui:setAlpha(playerid, uiid, elementid, alpha)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "setPosition",
        "desc": "设置元件位置（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "自定义界面的UIID"
          },
          {
            "key": "elementid",
            "type": "String",
            "name": "元件的UIID"
          },
          {
            "key": "x",
            "type": "Number",
            "name": "坐标"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "坐标"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--玩家点击方块时，执行此函数\nlocal function clickblock(event)\n    local playerid=event.eventobjid--点击方块的玩家迷你号\n    local uiid=\"6997615793455979871\"--界面id\n\tlocal elementid=\"6997615793455979871_1\"--元件id\n\tlocal x,y=100,100--要设置到的坐标\n    --设置元件位置\n    Customui:setPosition(playerid, uiid, elementid, x, y)\nend\nScriptSupportEvent:registerEvent([=[Player.ClickBlock]=], clickblock)"
      },
      {
        "name": "getItemIcon",
        "desc": "获取道具类型图标iconID（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "itemid",
            "type": "Number",
            "name": "道具类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "iconid",
            "type": "Number",
            "name": "道具iconID"
          }
        ],
        "example": "local result,iconid = Customui:getItemIcon(itemid)"
      },
      {
        "name": "getMonsterObjIcon",
        "desc": "获取生物图标iconID（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "objid",
            "type": "Number",
            "name": "生物ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "iconid",
            "type": "Number",
            "name": "生物iconID"
          }
        ],
        "example": "local result,iconid = Customui:getMonsterObjIcon(objid)"
      },
      {
        "name": "getMonsterIcon",
        "desc": "获取生物类型图标iconID（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "actorid",
            "type": "Number",
            "name": "生物类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "iconid",
            "type": "Number",
            "name": "生物iconID"
          }
        ],
        "example": "local result,iconid = Customui:getMonsterIcon(actorid)"
      },
      {
        "name": "getStatusIcon",
        "desc": "获取状态类型图标iconID（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "buffid",
            "type": "Number",
            "name": "状态类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "iconid",
            "type": "Number",
            "name": "状态iconID"
          }
        ],
        "example": "local result,iconid = Customui:getStatusIcon(buffid)"
      },
      {
        "name": "getBlockIcon",
        "desc": "获取方块类型图标iconID（只在UI局部脚本有效）",
        "parm": [
          {
            "key": "blockid",
            "type": "Number",
            "name": "方块类型ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "iconid",
            "type": "Number",
            "name": "方块iconID"
          }
        ],
        "example": "local result,iconid = Customui:getBlockIcon(blockid)"
      },
      {
        "name": "getRoleIcon",
        "desc": "获取角色类型图标iconID",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "iconid",
            "type": "Number",
            "name": "角色iconID"
          }
        ],
        "example": "local result,iconid = Customui:getRoleIcon(playerid)"
      },
      {
        "name": "getShuctIcon",
        "desc": "获取玩家快捷栏道具图标iconID",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "ix",
            "type": "Number",
            "name": "快捷栏索引（1~8）"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "iconid",
            "type": "Number",
            "name": "道具iconID"
          }
        ],
        "example": "local result,iconid = Customui:getShuctIcon(playerid，ix)"
      },
      {
        "name": "SmoothMoveTo",
        "desc": "元件平滑移动到指定位置",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "界面ID"
          },
          {
            "key": "elementid",
            "type": "Number",
            "name": "元件ID"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "执行时间(需大于0)"
          },
          {
            "key": "x",
            "type": "Number",
            "name": "横坐标值"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "竖坐标值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Customui:SmoothMoveTo(playerid, uiid, elementid, time, x, y)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SmoothMoveBy",
        "desc": "元件平滑移动相对距离",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "界面ID"
          },
          {
            "key": "elementid",
            "type": "Number",
            "name": "元件ID"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "执行时间(需大于0)"
          },
          {
            "key": "w",
            "type": "Number",
            "name": "宽度"
          },
          {
            "key": "h",
            "type": "Number",
            "name": "高度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Customui:SmoothScaleBy(playerid, uiid, elementid, time, w, h)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SmoothScaleTo",
        "desc": "元件平滑改变到指定宽度和高度",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "界面ID"
          },
          {
            "key": "elementid",
            "type": "Number",
            "name": "元件ID"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "执行时间(需大于0)"
          },
          {
            "key": "w",
            "type": "Number",
            "name": "宽度"
          },
          {
            "key": "h",
            "type": "Number",
            "name": "高度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Customui:SmoothScaleTo(playerid, uiid, elementid, time, w, h)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SmoothScaleBy",
        "desc": "元件平滑改变相对宽度和高度",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "界面ID"
          },
          {
            "key": "elementid",
            "type": "Number",
            "name": "元件ID"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "执行时间(需大于0)"
          },
          {
            "key": "w",
            "type": "Number",
            "name": "宽度"
          },
          {
            "key": "h",
            "type": "Number",
            "name": "高度"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Customui:SmoothScaleBy(playerid, uiid, elementid, time, w, h)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SmoothRotateTo",
        "desc": "元件平滑旋转到指定角度",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "界面ID"
          },
          {
            "key": "elementid",
            "type": "Number",
            "name": "元件ID"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "执行时间(需大于0)"
          },
          {
            "key": "angle",
            "type": "Number",
            "name": "角度值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Customui:SmoothRotateTo(playerid, uiid, elementid, time, angle)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "SmoothRotateBy",
        "desc": "元件平滑旋转到相对角度",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "界面ID"
          },
          {
            "key": "elementid",
            "type": "Number",
            "name": "元件ID"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "执行时间(需大于0)"
          },
          {
            "key": "angle",
            "type": "Number",
            "name": "角度值"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Customui:SmoothRotateBy(playerid, uiid, elementid, time, angle)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "PlayElementAnim",
        "desc": "元件播放动画",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "界面ID"
          },
          {
            "key": "elementid",
            "type": "Number",
            "name": "元件ID"
          },
          {
            "key": "animid",
            "type": "Number",
            "name": "动画ID"
          },
          {
            "key": "time",
            "type": "Number",
            "name": "单次时长(需大于0)"
          },
          {
            "key": "mode",
            "type": "Number",
            "name": "播放模式循环1单次2(VIEDOPLAYMODE)VIEDOPLAYMODE"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Customui:PlayElementAnim(playerid, uiid, elementid, animid, time, mode)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "StopAnim",
        "desc": "元件停止动画",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "uiid",
            "type": "String",
            "name": "界面ID"
          },
          {
            "key": "elementid",
            "type": "Number",
            "name": "元件ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local code  = Customui:StopAnim(playerid, uiid, elementid)\nif code == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      }
    ]
  },
  {
    "class": "WorldContainer",
    "name": "容器接口",
    "functions": [
      {
        "name": "addFurnace",
        "desc": "新增熔炉",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--在(0,0)高度7生成熔炉\n--参数为要生成熔炉的位置的坐标\nWorldContainer:addFurnace(0,7,0)\n--在聊天框显示\nChat:sendSystemMsg(\"在(0,0)高度7的位置生成了一个熔炉！\")"
      },
      {
        "name": "removeFurnace",
        "desc": "移除熔炉",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除(0,0)高度7的熔炉(或其他方块)\n--参数为要移除的熔炉(或其他方块)的坐标\nWorldContainer:removeFurnace(0,7,0)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度7的位置的熔炉(或其他方块)被移除！\")"
      },
      {
        "name": "checkFurnace",
        "desc": "检测是否为熔炉",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--判断(0,0)高度7的位置是不是熔炉，参数为要判断的位置的坐标\nlocal result=WorldContainer:checkFurnace(0,7,0)\nif result==0 then--如果是熔炉\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置是熔炉\")\nelse--如果不是熔炉\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置不是熔炉\")\nend"
      },
      {
        "name": "getFurnaceHeatPercent",
        "desc": "获取熔炉热度百分比",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "val",
            "type": "Number",
            "name": "百分比"
          }
        ],
        "example": "--获取(0,0)高度7的位置的熔炉燃料热量剩余百分比，参数为熔炉坐标\nlocal result,val=WorldContainer:getFurnaceHeatPercent(0,7,0)\nif result==0 then--如果获取成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的熔炉燃料热量剩余百分比为：\"..val)\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"获取失败，可能(0,0)高度7的位置不是熔炉\")\nend"
      },
      {
        "name": "getFurnaceMeltPercent",
        "desc": "获取熔炉融化百分比",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "val",
            "type": "Number",
            "name": "百分比"
          }
        ],
        "example": "--获取(0,0)高度7的位置的熔炉当前已烧制的百分比，参数为熔炉坐标\nlocal result,val=WorldContainer:getFurnaceMeltPercent(0,7,0)\nif result==0 then--如果获取成功\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的熔炉当前已烧制的百分比为：\"..val)\nelse--如果获取失败\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"获取失败，可能(0,0)高度7的位置不是熔炉\")\nend"
      },
      {
        "name": "addStorageBox",
        "desc": "新增储物箱",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--在(0,0)高度7的位置生成一个储物箱，参数为要生成储物箱的坐标\nWorldContainer:addStorageBox(0,7,0)\n--在聊天框显示\nChat:sendSystemMsg(\"在(0,0)高度7的位置生成了一个储物箱！\")"
      },
      {
        "name": "removeStorageBox",
        "desc": "移除储物箱",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除(0,0)高度7的箱子(或其他方块)\n--参数为要移除的箱子(或其他方块)的坐标\nWorldContainer:removeStorageBox(0,7,0)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度7的位置的箱子(或其他方块)被移除！\")"
      },
      {
        "name": "checkStorage",
        "desc": "检测是否为储物箱",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--判断(0,0)高度7的位置是不是箱子，参数为要判断的位置的坐标\nlocal result=WorldContainer:checkStorage(0,7,0)\nif result==0 then--如果是箱子\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置是箱子\")\nelse--如果不是箱子\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置不是箱子\")\nend"
      },
      {
        "name": "clearStorageBox",
        "desc": "清空储物箱",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--清空指定坐标下箱子的物品，参数为要清空的箱子的坐标\nWorldContainer:clearStorageBox(0,7,0)\n--在聊天框显示\nChat:sendSystemMsg(\"清空了(0,0)高度7的箱子的物品\")"
      },
      {
        "name": "checkStorageEmptyGrid",
        "desc": "检测储物箱空余格子，传入道具ID则同时检测已存该道具的格子",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--判断(0,0)高度7的位置的储物箱有没有空余格子或指定物品\n--前三个参数为要判断的箱子的坐标\n--最后一个参数为要判断的物品id，0代表空余格子\nlocal result=checkStorageEmptyGrid(0,7,0,0)\nif result==0 then--如果有\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的储物箱还有空余格子\")\nelse--如果没有\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的储物箱没有空余格子\")\nend\n--判断有没有基岩，id为1\nresult=checkStorageEmptyGrid(0,7,0,1)\nif result==0 then--如果有\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的储物箱里有地心基石\")\nelse--如果没有\n\t--在聊天框显示\n\tChat:sendSystemMsg(\"(0,0)高度7的位置的储物箱没有地心基石\")\nend"
      },
      {
        "name": "setStorageItem",
        "desc": "设置储物箱道具",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "仓库格子索引"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--设置指定位置的箱子的指定格子的物品\n--前三个参数为要设置的箱子的坐标\n--第四个参数0为指定格子的序号，0为第一个格子\n--第五个参数为要放置的物品id，101为土块\n--最后一个参数为要放置的物品数量\nWorldContainer:setStorageItem(0,7,0,0,101,30)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度7的位置的箱子第一格，被放置了30个土块\")"
      },
      {
        "name": "getStorageItem",
        "desc": "获取储物箱道具ID",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "仓库格子索引"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "道具ID"
          },
          {
            "key": "itemNum",
            "type": "Number",
            "name": "道具数量"
          }
        ],
        "example": "--获取指定坐标下的箱子指定格子的物品id和数量\n--前三个参数为箱子坐标\n--最后一个参数为格子序号，0为第一格\nlocal result,itemid,itemNum=WorldContainer:getStorageItem(0,7,0,0)\n--在聊天框显示\nChat:sendSystemMsg(\"(0,0)高度7的位置的箱子的第一个格子，有\"..itemNum..\"个id为\"..itemid..\"的物品\")"
      },
      {
        "name": "addStorageItem",
        "desc": "给储物箱添加道具",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": "道具数量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "relNum",
            "type": "Number",
            "name": "成功添加数量"
          }
        ],
        "example": "--在指定坐标的箱子里添加指定物品\n--前三个参数为箱子坐标\n--第四个参数为要添加的物品的id，101为土块\n--最后一个参数为要添加的数量\nlocal result,relNum=WorldContainer:addStorageItem(0,7,0,101,99)\n--在聊天框显示\nChat:sendSystemMsg(\"尝试在(0,0)高度7位置的箱子里添加99个土块，实际添加了\"..relNum..\"个\")"
      },
      {
        "name": "removeStorageItemByID",
        "desc": "移除储物箱内指定类型的道具",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "道具类型ID"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "道具数量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除指定坐标下箱子的指定物品\n--前三个参数为箱子坐标\n--第四个参数为要移除的物品id，101是土块\n--最后一个参数为要移除的数量\nWorldContainer:removeStorageItemByID(0,7,0,101,10)\n--在聊天框显示\nChat:sendSystemMsg(\"移除了(0,0)高度7位置的箱子里的10个土块\")"
      },
      {
        "name": "removeStorageItemByIndex",
        "desc": "移除储物箱内指定格子的道具",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "offset",
            "type": "Number",
            "name": "储物箱格子索引，从0开始"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "道具数量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除指定坐标下箱子的指定格子的物品\n--前三个参数为箱子坐标\n--第四个参数为要移除的格子序号，0是第一格\n--最后一个参数为要移除的数量\nWorldContainer:removeStorageItemByIndex(0,7,0,0,5)\n--在聊天框显示\nChat:sendSystemMsg(\"把(0,0)高度7的位置的箱子里第一格的物品移除了5个\")"
      },
      {
        "name": "addItemToContainer",
        "desc": "将一定数量道具添加到储物箱中",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": ""
          },
          {
            "key": "num",
            "type": "Number",
            "name": "道具数量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          },
          {
            "key": "relNum",
            "type": "Number",
            "name": "成功添加数量"
          }
        ],
        "example": "--在指定坐标的箱子里添加指定物品\n--前三个参数为箱子坐标\n--第四个参数为要添加的物品的id，101为土块\n--最后一个参数为要添加的数量\nlocal result,relNum=WorldContainer:addItemToContainer(0,7,0,101,99)\n--在聊天框显示\nChat:sendSystemMsg(\"尝试在(0,0)高度7位置的箱子里添加99个土块，实际添加了\"..relNum..\"个\")"
      },
      {
        "name": "removeContainerItemByID",
        "desc": "移除储物箱内一定数量道具",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "y",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "z",
            "type": "Number",
            "name": "储物箱位置"
          },
          {
            "key": "itemid",
            "type": "Number",
            "name": "道具类型ID"
          },
          {
            "key": "num",
            "type": "Number",
            "name": "道具数量"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--移除指定坐标下箱子的指定物品\n--前三个参数为箱子坐标\n--第四个参数为要移除的物品id，101是土块\n--最后一个参数为要移除的数量\nWorldContainer:removeContainerItemByID(0,7,0,101,10)\n--在聊天框显示\nChat:sendSystemMsg(\"移除了(0,0)高度7位置的箱子里的10个土块\")"
      },
      {
        "name": "clearContainer",
        "desc": "清空指定位置的储物箱",
        "parm": [
          {
            "key": "x",
            "type": "Number",
            "name": ""
          },
          {
            "key": "y",
            "type": "Number",
            "name": ""
          },
          {
            "key": "z",
            "type": "Number",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "--清空指定坐标下箱子的物品，参数为要清空的箱子的坐标\nWorldContainer:clearContainer(0,7,0)\n--在聊天框显示\nChat:sendSystemMsg(\"清空了(0,0)高度7的箱子的物品\")"
      }
    ]
  },
  {
    "class": "DisPlayBoard",
    "name": "显示板管理接口",
    "functions": [
      {
        "name": "showBoard",
        "desc": "对玩家显示显示板",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "boardid",
            "type": "Number",
            "name": "显示板ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = DisPlayBoard:showBoard(playerid, boardid)"
      },
      {
        "name": "hideBoard",
        "desc": "对玩家隐藏显示板",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "boardid",
            "type": "Number",
            "name": "显示板ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = DisPlayBoard:hideBoard(playerid, boardid)"
      },
      {
        "name": "setBoardPicture",
        "desc": "对玩家设置显示板的图片",
        "parm": [
          {
            "key": "playerid",
            "type": "Number",
            "name": "玩家ID"
          },
          {
            "key": "boardid",
            "type": "Number",
            "name": "显示板ID"
          },
          {
            "key": "pictureid",
            "type": "String",
            "name": "图片ID"
          }
        ],
        "ret": [
          {
            "key": "code",
            "type": "Number",
            "name": "状态码"
          }
        ],
        "example": "local result = DisPlayBoard:setBoardPicture(playerid, boardid, pictureid)"
      }
    ]
  },
  {
    "class": "CloudSever",
    "name": "云服数据存储接口",
    "functions": [
      {
        "name": "setOrderDataBykey",
        "desc": "设置排行榜中指定键的数值",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "排行榜变量设计名"
          },
          {
            "key": "key",
            "type": "String",
            "name": "获取的键值"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "设置的数值"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local libvarname = 'rank_1'\nlocal ret = CloudSever:setOrderDataBykey(libvarname,\"key1\",1)\nif ret == ErrorCode.OK then\n    print('设置排行榜值成功 k = key1 ,v = 1')\nelse\n    print('设置排行榜值失败')\nend"
      },
      {
        "name": "removeOrderDataByKey",
        "desc": "删除排行榜中指定键的数值",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "排行榜变量设计名"
          },
          {
            "key": "key",
            "type": "String",
            "name": "获取的键值"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local libvarname = 'rank_1'\nlocal ret = CloudSever:removeOrderDataByKey(libvarname,\"key1\")\nif ret == ErrorCode.OK then\n    print('删除排行榜数据成功')\nelse\n    print(\"删除排行榜数据失败\")\nend"
      },
      {
        "name": "getOrderDataByKeyEx",
        "desc": "获取排行榜中指定键的数值",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "排行榜变量设计名"
          },
          {
            "key": "key",
            "type": "String",
            "name": "获取的键值"
          },
          {
            "key": "callback",
            "type": "function",
            "name": "更新回调"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local callback = function (ret,k,v,ix) -- 返回结果不一定有排名\n    if ret == ErrorCode.OK then\n        if ix then\n            print('返回数据成功 键= '..k..' 值='..v..' 排名='..ix )\n        else\n            print('返回数据成功 键= '..k..' 值='..v)\n        end\n    else\n        if ret == 2 then --=不存在数据\n            print('数据不存在')\n        else\n            print('获取失败')\n        end\n    end\nend\nlocal libvarname = 'rank_1'\nlocal ret = CloudSever:getOrderDataByKeyEx(libvarname,\"key1\",callback)\nif ret == ErrorCode.OK then\n    print('请求排行榜数据成功')\nelse\n    print(\"请求排行榜数据失败\")\nend"
      },
      {
        "name": "getOrderDataIndexValueEx",
        "desc": "获取排行榜中指定排名的数值",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "排行榜变量设计名"
          },
          {
            "key": "index",
            "type": "Number",
            "name": "获取数据的名次"
          },
          {
            "key": "callback",
            "type": "function",
            "name": "更新回调"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local callback = function (ret,k,v,ix)\n    if ret == ErrorCode.OK then\n        print('返回数据成功 键= '..k..' 值='..v..' 排名='..ix )\n    else\n        if ret == 2 then --=不存在数据\n            print('数据不存在')\n        else\n            print('获取失败')\n        end\n    end\nend\nlocal libvarname = 'rank_1'---4\nlocal ret = CloudSever:getOrderDataIndexValueEx(libvarname,1,callback) -- 请求第1名的数据\nif ret == ErrorCode.OK then\n    print('请求排行榜数据成功')\nelse\n    print(\"请求排行榜数据失败\")\nend"
      },
      {
        "name": "ClearOrderData",
        "desc": "清理排行榜",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "排行榜变量设计名"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local libvarname = 'rank_1'\nlocal ret = CloudSever:ClearOrderData(libvarname) -- 清空排行榜\nif ret == ErrorCode.OK then\n    print('清空排行榜值成功')\nelse\n    print('清空排行榜值失败')\nend"
      },
      {
        "name": "automaticByKey",
        "desc": "变量自运算",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "排行榜变量设计名"
          },
          {
            "key": "key",
            "type": "String",
            "name": "获取的键值"
          },
          {
            "key": "value",
            "type": "Number",
            "name": "每次加的值"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local libvarname = 'rank_1'\nlocal value = 10\nlocal ret = CloudSever:automaticByKey(libvarname,\"key1\",value) -- 设置自运算值加10\nif ret == ErrorCode.OK then\n    print('设置排行榜值成功 k = key1 ,v = 1')\nelse\n    print('设置排行榜值失败')\nend"
      },
      {
        "name": "getOrderDataIndexAreaEx",
        "desc": "\n获取排行榜中多条数据\n(一次最多100条数据)\n",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "排行榜变量设计名"
          },
          {
            "key": "icount",
            "type": "Number",
            "name": "获取数据的条数"
          },
          {
            "key": "callback",
            "type": "function",
            "name": "更新回调"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--百人排行榜展示例子\nlocal libvarname = 'rank_1'--排行榜名称\nlocal reqcount = 100 --榜单上线\nlocal refreshdt = 10 --首次请求间隔\nlocal updatetime = 0 --当前更新时间\nlocal RankInfos = {}\nlocal function func_runtime(param)\n    local curtime = os.time()\n    if curtime - updatetime > refreshdt then\n        updatetime = curtime\n        local tmfos = {}\n        local callback = function (ret,value) -- 返回结果不一定有排名\n            if ret == ErrorCode.OK and value then\n                refreshdt = 1200 --刷新时间修改\n                for ix,  v in pairs(value) do\n                    table.insert(tmfos,v)\n                end\n                if #tmfos == reqcount or #tmfos > #RankInfos then\n                    RankInfos = tmfos\n                end\n            end\n        end\n        local ret = CloudSever:getOrderDataIndexAreaEx(libvarname,reqcount,callback)\n        if ret == ErrorCode.OK then\n            print('请求排行榜数据成功')\n        else\n            print(\"请求排行榜数据失败\")\n        end\n    end\nend\nScriptSupportEvent:registerEvent('Game.RunTime', func_runtime)\nlocal RankUI  = \"7275576434651487802\" -- 填入UIID\nlocal RefishTxt =\n{\n    -- {\"名次\",'昵称','分数'}的元件ID,\n    {\"7275576434651487802_1\",'7275576434651487802_2','7275576434651487802_3'},\n}\nlocal PageItemCount = #RefishTxt\nlocal AllUserinfo = {}\nlocal function RankRefish(uin)\n    if not AllUserinfo[uin] then AllUserinfo[uin] = 0 end\n    print(AllUserinfo[uin])\n    local istr = AllUserinfo[uin]*PageItemCount + 1\n    if istr > #RankInfos  then return end\n    for i = 1, PageItemCount, 1 do\n        if RefishTxt[i] then\n            if istr <= #RankInfos  then\n                Customui:setText(uin,RankUI,RefishTxt[i][1],tostring(istr))\n                Customui:setText(uin,RankUI,RefishTxt[i][2],tostring(RankInfos[istr].nick or RankInfos[istr].k))\n                Customui:setText(uin,RankUI,RefishTxt[i][3],tostring(RankInfos[istr].v))\n                istr = istr + 1\n            else\n                Customui:setText(uin,RankUI,RefishTxt[i][1],\"\")\n                Customui:setText(uin,RankUI,RefishTxt[i][2],\"\")\n                Customui:setText(uin,RankUI,RefishTxt[i][3],\"\")\n            end\n        end\n    end\nend\nlocal function func_openui(e)\n    if #RankInfos > 0 and e.CustomUI == RankUI then\n        local uin = e.eventobjid\n        AllUserinfo[uin] = 0\n        RankRefish(uin)\n    end\nend\nScriptSupportEvent:registerEvent('UI.Show', func_openui)\n--[[\n--翻页功能\nlocal pageupele = \"7275576434651487802_7\" -- 填入向上翻页按钮节点\nlocal pagedownele = \"7275576434651487802_8\"-- 填入向下翻页按钮节点\nlocal function func_page(e)\n    local uin = e.eventobjid\n    if  uin and  e.btnelenemt then\n        if e.btnelenemt ==  pageupele then\n            if not AllUserinfo[uin] then AllUserinfo[uin] = 0 end\n            AllUserinfo[uin] =  AllUserinfo[uin] + 1\n            if AllUserinfo[uin] > math.ceil(#RankInfos / PageItemCount )  then AllUserinfo[uin] = math.ceil(#RankInfos / PageItemCount) return end\n            RankRefish(uin)\n        elseif e.btnelenemt ==  pagedownele then\n            if not AllUserinfo[uin] then AllUserinfo[uin] = 0 end\n            AllUserinfo[uin] =  AllUserinfo[uin] -  1\n            if AllUserinfo[uin] < 0  then AllUserinfo[uin] = 0 return end\n            RankRefish(uin)\n        end\n    end\nend\nScriptSupportEvent:registerEvent('UI.Button.Click', func_page)\n]]--"
      },
      {
        "name": "getOrderDataValueAreaEx",
        "desc": "\n获取排行榜中指定值区域的前多少名数据\n(一次最多100条数据)\n",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "排行榜变量设计名"
          },
          {
            "key": "icount",
            "type": "Number",
            "name": "获取数据的条数"
          },
          {
            "key": "minvalue",
            "type": "Number",
            "name": "最小值"
          },
          {
            "key": "maxvalue",
            "type": "Number",
            "name": "最大值"
          },
          {
            "key": "callback",
            "type": "function",
            "name": "更新回调"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local callback = function (ret,value)\n    if ret == ErrorCode.OK and value then\n        for ix,  v in pairs(value) do\n            local txt = '第'.. ix..'名'..'键 = ' ..v.k..'值 = '..v.v\n            print(txt)\n        end\n    end\nend\nlocal libvarname = 'rank_1'\nlocal ret  = CloudSever:getOrderDataValueAreaEx(libvarname,-2,50,200,callback) -- 请求值是50 - 200的从大到小排序的前2名的数据\nif ret == ErrorCode.OK then\n    print('请求排行榜数据成功')\nelse\n    print(\"请求排行榜数据失败\")\nend"
      },
      {
        "name": "setDataListBykey",
        "desc": "设置表中指定键的值",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "表变量设计名"
          },
          {
            "key": "key",
            "type": "String",
            "name": "获取的键值"
          },
          {
            "key": "value",
            "type": "",
            "name": ""
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local libvarname = 'list_1'\nlocal ret = CloudSever:setDataListBykey(libvarname,\"key1.score\",1)\nif ret == ErrorCode.OK then\n    print('设置排行榜值成功 k = key1 ,v = 1')\nelse\n    print('设置排行榜值失败')\nend"
      },
      {
        "name": "removeDataListByKey",
        "desc": "删除表中指定键的值",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "表变量设计名"
          },
          {
            "key": "key",
            "type": "String",
            "name": "获取的键值"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local libvarname = 'list_1'\nlocal ret = CloudSever:removeDataListByKey(libvarname,\"key1.score\") --获取key1的分数\nif ret == ErrorCode.OK then\n    print('请求删除排行榜数据成功')\nelse\n    print(\"请求删除排行榜数据失败\")\nend"
      },
      {
        "name": "getDataListByKeyEx",
        "desc": "获取表中指定键的值",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "表变量设计名"
          },
          {
            "key": "key",
            "type": "String",
            "name": "获取的键值"
          },
          {
            "key": "callback",
            "type": "function",
            "name": "更新回调"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local callback = function (ret,k,v)\n    if ret == ErrorCode.OK then\n        print('获取数据成功 键= '..k..' 值='..v)\n    else\n        if ret == 2 then --=不存在数据\n            print('数据不存在')\n        else\n            print('获取失败')\n        end\n    end\nend\nlocal libvarname = 'list_1'\nlocal ret = CloudSever:getDataListByKeyEx(libvarname,\"key1.score\",callback) --获取key1的分数\nif ret == ErrorCode.OK then\n    print('请求排行榜数据成功')\nelse\n    print(\"请求排行榜数据失败\")\nend"
      },
      {
        "name": "ClearDataList",
        "desc": "清空表数据",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "表变量设计名"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local libvarname = 'list_1'\nlocal ret = CloudSever:ClearDataList(libvarname)\nif ret == ErrorCode.OK then\n    print('清空表成功')\nelse\n    print('清空表失败')\nend"
      },
      {
        "name": "getlistCache",
        "desc": "获取表或排行榜当前缓存数据",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "表变量设计名"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local libvarname = 'list_1'\nlocal ret,values = CloudSever:getlistCache(libvarname)\nif ret == ErrorCode.OK then\n    print('获取数据成功')\nelse\n    print('获取数据失败')\nend"
      },
      {
        "name": "UpdateDataListByKey",
        "desc": "安全更新数据",
        "parm": [
          {
            "key": "libvarname",
            "type": "String",
            "name": "表变量设计名"
          },
          {
            "key": "key",
            "type": "String",
            "name": "更新的键值"
          },
          {
            "key": "callback",
            "type": "function",
            "name": "更新回调"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local callback = function (ret,key,value)\n    -- ret 0 很遗憾，数据冲突了，\n    -- 需要根据带回来的最新value进行逻辑处理后返回给底层重试\n    if ret == 0 then\n        print(\"有冲突，这是数据库里最新的值\" , value)\n        --逻辑处理\n        value = value + 1\n        --返回给底层重试\n        return value\n    -- ret 2 修改成功啦\n    elseif ret == 2 then\n        print(\"成功，更新后的值 \" , value)\n    end\n  end\n  local ret = CloudSever:UpdateDataListByKey('list','score',callback)\n  if ret == ErrorCode.OK then\n  end"
      },
      {
        "name": "SendSeverMsg",
        "desc": "发送服务通知消息",
        "parm": [
          {
            "key": "msg",
            "type": "String",
            "name": "消息名称"
          },
          {
            "key": "customdata",
            "type": "any",
            "name": "消息附带参数"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "--派发自定义事件\nlocal function func_event(param)\n    local data = {id = 123,ops = \"aaa\"} --自定义事件带入的参数\n    local ok, json = pcall(JSON.encode, JSON, data) --转换成json格式\n    CloudSever:SendSeverMsg(\"customevent\",{customdata = json}) -- 发送云服消息广播\nend\nScriptSupportEvent:registerEvent('Player.PlayAction', func_event)\n--云服消息广播监听\nlocal function func_event(param)\n    print(param) --打印自定义事件参数\nend\nScriptSupportEvent:registerEvent('customevent', func_event)"
      },
      {
        "name": "TransmitToMap",
        "desc": "传送玩家到指定地图",
        "parm": [
          {
            "key": "playerid",
            "type": "uin",
            "name": "玩家UIN或玩家uin的数组"
          },
          {
            "key": "mapid",
            "type": "Number",
            "name": "地图ID"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local ret  = CloudSever:TransmitToMap(playerid, mapid)\nif ret == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "TransmitToRoom",
        "desc": "传送玩家到指定房间",
        "parm": [
          {
            "key": "playerid",
            "type": "uin",
            "name": "玩家UIN或玩家uin的数组"
          },
          {
            "key": "roomid",
            "type": "String",
            "name": "房间ID"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local ret  = CloudSever:TransmitToRoom(playerid, roomid)\nif ret == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "TransmitOtherRoom",
        "desc": "传送玩家其他房间",
        "parm": [
          {
            "key": "playerid",
            "type": "uin",
            "name": "玩家UIN或玩家uin的数组"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local ret  = CloudSever:TransmitOtherRoom(playerid)\nif ret == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "GetRoomID",
        "desc": "获取当前云服房间ID",
        "parm": [],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          },
          {
            "key": "roomid",
            "type": "String",
            "name": "房间ID"
          }
        ],
        "example": "local ret ,roomid = CloudSever:GetRoomID()\nif ret == ErrorCode.OK then\n    print('执行成功' ,roomid )\nelse\n    print('执行失败')\nend"
      },
      {
        "name": "TransmitToCategoryRoom",
        "desc": "传送玩家到指定分类房间",
        "parm": [
          {
            "key": "playerid",
            "type": "uin",
            "name": "玩家UIN或玩家uin的数组"
          }
        ],
        "ret": [
          {
            "key": "ret",
            "type": "Number",
            "name": "成功(ErrorCode.OK)ErrorCode"
          }
        ],
        "example": "local ret  = CloudSever:TransmitOtherRoom(playerid)\nif ret == ErrorCode.OK then\n    print('执行成功'  )\nelse\n    print('执行失败')\nend"
      }
    ]
  }
]
